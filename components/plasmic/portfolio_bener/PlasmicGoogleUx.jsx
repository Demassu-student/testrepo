// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 578p2KiWp3ZSUFPY7FrhK3
// Component: rApXcfRnVYy
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavigationBar from "../../NavigationBar"; // plasmic-import: BLtbByl5tB5/component
import Select from "../../Select"; // plasmic-import: 3Vr7VM3BiE8vGJ/component
import { useScreenVariants as useScreenVariantstU3UFp3Zwbn8D } from "../new_ones/PlasmicGlobalVariant__Screen"; // plasmic-import: _tU3UFp3Zwbn8d/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../new_ones/plasmic_new_ones.module.css"; // plasmic-import: 578p2KiWp3ZSUFPY7FrhK3/projectcss
import sty from "./PlasmicGoogleUx.module.css"; // plasmic-import: rApXcfRnVYy/css
import TooltipIcon from "../new_ones/icons/PlasmicIcon__Tooltip"; // plasmic-import: jbJru8BSTWZZmG/icon
import ChecksvgIcon from "../new_ones/icons/PlasmicIcon__Checksvg"; // plasmic-import: C3f3FgCnH9VKtI/icon
import Icon4Icon from "../new_ones/icons/PlasmicIcon__Icon4"; // plasmic-import: bbY45N8hXda0bx/icon
import Divider2Icon from "../new_ones/icons/PlasmicIcon__Divider2"; // plasmic-import: wszRZDHrfCJaE9/icon
import ArrowUpRight2Icon from "../new_ones/icons/PlasmicIcon__ArrowUpRight2"; // plasmic-import: J3O_4eStjkD7ZV/icon
import CopyIcon from "../new_ones/icons/PlasmicIcon__Copy"; // plasmic-import: 3hWh_eWxbClQvX/icon
import SocialIconIcon from "../new_ones/icons/PlasmicIcon__SocialIcon"; // plasmic-import: 4p046xg_E92q0B/icon
import SocialIcon2Icon from "../new_ones/icons/PlasmicIcon__SocialIcon2"; // plasmic-import: cVIq4NUX5C4QL_/icon
import Group9Icon from "../new_ones/icons/PlasmicIcon__Group9"; // plasmic-import: RDagWvZuGPzEwr/icon

export const PlasmicGoogleUx__VariantProps = new Array();

export const PlasmicGoogleUx__ArgProps = new Array(
  "children2",
  "startIcon",
  "children",
  "endIcon"
);

function PlasmicGoogleUx__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstU3UFp3Zwbn8D()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <NavigationBar
            data-plasmic-name={"navigationBar"}
            data-plasmic-override={overrides.navigationBar}
            className={classNames("__wab_instance", sty.navigationBar)}
          >
            {p.renderPlasmicSlot({
              defaultContents: (
                <Select
                  className={classNames("__wab_instance", sty.select__spwD4)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jbcJj
                      )}
                    >
                      {"Selected works"}
                    </div>
                  }
                  selectedContent={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eykYi
                      )}
                    >
                      {"Selected works"}
                    </div>
                  }
                />
              ),

              value: args.children2
            })}
          </NavigationBar>

          <div
            data-plasmic-name={"blogPosts"}
            data-plasmic-override={overrides.blogPosts}
            className={classNames(projectcss.all, sty.blogPosts)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__njdOf)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "516px"
                  : "516px"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "100%"
              }
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "1440px"
              }
              loading={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "lazy"
                  : "lazy"
              }
              src={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? {
                      src: "/plasmic/new_ones/images/headerImage2.svg",
                      fullWidth: 1440,
                      fullHeight: 516,
                      aspectRatio: 2.790698
                    }
                  : {
                      src: "/plasmic/new_ones/images/headerImage2.svg",
                      fullWidth: 1440,
                      fullHeight: 516,
                      aspectRatio: 2.790698
                    }
              }
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame178"}
              data-plasmic-override={overrides.frame178}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame178)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame170"}
                data-plasmic-override={overrides.frame170}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame170)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame176"}
                  data-plasmic-override={overrides.frame176}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame176)}
                >
                  <div
                    data-plasmic-name={"subheading"}
                    data-plasmic-override={overrides.subheading}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.subheading
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Published 27 February 2022"
                      : "Published 27 February 2022"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame175"}
                    data-plasmic-override={overrides.frame175}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame175)}
                  >
                    <div
                      data-plasmic-name={"heading"}
                      data-plasmic-override={overrides.heading}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.heading
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Billie - A personal Budgeting app"
                        : "Google UX Certification - Create High-Fidelity Designs and Prototypes in Figma: Nutricats Case Study"}
                    </div>

                    <div
                      data-plasmic-name={"supportingText"}
                      data-plasmic-override={overrides.supportingText}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.supportingText
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Billie is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction."
                        : "Nutricats is a nutrition tracking app that offers a delivery service for a cat owner to buy a cat food-related product. The app is a B2C marketplace that provides support for cat owners to manage their cat food consumption and gives an insight into health nutrition and calories composition."}
                    </div>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame177"}
                  data-plasmic-override={overrides.frame177}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame177)}
                >
                  <div
                    data-plasmic-name={"badgeBase"}
                    data-plasmic-override={overrides.badgeBase}
                    className={classNames(projectcss.all, sty.badgeBase)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eCaQb
                      )}
                    >
                      {"Design"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"badgeBase2"}
                    data-plasmic-override={overrides.badgeBase2}
                    className={classNames(projectcss.all, sty.badgeBase2)}
                  >
                    <div
                      data-plasmic-name={"text2"}
                      data-plasmic-override={overrides.text2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text2
                      )}
                    >
                      {"Research"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"badgeBase3"}
                    data-plasmic-override={overrides.badgeBase3}
                    className={classNames(projectcss.all, sty.badgeBase3)}
                  >
                    <div
                      data-plasmic-name={"text3"}
                      data-plasmic-override={overrides.text3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text3
                      )}
                    >
                      {"Mockup"}
                    </div>
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={"tooltip"}
                  data-plasmic-override={overrides.tooltip}
                  className={classNames(projectcss.all, sty.tooltip)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__btd52)}
                  >
                    <TooltipIcon
                      className={classNames(projectcss.all, sty.svg__tzZt6)}
                      role={"img"}
                    />
                  </div>

                  <div
                    data-plasmic-name={"content3"}
                    data-plasmic-override={overrides.content3}
                    className={classNames(projectcss.all, sty.content3)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"textAndSupportingText2"}
                      data-plasmic-override={overrides.textAndSupportingText2}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.textAndSupportingText2
                      )}
                    >
                      <div
                        data-plasmic-name={"text28"}
                        data-plasmic-override={overrides.text28}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text28
                        )}
                      >
                        {"You're on a pre-published view"}
                      </div>

                      <div
                        data-plasmic-name={"supportingText7"}
                        data-plasmic-override={overrides.supportingText7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.supportingText7
                        )}
                      >
                        {
                          "This page is on a development for the content writing"
                        }
                      </div>
                    </p.Stack>
                  </div>
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              hasGap={true}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                hasGap={true}
                className={classNames(projectcss.all, sty.container)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content"}
                  data-plasmic-override={overrides.content}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"containerHighlighted"}
                    data-plasmic-override={overrides.containerHighlighted}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.containerHighlighted
                    )}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"containter"}
                      data-plasmic-override={overrides.containter}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.containter)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"role"}
                        data-plasmic-override={overrides.role}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.role)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tmEd6
                          )}
                        >
                          {"Role"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText2"}
                          data-plasmic-override={overrides.supportingText2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText2
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "UXUI Designer"
                            : "UXUI Designer"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"scope"}
                        data-plasmic-override={overrides.scope}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.scope)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jjcfV
                          )}
                        >
                          {"Scope"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText3"}
                          data-plasmic-override={overrides.supportingText3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText3
                          )}
                        >
                          {
                            "Conducting interviews, Define pain points,\nIdeate on solution, paper and digital wireframing, low and high fidelity prototyping,\nconducting usability studies, accounting for\naccessibility, and iterating on designs."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"container2"}
                      data-plasmic-override={overrides.container2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.container2)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame179"}
                        data-plasmic-override={overrides.frame179}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame179)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"projectObjective"}
                          data-plasmic-override={overrides.projectObjective}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.projectObjective
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__p6KrN
                            )}
                          >
                            {"Project Objective"}
                          </div>

                          <div
                            data-plasmic-name={"supportingText4"}
                            data-plasmic-override={overrides.supportingText4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.supportingText4
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "To create a mockup for Monthly Spending & Income Feature, from defining to designing"
                              : "Design an app that facilitates a cat owner to be able to get insight, manage and plan a cat’s health from food"}
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"timeline"}
                          data-plasmic-override={overrides.timeline}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.timeline)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ix9I9
                            )}
                          >
                            {"Timeline"}
                          </div>

                          <div
                            data-plasmic-name={"supportingText5"}
                            data-plasmic-override={overrides.supportingText5}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.supportingText5
                            )}
                          >
                            {"January 2022 – March 2022"}
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"timeline2"}
                          data-plasmic-override={overrides.timeline2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.timeline2)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kFYaw
                            )}
                          >
                            {"Download Case Study"}
                          </div>

                          {true ? (
                            <div
                              data-plasmic-name={"supportingText8"}
                              data-plasmic-override={overrides.supportingText8}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.supportingText8
                              )}
                            >
                              {"January 2022 – March 2022"}
                            </div>
                          ) : null}

                          <p.Stack
                            as={p.PlasmicLink}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__peOBy
                            )}
                            component={Link}
                            href={
                              "https://drive.google.com/file/d/1wYeRj8TBL8YlUQSG4dW5Su_K6OGL0BMa/view?usp=sharing"
                            }
                            platform={"nextjs"}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"startIconContainer"}
                                data-plasmic-override={
                                  overrides.startIconContainer
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.startIconContainer
                                )}
                              >
                                {p.renderPlasmicSlot({
                                  defaultContents: (
                                    <ChecksvgIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__lsebA
                                      )}
                                      role={"img"}
                                    />
                                  ),

                                  value: args.startIcon,
                                  className: classNames(sty.slotTargetStartIcon)
                                })}
                              </div>
                            ) : null}

                            <div
                              data-plasmic-name={"contentContainer"}
                              data-plasmic-override={overrides.contentContainer}
                              className={classNames(
                                projectcss.all,
                                sty.contentContainer
                              )}
                            >
                              {p.renderPlasmicSlot({
                                defaultContents: "Pdf",
                                value: args.children,
                                className: classNames(sty.slotTargetChildren)
                              })}
                            </div>

                            {false ? (
                              <div
                                data-plasmic-name={"endIconContainer"}
                                data-plasmic-override={
                                  overrides.endIconContainer
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.endIconContainer
                                )}
                              >
                                {p.renderPlasmicSlot({
                                  defaultContents: (
                                    <Icon4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__dLZlC
                                      )}
                                      role={"img"}
                                    />
                                  ),

                                  value: args.endIcon,
                                  className: classNames(sty.slotTargetEndIcon)
                                })}
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"container3"}
                data-plasmic-override={overrides.container3}
                hasGap={true}
                className={classNames(projectcss.all, sty.container3)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content2"}
                  data-plasmic-override={overrides.content2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"richText"}
                    data-plasmic-override={overrides.richText}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.richText)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section2"}
                      data-plasmic-override={overrides.section2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section2)}
                    >
                      <div
                        data-plasmic-name={"heading2"}
                        data-plasmic-override={overrides.heading2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading2
                        )}
                      >
                        {"Project Overview"}
                      </div>

                      <div
                        data-plasmic-name={"intro"}
                        data-plasmic-override={overrides.intro}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.intro
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction.\n\n\r\nI did simple planning in Google Spreadsheet. The primary tool that I used is Figma, as a tool to brainstorm, make initial pain points, initial customer flow, and as a design and prototype tool. For the logo, I created it in adobe illustrator."
                          : "Nutricats is a nutrition tracking app that offers a delivery service for a cat owner to buy a cat food related product. The app is a B2C marketplace that\nprovides support for cat owners to manage their cat food consumption and gives an insight into health nutrition and calories composition."}
                      </div>

                      <Divider2Icon
                        className={classNames(projectcss.all, sty.svg__ke0Vp)}
                        role={"img"}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section3"}
                      data-plasmic-override={overrides.section3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section3)}
                    >
                      <div
                        data-plasmic-name={"heading3"}
                        data-plasmic-override={overrides.heading3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading3
                        )}
                      >
                        {"The Problem"}
                      </div>

                      <div
                        data-plasmic-name={"intro2"}
                        data-plasmic-override={overrides.intro2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.intro2
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction.\n\n\r\nI did simple planning in Google Spreadsheet. The primary tool that I used is Figma, as a tool to brainstorm, make initial pain points, initial customer flow, and as a design and prototype tool. For the logo, I created it in adobe illustrator."
                          : "Cat owners had a problem keeping track of their cat’s nutrition and calorie composition of food they buy from a pet shop."}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section18"}
                      data-plasmic-override={overrides.section18}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section18)}
                    >
                      <div
                        data-plasmic-name={"heading10"}
                        data-plasmic-override={overrides.heading10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading10
                        )}
                      >
                        {"The Goal"}
                      </div>

                      <div
                        data-plasmic-name={"intro3"}
                        data-plasmic-override={overrides.intro3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.intro3
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction.\n\n\r\nI did simple planning in Google Spreadsheet. The primary tool that I used is Figma, as a tool to brainstorm, make initial pain points, initial customer flow, and as a design and prototype tool. For the logo, I created it in adobe illustrator."
                          : "Design an app that facilitates a cat owner to be able to get insight, manage and plan a cat’s health from food"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section4"}
                      data-plasmic-override={overrides.section4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section4)}
                    >
                      <div
                        data-plasmic-name={"heading4"}
                        data-plasmic-override={overrides.heading4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading4
                        )}
                      >
                        {"Design Process"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph2"}
                        data-plasmic-override={overrides.paragraph2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph2
                        )}
                      >
                        {
                          "I used Design Thinking as a framework process for this project."
                        }
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__m1AN
                          )}
                        >
                          <dl
                            data-plasmic-name={"intro4"}
                            data-plasmic-override={overrides.intro4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.intro4
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "screen",
                              "mobileOnly"
                            ) ? (
                              "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction.\n\n\r\nI did simple planning in Google Spreadsheet. The primary tool that I used is Figma, as a tool to brainstorm, make initial pain points, initial customer flow, and as a design and prototype tool. For the logo, I created it in adobe illustrator."
                            ) : (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h5
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h5,
                                    projectcss.__wab_text,
                                    sty.h5___9JhE
                                  )}
                                >
                                  {"Understanding the User"}
                                </h5>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            )}
                          </dl>

                          <div
                            data-plasmic-name={"paragraph27"}
                            data-plasmic-override={overrides.paragraph27}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph27
                            )}
                          >
                            {"User research"}
                          </div>

                          <div
                            data-plasmic-name={"paragraph28"}
                            data-plasmic-override={overrides.paragraph28}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph28
                            )}
                          >
                            {"Persona"}
                          </div>

                          <div
                            data-plasmic-name={"paragraph29"}
                            data-plasmic-override={overrides.paragraph29}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph29
                            )}
                          >
                            {"Problem Statement"}
                          </div>

                          <div
                            data-plasmic-name={"paragraph30"}
                            data-plasmic-override={overrides.paragraph30}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph30
                            )}
                          >
                            {"User journey maps"}
                          </div>
                        </div>
                      ) : null}
                    </p.Stack>

                    {true ? (
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg"}
                        data-plasmic-override={overrides.richTextImg}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.richTextImg)}
                      >
                        <div
                          data-plasmic-name={"image"}
                          data-plasmic-override={overrides.image}
                          className={classNames(projectcss.all, sty.image)}
                        />

                        <div
                          data-plasmic-name={"text4"}
                          data-plasmic-override={overrides.text4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text4
                          )}
                        >
                          {"Image of Design Process"}
                        </div>
                      </p.Stack>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section5"}
                      data-plasmic-override={overrides.section5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section5)}
                    >
                      <div
                        data-plasmic-name={"heading5"}
                        data-plasmic-override={overrides.heading5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading5
                        )}
                      >
                        {"Define"}
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lnuw
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xOGeW
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <h5
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h5,
                                  projectcss.__wab_text,
                                  sty.h5__xueUe
                                )}
                              >
                                {"User research"}
                              </h5>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>

                          <div
                            data-plasmic-name={"paragraph3"}
                            data-plasmic-override={overrides.paragraph3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph3
                            )}
                          >
                            {
                              "I conducted interviews and elicited pain points of users’ difficulties to understand the users I’m designing for and their needs. A primary user group identified through research was cat pet owners who often personally bought cat food for their cats.\nThis user group didn’t confirm initial assumptions nor familiarity with cat food delivery services, but research also revealed that time was not the only factor limiting users from ordering cat food. Other user problems included food knowledge, practicality, or challenges that make it difficult to facilitates their cat care needs."
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gQ3Rw
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__r2ZoV
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <h5
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h5,
                                  projectcss.__wab_text,
                                  sty.h5___7Yq9
                                )}
                              >
                                {"Pain points"}
                              </h5>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>

                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__omKw
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph32"}
                                data-plasmic-override={overrides.paragraph32}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph32
                                )}
                              >
                                {"1. Health Tracking"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph33"}
                                data-plasmic-override={overrides.paragraph33}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph33
                                )}
                              >
                                {
                                  "User had problems keeping track of her cat’s health from food"
                                }
                              </div>
                            </div>
                          ) : null}
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__vcDwT
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph34"}
                                data-plasmic-override={overrides.paragraph34}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph34
                                )}
                              >
                                {"2. Food Composition"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph35"}
                                data-plasmic-override={overrides.paragraph35}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph35
                                )}
                              >
                                {
                                  "User doesn’t know how to measure the amount of food for their cat."
                                }
                              </div>
                            </div>
                          ) : null}
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__wM2Sr
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph36"}
                                data-plasmic-override={overrides.paragraph36}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph36
                                )}
                              >
                                {"3. Food Knowledge"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph37"}
                                data-plasmic-override={overrides.paragraph37}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph37
                                )}
                              >
                                {
                                  "User has little knowledge over which type of food to choose."
                                }
                              </div>
                            </div>
                          ) : null}
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__q9Hu
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph38"}
                                data-plasmic-override={overrides.paragraph38}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph38
                                )}
                              >
                                {"4. Practicality & Time"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph39"}
                                data-plasmic-override={overrides.paragraph39}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph39
                                )}
                              >
                                {
                                  "User mostly doesn’t constantly changing their food products and have little time\nto go to pet shops."
                                }
                              </div>
                            </div>
                          ) : null}
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__uDvl
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph40"}
                                data-plasmic-override={overrides.paragraph40}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph40
                                )}
                              >
                                {"5. Trust Issue"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph41"}
                                data-plasmic-override={overrides.paragraph41}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph41
                                )}
                              >
                                {
                                  "The user feels suspicious and anxious when buying cat food from an untrusted product, shop and brand"
                                }
                              </div>
                            </div>
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph7"}
                      data-plasmic-override={overrides.paragraph7}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph7
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__krl59
                          )}
                        >
                          {"Persona"}
                        </h5>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg2"}
                      data-plasmic-override={overrides.richTextImg2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg2)}
                    >
                      <div
                        data-plasmic-name={"image2"}
                        data-plasmic-override={overrides.image2}
                        className={classNames(projectcss.all, sty.image2)}
                      />

                      <div
                        data-plasmic-name={"text5"}
                        data-plasmic-override={overrides.text5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text5
                        )}
                      >
                        {"Image of Persona"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph8"}
                      data-plasmic-override={overrides.paragraph8}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph8
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__cy6Xs
                          )}
                        >
                          {"User Journey Map"}
                        </h5>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg3"}
                      data-plasmic-override={overrides.richTextImg3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg3)}
                    >
                      <div
                        data-plasmic-name={"image3"}
                        data-plasmic-override={overrides.image3}
                        className={classNames(projectcss.all, sty.image3)}
                      />

                      <div
                        data-plasmic-name={"text6"}
                        data-plasmic-override={overrides.text6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text6
                        )}
                      >
                        {"Image of User journey map"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section6"}
                      data-plasmic-override={overrides.section6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section6)}
                    >
                      <div
                        data-plasmic-name={"heading6"}
                        data-plasmic-override={overrides.heading6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading6
                        )}
                      >
                        {"Starting the design"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph4"}
                        data-plasmic-override={overrides.paragraph4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph4
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5___1ZbUb
                            )}
                          >
                            {"Paper Wireframe"}
                          </h5>
                          <React.Fragment>
                            {
                              "In this initial phase, I had to make quick paper wireframe as a foundation for my screen to know what information to put in based on feedback & findings from user research.\r"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg4"}
                        data-plasmic-override={overrides.richTextImg4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.richTextImg4)}
                      >
                        <div
                          data-plasmic-name={"image4"}
                          data-plasmic-override={overrides.image4}
                          className={classNames(projectcss.all, sty.image4)}
                        />

                        <div
                          data-plasmic-name={"text7"}
                          data-plasmic-override={overrides.text7}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text7
                          )}
                        >
                          {"Image of Paper Wireframe"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section19"}
                      data-plasmic-override={overrides.section19}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section19)}
                    >
                      <div
                        data-plasmic-name={"paragraph5"}
                        data-plasmic-override={overrides.paragraph5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph5
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__mPxv
                            )}
                          >
                            {"Digital Wireframe"}
                          </h5>
                          <React.Fragment>
                            {
                              "As the initial design phase continued, I made sure to base screen designs on feedback and findings from the user research. I created simple wireframe to map out information that will presented in the screen."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <div
                        data-plasmic-name={"paragraph6"}
                        data-plasmic-override={overrides.paragraph6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph6
                        )}
                      >
                        {
                          "Easy navigation, shortcut and convinient button was a key user need to address in the design s. A homepage is a first page a user land thus this screen is crucial to present only the necessary information"
                        }
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg17"}
                        data-plasmic-override={overrides.richTextImg17}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.richTextImg17
                        )}
                      >
                        <div
                          data-plasmic-name={"image20"}
                          data-plasmic-override={overrides.image20}
                          className={classNames(projectcss.all, sty.image20)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__zcNb
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__z3HPo)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/wireframeProductPagepng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__uUivW
                              )}
                            >
                              {
                                "A label to categorize the item and as a\nsuggestion that makes a product\nstand out from others, it makes it\neasier for users to choose and decide."
                              }
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xtAoh
                              )}
                            >
                              {
                                "A dropdown for packed specific information. Provide flexibility for users to only see the information they need and adjust space for other elements."
                              }
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__zVRdp
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__wWad)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/wireframeProductHomepagepng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__e9G30
                              )}
                            >
                              {
                                "A shortcut of food tracking analytics presented a\nshort information that may necessary for user (has been changed)"
                              }
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fvyqM
                              )}
                            >
                              {
                                "This button at the bottom of the carousel makes it fast and easy for users to recurring order in homescreen"
                              }
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kTvjd
                              )}
                            >
                              {
                                "A favorite/bookmark button for user to save their favorite product"
                              }
                            </div>
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text24"}
                          data-plasmic-override={overrides.text24}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text24
                          )}
                        >
                          {"Image of Digital Wireframe"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section20"}
                      data-plasmic-override={overrides.section20}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section20)}
                    >
                      <div
                        data-plasmic-name={"paragraph31"}
                        data-plasmic-override={overrides.paragraph31}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph31
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__jfJym
                            )}
                          >
                            {"Low-Fidelity prototype"}
                          </h5>
                          <React.Fragment>
                            {
                              "Using the completed set of digital wireframes, I created a low-fidelity prototype. The primary user flow I connected was ordering cat food, so the prototype could be used in a usability study."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg18"}
                        data-plasmic-override={overrides.richTextImg18}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.richTextImg18
                        )}
                      >
                        <div
                          data-plasmic-name={"image21"}
                          data-plasmic-override={overrides.image21}
                          className={classNames(projectcss.all, sty.image21)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__rYweu
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__n8Fim)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/digitalLofiPrototypepng.png",
                                fullWidth: 529,
                                fullHeight: 417,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__tcWhw
                              )}
                            >
                              {"View nutricats app"}
                            </div>

                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__uB37W
                              )}
                              component={Link}
                              platform={"nextjs"}
                            >
                              {"Low-fidelity prototype"}
                            </p.PlasmicLink>
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text25"}
                          data-plasmic-override={overrides.text25}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text25
                          )}
                        >
                          {"Image of Low-fidelity prototype"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section21"}
                      data-plasmic-override={overrides.section21}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section21)}
                    >
                      <div
                        data-plasmic-name={"paragraph42"}
                        data-plasmic-override={overrides.paragraph42}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph42
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__y1SN3
                            )}
                          >
                            {"Usability Study: findings"}
                          </h5>
                          <React.Fragment>
                            {
                              "I conducted two rounds of usability studies. Findings from the first study helped guide the designs from wireframes to mockups. The second study used a high-fidelity prototype and revealed what aspects of the mockups needed refining."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg19"}
                        data-plasmic-override={overrides.richTextImg19}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.richTextImg19
                        )}
                      >
                        <div
                          data-plasmic-name={"image22"}
                          data-plasmic-override={overrides.image22}
                          className={classNames(projectcss.all, sty.image22)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column___7MNqj
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___9NPve
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__kCnWl
                                  )}
                                >
                                  {"Round 1 findings"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__azvk5
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <p.Stack
                                  as={"ol"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.ol,
                                    sty.ol__vwefH
                                  )}
                                >
                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__rInT
                                    )}
                                  >
                                    {
                                      "Users need search screen, mostly\nthey tend to find specific product"
                                    }
                                  </li>

                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__tb75D
                                    )}
                                  >
                                    {
                                      "Users want filter options, to sort for\ntheir specific needs"
                                    }
                                  </li>

                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__j9IiA
                                    )}
                                  >
                                    {
                                      "Users feel unsure about calories\nestimation information"
                                    }
                                  </li>
                                </p.Stack>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__ltLi
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yjoeR
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__aAaq1
                                  )}
                                >
                                  {"Round 2 findings"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oQoXh
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <p.Stack
                                  as={"ol"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.ol,
                                    sty.ol__rotMk
                                  )}
                                >
                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__fsdEv
                                    )}
                                  >
                                    {
                                      "At the first glance, Users don’t expect nutrition\ntracking in a cat food delivery service."
                                    }
                                  </li>

                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li___0YuEx
                                    )}
                                  >
                                    {
                                      "Users mostly use the same flow (easy path) even\nwhen they were asked using different paths (indirect\ngoals) and usually want to recurrent order"
                                    }
                                  </li>

                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__nZFw
                                    )}
                                  >
                                    {
                                      "Users demand more screen and clickable\ncomponent to interact"
                                    }
                                  </li>
                                </p.Stack>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text26"}
                          data-plasmic-override={overrides.text26}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text26
                          )}
                        >
                          {"Image of Usability Study"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section7"}
                      data-plasmic-override={overrides.section7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section7)}
                    >
                      <div
                        data-plasmic-name={"heading7"}
                        data-plasmic-override={overrides.heading7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading7
                        )}
                      >
                        {"Refining the design"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph9"}
                        data-plasmic-override={overrides.paragraph9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph9
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__bPPog
                            )}
                          >
                            {"Mockups"}
                          </h5>
                          <React.Fragment>
                            {
                              "Early designs allowed for some customization , but after the usability studies, I added section tab for user to discuss and read previous review of the product. I thought it would be helpful for user who want to get insight before decide to buy the\nproduct. I also revised reviews to display actual information."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg5"}
                        data-plasmic-override={overrides.richTextImg5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.richTextImg5)}
                      >
                        <div
                          data-plasmic-name={"image23"}
                          data-plasmic-override={overrides.image23}
                          className={classNames(projectcss.all, sty.image23)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__eOdg
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kelSc
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__fhwCx
                                  )}
                                >
                                  {"Before usability study"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__uuyil)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/wireframeProductPagepng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__dmVvE
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__cq3Rq
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__ieBpc
                                  )}
                                >
                                  {"After usability study"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__gV3Hw)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/_02ProductPagepng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text8"}
                          data-plasmic-override={overrides.text8}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text8
                          )}
                        >
                          {"Image of Mockups"}
                        </div>
                      </p.Stack>

                      <div
                        data-plasmic-name={"paragraph43"}
                        data-plasmic-override={overrides.paragraph43}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph43
                        )}
                      >
                        {
                          "The second usability study revealed redundancy of the calories information, user don’t understand it would impact them and how’s it would helpful to present in the homepage. Thus, I changed to progress bar of feed plan and estimation of current cat status. I also changed the category page in navigation bar to Scan Product\nBarcode for user to get insight about composition & automatically tracking nutrition."
                        }
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg20"}
                        data-plasmic-override={overrides.richTextImg20}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.richTextImg20
                        )}
                      >
                        <div
                          data-plasmic-name={"image24"}
                          data-plasmic-override={overrides.image24}
                          className={classNames(projectcss.all, sty.image24)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__rR3C
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__m95C
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__l7Tw9
                                  )}
                                >
                                  {"Before usability study"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__ngiu5)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/_01HomeNavpng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__jcrtR
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yxEeQ
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__pehiM
                                  )}
                                >
                                  {"After usability study"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__ccYia)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/_01HomeNavFlow1Png.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text27"}
                          data-plasmic-override={overrides.text27}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text27
                          )}
                        >
                          {"Image of Mockups"}
                        </div>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"richTextImg21"}
                          data-plasmic-override={overrides.richTextImg21}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.richTextImg21
                          )}
                        >
                          <div
                            data-plasmic-name={"image25"}
                            data-plasmic-override={overrides.image25}
                            className={classNames(projectcss.all, sty.image25)}
                          >
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.column__b1A9V
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2GaVo
                                )}
                              >
                                <React.Fragment>
                                  <React.Fragment>{""}</React.Fragment>
                                  <h6
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h6,
                                      projectcss.__wab_text,
                                      sty.h6___31LOz
                                    )}
                                  >
                                    {"Before usability study"}
                                  </h6>
                                  <React.Fragment>{""}</React.Fragment>
                                </React.Fragment>
                              </div>

                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__tn0NH)}
                                displayHeight={"320px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/portfolio_bener/images/wireframeProductPagepng.png",
                                  fullWidth: 428,
                                  fullHeight: 926,
                                  aspectRatio: undefined
                                }}
                              />
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.column___18Ssa
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kkScl
                                )}
                              >
                                <React.Fragment>
                                  <React.Fragment>{""}</React.Fragment>
                                  <h6
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h6,
                                      projectcss.__wab_text,
                                      sty.h6__e2Grg
                                    )}
                                  >
                                    {"Before usability study"}
                                  </h6>
                                  <React.Fragment>{""}</React.Fragment>
                                </React.Fragment>
                              </div>

                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__vx0Rg)}
                                displayHeight={"320px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/portfolio_bener/images/wireframeProductPagepng.png",
                                  fullWidth: 428,
                                  fullHeight: 926,
                                  aspectRatio: undefined
                                }}
                              />
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.column__rXilh
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__obS7F
                                )}
                              >
                                <React.Fragment>
                                  <React.Fragment>{""}</React.Fragment>
                                  <h6
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h6,
                                      projectcss.__wab_text,
                                      sty.h6__qH5Dx
                                    )}
                                  >
                                    {"Before usability study"}
                                  </h6>
                                  <React.Fragment>{""}</React.Fragment>
                                </React.Fragment>
                              </div>

                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__bUM)}
                                displayHeight={"320px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/portfolio_bener/images/wireframeProductPagepng.png",
                                  fullWidth: 428,
                                  fullHeight: 926,
                                  aspectRatio: undefined
                                }}
                              />
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.column___1Bauc
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ofAo3
                                )}
                              >
                                <React.Fragment>
                                  <React.Fragment>{""}</React.Fragment>
                                  <h6
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h6,
                                      projectcss.__wab_text,
                                      sty.h6__ebE8S
                                    )}
                                  >
                                    {"After usability study"}
                                  </h6>
                                  <React.Fragment>{""}</React.Fragment>
                                </React.Fragment>
                              </div>

                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__zp73)}
                                displayHeight={"320px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/portfolio_bener/images/_02ProductPagepng.png",
                                  fullWidth: 428,
                                  fullHeight: 926,
                                  aspectRatio: undefined
                                }}
                              />
                            </p.Stack>
                          </div>

                          <div
                            data-plasmic-name={"text29"}
                            data-plasmic-override={overrides.text29}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text29
                            )}
                          >
                            {"Image of Mockups"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph10"}
                      data-plasmic-override={overrides.paragraph10}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph10
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__zHMn
                          )}
                        >
                          {"Initial Solution"}
                        </h5>
                        <React.Fragment>
                          {
                            "Based on the task and the solution idea, I was able to draw out some additional features for the app that might be useful for users. The definite task of Billie above is the must-have feature, thus the app becomes:\n\n"
                          }
                        </React.Fragment>
                        <h6
                          className={classNames(
                            projectcss.all,
                            projectcss.h6,
                            projectcss.__wab_text,
                            sty.h6__lbF22
                          )}
                        >
                          {
                            "The integrated Financial Management & Transaction App"
                          }
                        </h6>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {
                            "Berfungsi sebagai dompet digital terintegrasi dengan bank dan dompet digital marketplace dengan menyediakan fitur mentransfer, mengatur (money management), mencatat pemasukan dan pengeluaran (monitor your transactions) berdasarkan akun yang telah terdaftar."
                          }
                        </span>
                        <React.Fragment>
                          {
                            "\n\nIn this case, the user needs to think that managing spending and income is not necessarily thrilling but otherwise. Understanding their own spending behavior is the first step toward better money management, followed by deciding how to reduce expenses. Then, the next step is to put those into savings. I found that organizing and managing future spending and income can be like a balancing act. This is the kind of gamification that can be offered at the Billie app. The form of self-determination theory that applied when the user feels good and in control of the situation."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockquote"}
                      data-plasmic-override={overrides.blockquote}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.blockquote)}
                    >
                      <div
                        data-plasmic-name={"leftBorder"}
                        data-plasmic-override={overrides.leftBorder}
                        className={classNames(projectcss.all, sty.leftBorder)}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"quoteWrap"}
                        data-plasmic-override={overrides.quoteWrap}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.quoteWrap)}
                      >
                        <div
                          data-plasmic-name={"quote"}
                          data-plasmic-override={overrides.quote}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.quote
                          )}
                        >
                          {
                            "“Deci and Ryan’s self-determination theory recognizes the feelings of competence, autonomy, and relatedness as necessary in order to be able to appreciate an action for itself.”"
                          }
                        </div>

                        <div
                          data-plasmic-name={"text9"}
                          data-plasmic-override={overrides.text9}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text9
                          )}
                        >
                          {"— From SQLI Digital Experience"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph11"}
                      data-plasmic-override={overrides.paragraph11}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph11
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__ePKu
                            )}
                          >
                            {"Logo & Tagline\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "In terms of choosing colors, what comes to mind when making a fintech app is I need to establish trust while also engaging users to use the app without stress and pressure. Thus, I decide to use blue #2658FF as a primary color as this color fulfills the color familiarity in the industry and is able to communicate the brand's meaning. "
                            }
                          </React.Fragment>
                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.link__fwEnn
                            )}
                            component={Link}
                            href={
                              "https://graf1x.com/wp-content/uploads/2014/09/color-psychology-meaning-emotion-poster.jpg"
                            }
                            platform={"nextjs"}
                          >
                            {"Source"}
                          </p.PlasmicLink>
                          <React.Fragment>
                            {
                              "\n\n\r\nAlso, I need to make the ideation branches of the logo super fast because of the limited time and the relevancy to the project. Therefore, I didn’t spend too much time during this process, I rather prioritize the design and UX stuff."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__bxjK7
                            )}
                          >
                            {"Logo & Tagline\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "In terms of choosing colors, what comes to mind when making a fintech app is I need to establish trust while also engaging users to use the app without stress and pressure. Thus, I decide to use blue #2658FF as a primary color as this color fulfills the color familiarity in the industry and is able to communicate the brand's meaning. "
                            }
                          </React.Fragment>
                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.link__xOUzi
                            )}
                            component={Link}
                            href={
                              "https://graf1x.com/wp-content/uploads/2014/09/color-psychology-meaning-emotion-poster.jpg"
                            }
                            platform={"nextjs"}
                          >
                            {"Source"}
                          </p.PlasmicLink>
                          <React.Fragment>
                            {
                              "\n\n\r\nAlso, I need to make the ideation branches of the logo super fast because of the limited time and the relevancy to the project. Therefore, I didn’t spend too much time during this process, I rather prioritize the design and UX stuff."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg6"}
                      data-plasmic-override={overrides.richTextImg6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg6)}
                    >
                      <div
                        data-plasmic-name={"image6"}
                        data-plasmic-override={overrides.image6}
                        className={classNames(projectcss.all, sty.image6)}
                      />

                      <div
                        data-plasmic-name={"text10"}
                        data-plasmic-override={overrides.text10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text10
                        )}
                      >
                        {"Image of Ideation Branch"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg7"}
                      data-plasmic-override={overrides.richTextImg7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg7)}
                    >
                      <div
                        data-plasmic-name={"image7"}
                        data-plasmic-override={overrides.image7}
                        className={classNames(projectcss.all, sty.image7)}
                      />

                      <div
                        data-plasmic-name={"text11"}
                        data-plasmic-override={overrides.text11}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text11
                        )}
                      >
                        {"Image of Logo idea sketch"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph12"}
                      data-plasmic-override={overrides.paragraph12}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph12
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__fa2Wh
                            )}
                          >
                            {"Final Logo & Tagline"}
                          </h5>
                          <React.Fragment>
                            {
                              "I had to spend one hour and a half creating a tagline. I need a tagline that is simple and interesting while also effortless to remember. Thanks to this thread, I got the insight to create the tagline that I wanted. I wanted the tagline to start with the advantage of the feature. “easily manage, hardly stress”. Although a bit silly, I really liked the tagline."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__cc1TM
                            )}
                          >
                            {"Final Logo & Tagline"}
                          </h5>
                          <React.Fragment>
                            {
                              "I had to spend one hour and a half creating a tagline. I need a tagline that is simple and interesting while also effortless to remember. Thanks to this thread, I got the insight to create the tagline that I wanted. I wanted the tagline to start with the advantage of the feature. “easily manage, hardly stress”. Although a bit silly, I really liked the tagline."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg8"}
                      data-plasmic-override={overrides.richTextImg8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg8)}
                    >
                      <div
                        data-plasmic-name={"image8"}
                        data-plasmic-override={overrides.image8}
                        className={classNames(projectcss.all, sty.image8)}
                      />

                      <div
                        data-plasmic-name={"text12"}
                        data-plasmic-override={overrides.text12}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text12
                        )}
                      >
                        {"Image of Final Logo Design"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph13"}
                      data-plasmic-override={overrides.paragraph13}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph13
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__mAlbE
                            )}
                          >
                            {"Sitemap"}
                          </h5>
                          <React.Fragment>
                            {
                              "I created the sitemap to organize the screen and what kind of information can be put on the screen."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__n3GGi
                            )}
                          >
                            {"Sitemap"}
                          </h5>
                          <React.Fragment>
                            {
                              "I created the sitemap to organize the screen and what kind of information can be put on the screen."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg9"}
                      data-plasmic-override={overrides.richTextImg9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg9)}
                    >
                      <div
                        data-plasmic-name={"image9"}
                        data-plasmic-override={overrides.image9}
                        className={classNames(projectcss.all, sty.image9)}
                      />

                      <div
                        data-plasmic-name={"text13"}
                        data-plasmic-override={overrides.text13}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text13
                        )}
                      >
                        {"Image of Sitemap"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph14"}
                      data-plasmic-override={overrides.paragraph14}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph14
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__qq2An
                            )}
                          >
                            {"Customer Journey"}
                          </h5>
                          <React.Fragment>
                            {
                              "I built out a customer journey map with the content from the as-is scenario, this helped me to figure out what users going through during the flow."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__lmiNx
                            )}
                          >
                            {"Customer Journey"}
                          </h5>
                          <React.Fragment>
                            {
                              "I built out a customer journey map with the content from the as-is scenario, this helped me to figure out what users going through during the flow."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg10"}
                      data-plasmic-override={overrides.richTextImg10}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg10)}
                    >
                      <div
                        data-plasmic-name={"image10"}
                        data-plasmic-override={overrides.image10}
                        className={classNames(projectcss.all, sty.image10)}
                      />

                      <div
                        data-plasmic-name={"text14"}
                        data-plasmic-override={overrides.text14}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text14
                        )}
                      >
                        {"Image of Customer Journey"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph15"}
                      data-plasmic-override={overrides.paragraph15}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph15
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__nrJ2K
                            )}
                          >
                            {"Userflow"}
                          </h5>
                          <React.Fragment>
                            {
                              "A user flow chart was the last step I took before I was able to start designing prototypes. I had to identify “a happy path” goal needing to be accomplished by the user within the app.\n\n\r\nAfter finalizing my ideas, I created a user flow following my previous ideation for the first registered user to manage their income & expense from the step of connecting wallet to organizing payment."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__tbvbM
                            )}
                          >
                            {"Userflow"}
                          </h5>
                          <React.Fragment>
                            {
                              "A user flow chart was the last step I took before I was able to start designing prototypes. I had to identify “a happy path” goal needing to be accomplished by the user within the app.\n\n\r\nAfter finalizing my ideas, I created a user flow following my previous ideation for the first registered user to manage their income & expense from the step of connecting wallet to organizing payment."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg11"}
                      data-plasmic-override={overrides.richTextImg11}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg11)}
                    >
                      <div
                        data-plasmic-name={"image11"}
                        data-plasmic-override={overrides.image11}
                        className={classNames(projectcss.all, sty.image11)}
                      />

                      <div
                        data-plasmic-name={"text15"}
                        data-plasmic-override={overrides.text15}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text15
                        )}
                      >
                        {"Image of Userflow"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph16"}
                      data-plasmic-override={overrides.paragraph16}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph16
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__phP0B
                            )}
                          >
                            {"Low-fidelity"}
                          </h5>
                          <React.Fragment>
                            {
                              "I created a low–fidelity screen with pencil & paper to get a clear idea of what the screen will look like later. This phase and later on is where design pattern, reference, and mood board can be very useful."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__xZQ5
                            )}
                          >
                            {"Low-fidelity"}
                          </h5>
                          <React.Fragment>
                            {
                              "I created a low–fidelity screen with pencil & paper to get a clear idea of what the screen will look like later. This phase and later on is where design pattern, reference, and mood board can be very useful."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg12"}
                      data-plasmic-override={overrides.richTextImg12}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg12)}
                    >
                      <div
                        data-plasmic-name={"image12"}
                        data-plasmic-override={overrides.image12}
                        className={classNames(projectcss.all, sty.image12)}
                      />

                      <div
                        data-plasmic-name={"text16"}
                        data-plasmic-override={overrides.text16}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text16
                        )}
                      >
                        {"Image of Low Fidelity/Sketch"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section8"}
                      data-plasmic-override={overrides.section8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section8)}
                    >
                      <div
                        data-plasmic-name={"heading8"}
                        data-plasmic-override={overrides.heading8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading8
                        )}
                      >
                        {"Prototype"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph17"}
                        data-plasmic-override={overrides.paragraph17}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph17
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__qZpCh
                            )}
                          >
                            {"Wireframe\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "From the user flow that has been created, I proceed my way to create a wireframe based on a small portion of user flow referencing the before crazy 8’s low fidelity screen."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg13"}
                      data-plasmic-override={overrides.richTextImg13}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg13)}
                    >
                      <div
                        data-plasmic-name={"image13"}
                        data-plasmic-override={overrides.image13}
                        className={classNames(projectcss.all, sty.image13)}
                      />

                      <div
                        data-plasmic-name={"text17"}
                        data-plasmic-override={overrides.text17}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text17
                        )}
                      >
                        {"Image of Wireframe"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section9"}
                      data-plasmic-override={overrides.section9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section9)}
                    >
                      <div
                        data-plasmic-name={"paragraph18"}
                        data-plasmic-override={overrides.paragraph18}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph18
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__rsnnc
                            )}
                          >
                            {"HI-FI\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "After developing the wireframe, I finally proceeded to design the hi-fi design. In this process, I begin with the basics, such as defining colors and fonts for items that are consistent with the brand.\r"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section10"}
                      data-plasmic-override={overrides.section10}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section10)}
                    >
                      <div
                        data-plasmic-name={"paragraph19"}
                        data-plasmic-override={overrides.paragraph19}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph19
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {
                              "UI Guideline\r\nI created a basic UI Guideline to design the UI of this app. This UI design guideline could help me to design in a consistent way during a high-fidelity design.\r\nSome parts that I created:\n\n\r\n"
                            }
                          </React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__h29Ni
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__fEim
                              )}
                            >
                              {"“Gilroy” is the main typeface.\n"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__sZh8H
                              )}
                            >
                              {"“Circular Std” is the logotype."}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___55Gc
                              )}
                            >
                              {
                                "\r\nI used Blue #2658FF as the primary brand color while Orange #FFA62B, Turquoise #00C2D1, and Dark Blue #F7BE00 are for accent colors. These colors were obtained based on the logo colors.\r"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__gU494
                              )}
                            >
                              {
                                "I used the Microsoft Fluent system icon for iconography because it has appealing rounded corners that are ‘easier on the eyes’\r"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__sc5We
                              )}
                            >
                              {
                                "I reference material UI for the design framework as closely as I can\r"
                              }
                            </li>
                          </ul>
                          <React.Fragment>{"\n"}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontStyle: "italic" }}
                          >
                            {
                              "Note: Due to a time issue, I could not make other design components and variables. However, several iterations might solve this issue."
                            }
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg14"}
                      data-plasmic-override={overrides.richTextImg14}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg14)}
                    >
                      <div
                        data-plasmic-name={"image14"}
                        data-plasmic-override={overrides.image14}
                        className={classNames(projectcss.all, sty.image14)}
                      />

                      <div
                        data-plasmic-name={"text18"}
                        data-plasmic-override={overrides.text18}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text18
                        )}
                      >
                        {"Image of UI Guideline - Color"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section11"}
                      data-plasmic-override={overrides.section11}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section11)}
                    >
                      <div
                        data-plasmic-name={"paragraph20"}
                        data-plasmic-override={overrides.paragraph20}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph20
                        )}
                      >
                        {
                          "See the screen concept changes from Lo-fi to wireframe? the same as Hi-fi, I had to iterate some of the contents which takes some time to create. Here is the version of the Hi-Fi prototype:"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg15"}
                      data-plasmic-override={overrides.richTextImg15}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg15)}
                    >
                      <div
                        data-plasmic-name={"image15"}
                        data-plasmic-override={overrides.image15}
                        className={classNames(projectcss.all, sty.image15)}
                      />

                      <div
                        data-plasmic-name={"text19"}
                        data-plasmic-override={overrides.text19}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text19
                        )}
                      >
                        {"Image of 3 Final Design"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section12"}
                      data-plasmic-override={overrides.section12}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section12)}
                    >
                      <div
                        data-plasmic-name={"paragraph21"}
                        data-plasmic-override={overrides.paragraph21}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph21
                        )}
                      >
                        {
                          "I considered the UX law of common region that is “Elements tend to be perceived into groups if they are sharing an area with a clearly defined boundary”. For example, the function of the statistic text is to describe the graph but as you can see in the wireframe, the text is kind of detached from the graph. Overall, I personally liked the design because it looks as clean as I wanted. However, it still needs validation and iteration at some parts."
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section13"}
                      data-plasmic-override={overrides.section13}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section13)}
                    >
                      <div
                        data-plasmic-name={"paragraph22"}
                        data-plasmic-override={overrides.paragraph22}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph22
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__biHg8
                            )}
                          >
                            {"Prototype & Mockup\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "After feeling complete with the user interface design, then I continued to create some mockups to assist users to overcome their problems and provide insights for them. Take a look at the pics below.\r\nAlso, I created a simple prototype to show how the sections work. However, again due to time boundaries I get only to prototype the interaction between the screen section."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg16"}
                      data-plasmic-override={overrides.richTextImg16}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg16)}
                    >
                      <div
                        data-plasmic-name={"frame180"}
                        data-plasmic-override={overrides.frame180}
                        className={classNames(projectcss.all, sty.frame180)}
                      >
                        <div
                          data-plasmic-name={"frame174"}
                          data-plasmic-override={overrides.frame174}
                          className={classNames(projectcss.all, sty.frame174)}
                        >
                          <div
                            data-plasmic-name={"image16"}
                            data-plasmic-override={overrides.image16}
                            className={classNames(projectcss.all, sty.image16)}
                          />

                          <div
                            data-plasmic-name={"image17"}
                            data-plasmic-override={overrides.image17}
                            className={classNames(projectcss.all, sty.image17)}
                          />
                        </div>

                        <div
                          data-plasmic-name={"frame181"}
                          data-plasmic-override={overrides.frame181}
                          className={classNames(projectcss.all, sty.frame181)}
                        >
                          <div
                            data-plasmic-name={"image18"}
                            data-plasmic-override={overrides.image18}
                            className={classNames(projectcss.all, sty.image18)}
                          />

                          <div
                            data-plasmic-name={"image19"}
                            data-plasmic-override={overrides.image19}
                            className={classNames(projectcss.all, sty.image19)}
                          />
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"text20"}
                        data-plasmic-override={overrides.text20}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text20
                        )}
                      >
                        {"Image of Mockups & Screen Walkthrough"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame173"}
                      data-plasmic-override={overrides.frame173}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame173)}
                    >
                      <div
                        data-plasmic-name={"paragraph23"}
                        data-plasmic-override={overrides.paragraph23}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph23
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Still curious? Take a peek at the Figma Prototype below!\r"
                          : "Still curious? Take a peek at the Figma Prototype below!\r"}
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"buttonBase"}
                        data-plasmic-override={overrides.buttonBase}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.buttonBase)}
                      >
                        <div
                          data-plasmic-name={"text21"}
                          data-plasmic-override={overrides.text21}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text21
                          )}
                        >
                          {"Link to Prototype"}
                        </div>

                        <ArrowUpRight2Icon
                          className={classNames(projectcss.all, sty.svg__ijIIu)}
                          role={"img"}
                        />
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section14"}
                      data-plasmic-override={overrides.section14}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section14)}
                    >
                      <div
                        data-plasmic-name={"paragraph24"}
                        data-plasmic-override={overrides.paragraph24}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph24
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__nIqoj
                            )}
                          >
                            {"Design Flaws"}
                          </h5>
                          <React.Fragment>
                            {
                              "There are some design flaws and pain points within the design screen that the user and I noticed. Here are the reviews and note down:\r\n"
                            }
                          </React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__nDqtW
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___7THqk
                              )}
                            >
                              {
                                "There is no text color and label for the graph of the monthly budget."
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__lkShT
                              )}
                            >
                              {
                                "\r\nHow does the user know when they exceed the monthly budget? the design fails to assist that\r"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__myWaL
                              )}
                            >
                              {
                                "The filter in the transaction is confusing, what does it contain?\r"
                              }
                            </li>
                          </ul>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section15"}
                      data-plasmic-override={overrides.section15}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section15)}
                    >
                      <div
                        data-plasmic-name={"paragraph25"}
                        data-plasmic-override={overrides.paragraph25}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph25
                        )}
                      >
                        {
                          "Thankyou for reading till the end 👋, have a great day!"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section16"}
                      data-plasmic-override={overrides.section16}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section16)}
                    >
                      <div
                        data-plasmic-name={"heading9"}
                        data-plasmic-override={overrides.heading9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading9
                        )}
                      >
                        {"What’s Next?"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph26"}
                        data-plasmic-override={overrides.paragraph26}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph26
                        )}
                      >
                        {
                          "What’s next? the design process has to continue as the design needs validation from the user and some iteration to improve. However, to make this a straight week design challenge, I leave the design remain as it is, with no iteration."
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section17"}
                      data-plasmic-override={overrides.section17}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section17)}
                    >
                      <Divider2Icon
                        className={classNames(projectcss.all, sty.svg__ulLfx)}
                        role={"img"}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"authorAndSocialLinks"}
                        data-plasmic-override={overrides.authorAndSocialLinks}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.authorAndSocialLinks
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"avatarLabelGroup"}
                          data-plasmic-override={overrides.avatarLabelGroup}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.avatarLabelGroup
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"avatar"}
                              data-plasmic-override={overrides.avatar}
                              className={classNames(projectcss.all, sty.avatar)}
                            />
                          ) : null}

                          <div
                            data-plasmic-name={"textAndSupportingText"}
                            data-plasmic-override={
                              overrides.textAndSupportingText
                            }
                            className={classNames(
                              projectcss.all,
                              sty.textAndSupportingText
                            )}
                          >
                            <div
                              data-plasmic-name={"text22"}
                              data-plasmic-override={overrides.text22}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text22
                              )}
                            >
                              {"Demas Bermani Surya"}
                            </div>

                            <div
                              data-plasmic-name={"supportingText6"}
                              data-plasmic-override={overrides.supportingText6}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.supportingText6
                              )}
                            >
                              {"Aspiring UI/UX Designer"}
                            </div>
                          </div>
                        </p.Stack>

                        {false ? (
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"socialLinks"}
                            data-plasmic-override={overrides.socialLinks}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.socialLinks
                            )}
                          >
                            <div
                              data-plasmic-name={"button"}
                              data-plasmic-override={overrides.button}
                              className={classNames(projectcss.all, sty.button)}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase2"}
                                data-plasmic-override={overrides.buttonBase2}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase2
                                )}
                              >
                                <CopyIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__lHtco
                                  )}
                                  role={"img"}
                                />

                                <div
                                  data-plasmic-name={"text23"}
                                  data-plasmic-override={overrides.text23}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text23
                                  )}
                                >
                                  {"Copy link"}
                                </div>
                              </p.Stack>
                            </div>

                            <div
                              data-plasmic-name={"button2"}
                              data-plasmic-override={overrides.button2}
                              className={classNames(
                                projectcss.all,
                                sty.button2
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase3"}
                                data-plasmic-override={overrides.buttonBase3}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase3
                                )}
                              >
                                <SocialIconIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___4Wed8
                                  )}
                                  role={"img"}
                                />
                              </p.Stack>
                            </div>

                            <div
                              data-plasmic-name={"button3"}
                              data-plasmic-override={overrides.button3}
                              className={classNames(
                                projectcss.all,
                                sty.button3
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase4"}
                                data-plasmic-override={overrides.buttonBase4}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase4
                                )}
                              >
                                <SocialIcon2Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__kudn0
                                  )}
                                  role={"img"}
                                />
                              </p.Stack>
                            </div>

                            <div
                              data-plasmic-name={"button4"}
                              data-plasmic-override={overrides.button4}
                              className={classNames(
                                projectcss.all,
                                sty.button4
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase5"}
                                data-plasmic-override={overrides.buttonBase5}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase5
                                )}
                              >
                                <div
                                  data-plasmic-name={"socialIcon"}
                                  data-plasmic-override={overrides.socialIcon}
                                  className={classNames(
                                    projectcss.all,
                                    sty.socialIcon
                                  )}
                                >
                                  <Group9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__rYoiH
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </p.Stack>
                            </div>
                          </p.Stack>
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigationBar",
    "blogPosts",
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7",
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "startIconContainer",
    "contentContainer",
    "endIconContainer",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph10",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  navigationBar: ["navigationBar"],
  blogPosts: [
    "blogPosts",
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7",
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "startIconContainer",
    "contentContainer",
    "endIconContainer",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph10",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  frame178: [
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],

  frame170: [
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],

  frame176: ["frame176", "subheading", "frame175", "heading", "supportingText"],
  subheading: ["subheading"],
  frame175: ["frame175", "heading", "supportingText"],
  heading: ["heading"],
  supportingText: ["supportingText"],
  frame177: [
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3"
  ],

  badgeBase: ["badgeBase"],
  badgeBase2: ["badgeBase2", "text2"],
  text2: ["text2"],
  badgeBase3: ["badgeBase3", "text3"],
  text3: ["text3"],
  tooltip: [
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],

  content3: ["content3", "textAndSupportingText2", "text28", "supportingText7"],
  textAndSupportingText2: [
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],

  text28: ["text28"],
  supportingText7: ["supportingText7"],
  section: [
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "startIconContainer",
    "contentContainer",
    "endIconContainer",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph10",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  container: [
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "startIconContainer",
    "contentContainer",
    "endIconContainer"
  ],

  content: [
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "startIconContainer",
    "contentContainer",
    "endIconContainer"
  ],

  containerHighlighted: [
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "startIconContainer",
    "contentContainer",
    "endIconContainer"
  ],

  containter: [
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3"
  ],

  role: ["role", "supportingText2"],
  supportingText2: ["supportingText2"],
  scope: ["scope", "supportingText3"],
  supportingText3: ["supportingText3"],
  container2: [
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "startIconContainer",
    "contentContainer",
    "endIconContainer"
  ],

  frame179: [
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "startIconContainer",
    "contentContainer",
    "endIconContainer"
  ],

  projectObjective: ["projectObjective", "supportingText4"],
  supportingText4: ["supportingText4"],
  timeline: ["timeline", "supportingText5"],
  supportingText5: ["supportingText5"],
  timeline2: [
    "timeline2",
    "supportingText8",
    "startIconContainer",
    "contentContainer",
    "endIconContainer"
  ],

  supportingText8: ["supportingText8"],
  startIconContainer: ["startIconContainer"],
  contentContainer: ["contentContainer"],
  endIconContainer: ["endIconContainer"],
  container3: [
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph10",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  content2: [
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph10",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  richText: [
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph10",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  section2: ["section2", "heading2", "intro"],
  heading2: ["heading2"],
  intro: ["intro"],
  section3: ["section3", "heading3", "intro2"],
  heading3: ["heading3"],
  intro2: ["intro2"],
  section18: ["section18", "heading10", "intro3"],
  heading10: ["heading10"],
  intro3: ["intro3"],
  section4: [
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30"
  ],

  heading4: ["heading4"],
  paragraph2: ["paragraph2"],
  intro4: ["intro4"],
  paragraph27: ["paragraph27"],
  paragraph28: ["paragraph28"],
  paragraph29: ["paragraph29"],
  paragraph30: ["paragraph30"],
  richTextImg: ["richTextImg", "image", "text4"],
  image: ["image"],
  text4: ["text4"],
  section5: [
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41"
  ],

  heading5: ["heading5"],
  paragraph3: ["paragraph3"],
  paragraph32: ["paragraph32"],
  paragraph33: ["paragraph33"],
  paragraph34: ["paragraph34"],
  paragraph35: ["paragraph35"],
  paragraph36: ["paragraph36"],
  paragraph37: ["paragraph37"],
  paragraph38: ["paragraph38"],
  paragraph39: ["paragraph39"],
  paragraph40: ["paragraph40"],
  paragraph41: ["paragraph41"],
  paragraph7: ["paragraph7"],
  richTextImg2: ["richTextImg2", "image2", "text5"],
  image2: ["image2"],
  text5: ["text5"],
  paragraph8: ["paragraph8"],
  richTextImg3: ["richTextImg3", "image3", "text6"],
  image3: ["image3"],
  text6: ["text6"],
  section6: [
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7"
  ],

  heading6: ["heading6"],
  paragraph4: ["paragraph4"],
  richTextImg4: ["richTextImg4", "image4", "text7"],
  image4: ["image4"],
  text7: ["text7"],
  section19: [
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24"
  ],

  paragraph5: ["paragraph5"],
  paragraph6: ["paragraph6"],
  richTextImg17: ["richTextImg17", "image20", "text24"],
  image20: ["image20"],
  text24: ["text24"],
  section20: ["section20", "paragraph31", "richTextImg18", "image21", "text25"],
  paragraph31: ["paragraph31"],
  richTextImg18: ["richTextImg18", "image21", "text25"],
  image21: ["image21"],
  text25: ["text25"],
  section21: ["section21", "paragraph42", "richTextImg19", "image22", "text26"],
  paragraph42: ["paragraph42"],
  richTextImg19: ["richTextImg19", "image22", "text26"],
  image22: ["image22"],
  text26: ["text26"],
  section7: [
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29"
  ],

  heading7: ["heading7"],
  paragraph9: ["paragraph9"],
  richTextImg5: ["richTextImg5", "image23", "text8"],
  image23: ["image23"],
  text8: ["text8"],
  paragraph43: ["paragraph43"],
  richTextImg20: [
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29"
  ],

  image24: ["image24"],
  text27: ["text27"],
  richTextImg21: ["richTextImg21", "image25", "text29"],
  image25: ["image25"],
  text29: ["text29"],
  paragraph10: ["paragraph10"],
  blockquote: ["blockquote", "leftBorder", "quoteWrap", "quote", "text9"],
  leftBorder: ["leftBorder"],
  quoteWrap: ["quoteWrap", "quote", "text9"],
  quote: ["quote"],
  text9: ["text9"],
  paragraph11: ["paragraph11"],
  richTextImg6: ["richTextImg6", "image6", "text10"],
  image6: ["image6"],
  text10: ["text10"],
  richTextImg7: ["richTextImg7", "image7", "text11"],
  image7: ["image7"],
  text11: ["text11"],
  paragraph12: ["paragraph12"],
  richTextImg8: ["richTextImg8", "image8", "text12"],
  image8: ["image8"],
  text12: ["text12"],
  paragraph13: ["paragraph13"],
  richTextImg9: ["richTextImg9", "image9", "text13"],
  image9: ["image9"],
  text13: ["text13"],
  paragraph14: ["paragraph14"],
  richTextImg10: ["richTextImg10", "image10", "text14"],
  image10: ["image10"],
  text14: ["text14"],
  paragraph15: ["paragraph15"],
  richTextImg11: ["richTextImg11", "image11", "text15"],
  image11: ["image11"],
  text15: ["text15"],
  paragraph16: ["paragraph16"],
  richTextImg12: ["richTextImg12", "image12", "text16"],
  image12: ["image12"],
  text16: ["text16"],
  section8: ["section8", "heading8", "paragraph17"],
  heading8: ["heading8"],
  paragraph17: ["paragraph17"],
  richTextImg13: ["richTextImg13", "image13", "text17"],
  image13: ["image13"],
  text17: ["text17"],
  section9: ["section9", "paragraph18"],
  paragraph18: ["paragraph18"],
  section10: ["section10", "paragraph19"],
  paragraph19: ["paragraph19"],
  richTextImg14: ["richTextImg14", "image14", "text18"],
  image14: ["image14"],
  text18: ["text18"],
  section11: ["section11", "paragraph20"],
  paragraph20: ["paragraph20"],
  richTextImg15: ["richTextImg15", "image15", "text19"],
  image15: ["image15"],
  text19: ["text19"],
  section12: ["section12", "paragraph21"],
  paragraph21: ["paragraph21"],
  section13: ["section13", "paragraph22"],
  paragraph22: ["paragraph22"],
  richTextImg16: [
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20"
  ],

  frame180: [
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19"
  ],

  frame174: ["frame174", "image16", "image17"],
  image16: ["image16"],
  image17: ["image17"],
  frame181: ["frame181", "image18", "image19"],
  image18: ["image18"],
  image19: ["image19"],
  text20: ["text20"],
  frame173: ["frame173", "paragraph23", "buttonBase", "text21"],
  paragraph23: ["paragraph23"],
  buttonBase: ["buttonBase", "text21"],
  text21: ["text21"],
  section14: ["section14", "paragraph24"],
  paragraph24: ["paragraph24"],
  section15: ["section15", "paragraph25"],
  paragraph25: ["paragraph25"],
  section16: ["section16", "heading9", "paragraph26"],
  heading9: ["heading9"],
  paragraph26: ["paragraph26"],
  section17: [
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  authorAndSocialLinks: [
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  avatarLabelGroup: [
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6"
  ],

  avatar: ["avatar"],
  textAndSupportingText: ["textAndSupportingText", "text22", "supportingText6"],
  text22: ["text22"],
  supportingText6: ["supportingText6"],
  socialLinks: [
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  button: ["button", "buttonBase2", "text23"],
  buttonBase2: ["buttonBase2", "text23"],
  text23: ["text23"],
  button2: ["button2", "buttonBase3"],
  buttonBase3: ["buttonBase3"],
  button3: ["button3", "buttonBase4"],
  buttonBase4: ["buttonBase4"],
  button4: ["button4", "buttonBase5", "socialIcon"],
  buttonBase5: ["buttonBase5", "socialIcon"],
  socialIcon: ["socialIcon"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicGoogleUx__ArgProps,
      internalVariantPropNames: PlasmicGoogleUx__VariantProps
    });

    return PlasmicGoogleUx__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGoogleUx";
  } else {
    func.displayName = `PlasmicGoogleUx.${nodeName}`;
  }
  return func;
}

export const PlasmicGoogleUx = Object.assign(
  // Top-level PlasmicGoogleUx renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    blogPosts: makeNodeComponent("blogPosts"),
    frame178: makeNodeComponent("frame178"),
    frame170: makeNodeComponent("frame170"),
    frame176: makeNodeComponent("frame176"),
    subheading: makeNodeComponent("subheading"),
    frame175: makeNodeComponent("frame175"),
    heading: makeNodeComponent("heading"),
    supportingText: makeNodeComponent("supportingText"),
    frame177: makeNodeComponent("frame177"),
    badgeBase: makeNodeComponent("badgeBase"),
    badgeBase2: makeNodeComponent("badgeBase2"),
    text2: makeNodeComponent("text2"),
    badgeBase3: makeNodeComponent("badgeBase3"),
    text3: makeNodeComponent("text3"),
    tooltip: makeNodeComponent("tooltip"),
    content3: makeNodeComponent("content3"),
    textAndSupportingText2: makeNodeComponent("textAndSupportingText2"),
    text28: makeNodeComponent("text28"),
    supportingText7: makeNodeComponent("supportingText7"),
    section: makeNodeComponent("section"),
    container: makeNodeComponent("container"),
    content: makeNodeComponent("content"),
    containerHighlighted: makeNodeComponent("containerHighlighted"),
    containter: makeNodeComponent("containter"),
    role: makeNodeComponent("role"),
    supportingText2: makeNodeComponent("supportingText2"),
    scope: makeNodeComponent("scope"),
    supportingText3: makeNodeComponent("supportingText3"),
    container2: makeNodeComponent("container2"),
    frame179: makeNodeComponent("frame179"),
    projectObjective: makeNodeComponent("projectObjective"),
    supportingText4: makeNodeComponent("supportingText4"),
    timeline: makeNodeComponent("timeline"),
    supportingText5: makeNodeComponent("supportingText5"),
    timeline2: makeNodeComponent("timeline2"),
    supportingText8: makeNodeComponent("supportingText8"),
    startIconContainer: makeNodeComponent("startIconContainer"),
    contentContainer: makeNodeComponent("contentContainer"),
    endIconContainer: makeNodeComponent("endIconContainer"),
    container3: makeNodeComponent("container3"),
    content2: makeNodeComponent("content2"),
    richText: makeNodeComponent("richText"),
    section2: makeNodeComponent("section2"),
    heading2: makeNodeComponent("heading2"),
    intro: makeNodeComponent("intro"),
    section3: makeNodeComponent("section3"),
    heading3: makeNodeComponent("heading3"),
    intro2: makeNodeComponent("intro2"),
    section18: makeNodeComponent("section18"),
    heading10: makeNodeComponent("heading10"),
    intro3: makeNodeComponent("intro3"),
    section4: makeNodeComponent("section4"),
    heading4: makeNodeComponent("heading4"),
    paragraph2: makeNodeComponent("paragraph2"),
    intro4: makeNodeComponent("intro4"),
    paragraph27: makeNodeComponent("paragraph27"),
    paragraph28: makeNodeComponent("paragraph28"),
    paragraph29: makeNodeComponent("paragraph29"),
    paragraph30: makeNodeComponent("paragraph30"),
    richTextImg: makeNodeComponent("richTextImg"),
    image: makeNodeComponent("image"),
    text4: makeNodeComponent("text4"),
    section5: makeNodeComponent("section5"),
    heading5: makeNodeComponent("heading5"),
    paragraph3: makeNodeComponent("paragraph3"),
    paragraph32: makeNodeComponent("paragraph32"),
    paragraph33: makeNodeComponent("paragraph33"),
    paragraph34: makeNodeComponent("paragraph34"),
    paragraph35: makeNodeComponent("paragraph35"),
    paragraph36: makeNodeComponent("paragraph36"),
    paragraph37: makeNodeComponent("paragraph37"),
    paragraph38: makeNodeComponent("paragraph38"),
    paragraph39: makeNodeComponent("paragraph39"),
    paragraph40: makeNodeComponent("paragraph40"),
    paragraph41: makeNodeComponent("paragraph41"),
    paragraph7: makeNodeComponent("paragraph7"),
    richTextImg2: makeNodeComponent("richTextImg2"),
    image2: makeNodeComponent("image2"),
    text5: makeNodeComponent("text5"),
    paragraph8: makeNodeComponent("paragraph8"),
    richTextImg3: makeNodeComponent("richTextImg3"),
    image3: makeNodeComponent("image3"),
    text6: makeNodeComponent("text6"),
    section6: makeNodeComponent("section6"),
    heading6: makeNodeComponent("heading6"),
    paragraph4: makeNodeComponent("paragraph4"),
    richTextImg4: makeNodeComponent("richTextImg4"),
    image4: makeNodeComponent("image4"),
    text7: makeNodeComponent("text7"),
    section19: makeNodeComponent("section19"),
    paragraph5: makeNodeComponent("paragraph5"),
    paragraph6: makeNodeComponent("paragraph6"),
    richTextImg17: makeNodeComponent("richTextImg17"),
    image20: makeNodeComponent("image20"),
    text24: makeNodeComponent("text24"),
    section20: makeNodeComponent("section20"),
    paragraph31: makeNodeComponent("paragraph31"),
    richTextImg18: makeNodeComponent("richTextImg18"),
    image21: makeNodeComponent("image21"),
    text25: makeNodeComponent("text25"),
    section21: makeNodeComponent("section21"),
    paragraph42: makeNodeComponent("paragraph42"),
    richTextImg19: makeNodeComponent("richTextImg19"),
    image22: makeNodeComponent("image22"),
    text26: makeNodeComponent("text26"),
    section7: makeNodeComponent("section7"),
    heading7: makeNodeComponent("heading7"),
    paragraph9: makeNodeComponent("paragraph9"),
    richTextImg5: makeNodeComponent("richTextImg5"),
    image23: makeNodeComponent("image23"),
    text8: makeNodeComponent("text8"),
    paragraph43: makeNodeComponent("paragraph43"),
    richTextImg20: makeNodeComponent("richTextImg20"),
    image24: makeNodeComponent("image24"),
    text27: makeNodeComponent("text27"),
    richTextImg21: makeNodeComponent("richTextImg21"),
    image25: makeNodeComponent("image25"),
    text29: makeNodeComponent("text29"),
    paragraph10: makeNodeComponent("paragraph10"),
    blockquote: makeNodeComponent("blockquote"),
    leftBorder: makeNodeComponent("leftBorder"),
    quoteWrap: makeNodeComponent("quoteWrap"),
    quote: makeNodeComponent("quote"),
    text9: makeNodeComponent("text9"),
    paragraph11: makeNodeComponent("paragraph11"),
    richTextImg6: makeNodeComponent("richTextImg6"),
    image6: makeNodeComponent("image6"),
    text10: makeNodeComponent("text10"),
    richTextImg7: makeNodeComponent("richTextImg7"),
    image7: makeNodeComponent("image7"),
    text11: makeNodeComponent("text11"),
    paragraph12: makeNodeComponent("paragraph12"),
    richTextImg8: makeNodeComponent("richTextImg8"),
    image8: makeNodeComponent("image8"),
    text12: makeNodeComponent("text12"),
    paragraph13: makeNodeComponent("paragraph13"),
    richTextImg9: makeNodeComponent("richTextImg9"),
    image9: makeNodeComponent("image9"),
    text13: makeNodeComponent("text13"),
    paragraph14: makeNodeComponent("paragraph14"),
    richTextImg10: makeNodeComponent("richTextImg10"),
    image10: makeNodeComponent("image10"),
    text14: makeNodeComponent("text14"),
    paragraph15: makeNodeComponent("paragraph15"),
    richTextImg11: makeNodeComponent("richTextImg11"),
    image11: makeNodeComponent("image11"),
    text15: makeNodeComponent("text15"),
    paragraph16: makeNodeComponent("paragraph16"),
    richTextImg12: makeNodeComponent("richTextImg12"),
    image12: makeNodeComponent("image12"),
    text16: makeNodeComponent("text16"),
    section8: makeNodeComponent("section8"),
    heading8: makeNodeComponent("heading8"),
    paragraph17: makeNodeComponent("paragraph17"),
    richTextImg13: makeNodeComponent("richTextImg13"),
    image13: makeNodeComponent("image13"),
    text17: makeNodeComponent("text17"),
    section9: makeNodeComponent("section9"),
    paragraph18: makeNodeComponent("paragraph18"),
    section10: makeNodeComponent("section10"),
    paragraph19: makeNodeComponent("paragraph19"),
    richTextImg14: makeNodeComponent("richTextImg14"),
    image14: makeNodeComponent("image14"),
    text18: makeNodeComponent("text18"),
    section11: makeNodeComponent("section11"),
    paragraph20: makeNodeComponent("paragraph20"),
    richTextImg15: makeNodeComponent("richTextImg15"),
    image15: makeNodeComponent("image15"),
    text19: makeNodeComponent("text19"),
    section12: makeNodeComponent("section12"),
    paragraph21: makeNodeComponent("paragraph21"),
    section13: makeNodeComponent("section13"),
    paragraph22: makeNodeComponent("paragraph22"),
    richTextImg16: makeNodeComponent("richTextImg16"),
    frame180: makeNodeComponent("frame180"),
    frame174: makeNodeComponent("frame174"),
    image16: makeNodeComponent("image16"),
    image17: makeNodeComponent("image17"),
    frame181: makeNodeComponent("frame181"),
    image18: makeNodeComponent("image18"),
    image19: makeNodeComponent("image19"),
    text20: makeNodeComponent("text20"),
    frame173: makeNodeComponent("frame173"),
    paragraph23: makeNodeComponent("paragraph23"),
    buttonBase: makeNodeComponent("buttonBase"),
    text21: makeNodeComponent("text21"),
    section14: makeNodeComponent("section14"),
    paragraph24: makeNodeComponent("paragraph24"),
    section15: makeNodeComponent("section15"),
    paragraph25: makeNodeComponent("paragraph25"),
    section16: makeNodeComponent("section16"),
    heading9: makeNodeComponent("heading9"),
    paragraph26: makeNodeComponent("paragraph26"),
    section17: makeNodeComponent("section17"),
    authorAndSocialLinks: makeNodeComponent("authorAndSocialLinks"),
    avatarLabelGroup: makeNodeComponent("avatarLabelGroup"),
    avatar: makeNodeComponent("avatar"),
    textAndSupportingText: makeNodeComponent("textAndSupportingText"),
    text22: makeNodeComponent("text22"),
    supportingText6: makeNodeComponent("supportingText6"),
    socialLinks: makeNodeComponent("socialLinks"),
    button: makeNodeComponent("button"),
    buttonBase2: makeNodeComponent("buttonBase2"),
    text23: makeNodeComponent("text23"),
    button2: makeNodeComponent("button2"),
    buttonBase3: makeNodeComponent("buttonBase3"),
    button3: makeNodeComponent("button3"),
    buttonBase4: makeNodeComponent("buttonBase4"),
    button4: makeNodeComponent("button4"),
    buttonBase5: makeNodeComponent("buttonBase5"),
    socialIcon: makeNodeComponent("socialIcon"),
    // Metadata about props expected for PlasmicGoogleUx
    internalVariantProps: PlasmicGoogleUx__VariantProps,
    internalArgProps: PlasmicGoogleUx__ArgProps
  }
);

export default PlasmicGoogleUx;
/* prettier-ignore-end */
