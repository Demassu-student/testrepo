// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 578p2KiWp3ZSUFPY7FrhK3
// Component: -2x0Pg0Nfo
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useScreenVariants as useScreenVariantstU3UFp3Zwbn8D } from "../new_ones/PlasmicGlobalVariant__Screen"; // plasmic-import: _tU3UFp3Zwbn8d/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../new_ones/plasmic_new_ones.module.css"; // plasmic-import: 578p2KiWp3ZSUFPY7FrhK3/projectcss
import sty from "./PlasmicHeading36PxUxWritingPage.module.css"; // plasmic-import: -2x0Pg0Nfo/css

export const PlasmicHeading36PxUxWritingPage__VariantProps = new Array(
  "headingChoice2"
);

export const PlasmicHeading36PxUxWritingPage__ArgProps = new Array();

function PlasmicHeading36PxUxWritingPage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstU3UFp3Zwbn8D()
  });

  return (
    <p.PlasmicLink
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.a,
        projectcss.__wab_text,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root,
        {
          [sty.rootheadingChoice2_variant1]: hasVariant(
            variants,
            "headingChoice2",
            "variant1"
          ),

          [sty.rootheadingChoice2_variant2]: hasVariant(
            variants,
            "headingChoice2",
            "variant2"
          )
        }
      )}
      component={Link}
      href={
        hasVariant(variants, "headingChoice2", "variant2")
          ? "/ux-writing-blog-exercise-2"
          : hasVariant(variants, "headingChoice2", "variant1")
          ? "/ux-writing-blog-exercise-1"
          : undefined
      }
      platform={"nextjs"}
      target={
        hasVariant(variants, "headingChoice2", "variant2")
          ? "_blank"
          : hasVariant(variants, "headingChoice2", "variant1")
          ? "_blank"
          : undefined
      }
    >
      {hasVariant(variants, "headingChoice2", "variant2")
        ? "Menyederhanakan Copy"
        : hasVariant(variants, "headingChoice2", "variant1")
        ? "Membuat User Story dan Microcopy"
        : hasVariant(globalVariants, "screen", "mobileOnly")
        ? "Membuat User Story dan Microcopy"
        : "Lorem Ipsum Dolor sit amet"}
    </p.PlasmicLink>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHeading36PxUxWritingPage__ArgProps,
      internalVariantPropNames: PlasmicHeading36PxUxWritingPage__VariantProps
    });

    return PlasmicHeading36PxUxWritingPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHeading36PxUxWritingPage";
  } else {
    func.displayName = `PlasmicHeading36PxUxWritingPage.${nodeName}`;
  }
  return func;
}

export const PlasmicHeading36PxUxWritingPage = Object.assign(
  // Top-level PlasmicHeading36PxUxWritingPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicHeading36PxUxWritingPage
    internalVariantProps: PlasmicHeading36PxUxWritingPage__VariantProps,
    internalArgProps: PlasmicHeading36PxUxWritingPage__ArgProps
  }
);

export default PlasmicHeading36PxUxWritingPage;
/* prettier-ignore-end */
