// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 578p2KiWp3ZSUFPY7FrhK3
// Component: rApXcfRnVYy
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavigationBar from "../../NavigationBar"; // plasmic-import: BLtbByl5tB5/component
import Select from "../../Select"; // plasmic-import: 3Vr7VM3BiE8vGJ/component
import { useScreenVariants as useScreenVariantstU3UFp3Zwbn8D } from "../new_ones/PlasmicGlobalVariant__Screen"; // plasmic-import: _tU3UFp3Zwbn8d/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../new_ones/plasmic_new_ones.module.css"; // plasmic-import: 578p2KiWp3ZSUFPY7FrhK3/projectcss
import sty from "./PlasmicGoogleUx.module.css"; // plasmic-import: rApXcfRnVYy/css
import TooltipIcon from "../new_ones/icons/PlasmicIcon__Tooltip"; // plasmic-import: jbJru8BSTWZZmG/icon
import Divider2Icon from "../new_ones/icons/PlasmicIcon__Divider2"; // plasmic-import: wszRZDHrfCJaE9/icon
import CopyIcon from "../new_ones/icons/PlasmicIcon__Copy"; // plasmic-import: 3hWh_eWxbClQvX/icon
import SocialIconIcon from "../new_ones/icons/PlasmicIcon__SocialIcon"; // plasmic-import: 4p046xg_E92q0B/icon
import SocialIcon2Icon from "../new_ones/icons/PlasmicIcon__SocialIcon2"; // plasmic-import: cVIq4NUX5C4QL_/icon
import Group9Icon from "../new_ones/icons/PlasmicIcon__Group9"; // plasmic-import: RDagWvZuGPzEwr/icon

export const PlasmicGoogleUx__VariantProps = new Array();

export const PlasmicGoogleUx__ArgProps = new Array("children2");

function PlasmicGoogleUx__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstU3UFp3Zwbn8D()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <NavigationBar
            data-plasmic-name={"navigationBar"}
            data-plasmic-override={overrides.navigationBar}
            className={classNames("__wab_instance", sty.navigationBar)}
          >
            {p.renderPlasmicSlot({
              defaultContents: (
                <Select
                  className={classNames("__wab_instance", sty.select__spwD4)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jbcJj
                      )}
                    >
                      {"Selected works"}
                    </div>
                  }
                  selectedContent={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eykYi
                      )}
                    >
                      {"Selected works"}
                    </div>
                  }
                />
              ),

              value: args.children2
            })}
          </NavigationBar>

          <div
            data-plasmic-name={"blogPosts"}
            data-plasmic-override={overrides.blogPosts}
            className={classNames(projectcss.all, sty.blogPosts)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__njdOf)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "516px"
                  : "516px"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "100%"
              }
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "1440px"
              }
              loading={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "lazy"
                  : "lazy"
              }
              src={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? {
                      src: "/plasmic/new_ones/images/headerImage2.svg",
                      fullWidth: 1440,
                      fullHeight: 516,
                      aspectRatio: 2.790698
                    }
                  : {
                      src: "/plasmic/new_ones/images/headerImage2.svg",
                      fullWidth: 1440,
                      fullHeight: 516,
                      aspectRatio: 2.790698
                    }
              }
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame178"}
              data-plasmic-override={overrides.frame178}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame178)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame170"}
                data-plasmic-override={overrides.frame170}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame170)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame176"}
                  data-plasmic-override={overrides.frame176}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame176)}
                >
                  <div
                    data-plasmic-name={"subheading"}
                    data-plasmic-override={overrides.subheading}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.subheading
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Published 27 February 2022"
                      : "Published 27 February 2022"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame175"}
                    data-plasmic-override={overrides.frame175}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame175)}
                  >
                    <div
                      data-plasmic-name={"heading"}
                      data-plasmic-override={overrides.heading}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.heading
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Billie - A personal Budgeting app"
                        : "Google UX Certification - Create High-Fidelity Designs and Prototypes in Figma: Nutricats Case Study"}
                    </div>

                    <div
                      data-plasmic-name={"supportingText"}
                      data-plasmic-override={overrides.supportingText}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.supportingText
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Billie is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction."
                        : "Nutricats is a nutrition tracking app that offers a delivery service for a cat owner to buy a cat food-related product. The app is a B2C marketplace that provides support for cat owners to manage their cat food consumption and gives an insight into health nutrition and calories composition."}
                    </div>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame177"}
                  data-plasmic-override={overrides.frame177}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame177)}
                >
                  <div
                    data-plasmic-name={"badgeBase"}
                    data-plasmic-override={overrides.badgeBase}
                    className={classNames(projectcss.all, sty.badgeBase)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eCaQb
                      )}
                    >
                      {"Design"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"badgeBase2"}
                    data-plasmic-override={overrides.badgeBase2}
                    className={classNames(projectcss.all, sty.badgeBase2)}
                  >
                    <div
                      data-plasmic-name={"text2"}
                      data-plasmic-override={overrides.text2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text2
                      )}
                    >
                      {"Research"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"badgeBase3"}
                    data-plasmic-override={overrides.badgeBase3}
                    className={classNames(projectcss.all, sty.badgeBase3)}
                  >
                    <div
                      data-plasmic-name={"text3"}
                      data-plasmic-override={overrides.text3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text3
                      )}
                    >
                      {"Mockup"}
                    </div>
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={"tooltip"}
                  data-plasmic-override={overrides.tooltip}
                  className={classNames(projectcss.all, sty.tooltip)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__btd52)}
                  >
                    <TooltipIcon
                      className={classNames(projectcss.all, sty.svg__tzZt6)}
                      role={"img"}
                    />
                  </div>

                  <div
                    data-plasmic-name={"content3"}
                    data-plasmic-override={overrides.content3}
                    className={classNames(projectcss.all, sty.content3)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"textAndSupportingText2"}
                      data-plasmic-override={overrides.textAndSupportingText2}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.textAndSupportingText2
                      )}
                    >
                      <div
                        data-plasmic-name={"text28"}
                        data-plasmic-override={overrides.text28}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text28
                        )}
                      >
                        {"You're on a pre-published view"}
                      </div>

                      <div
                        data-plasmic-name={"supportingText7"}
                        data-plasmic-override={overrides.supportingText7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.supportingText7
                        )}
                      >
                        {
                          "This page is on a development for the content writing"
                        }
                      </div>
                    </p.Stack>
                  </div>
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              hasGap={true}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                hasGap={true}
                className={classNames(projectcss.all, sty.container)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content"}
                  data-plasmic-override={overrides.content}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"containerHighlighted"}
                    data-plasmic-override={overrides.containerHighlighted}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.containerHighlighted
                    )}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"containter"}
                      data-plasmic-override={overrides.containter}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.containter)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"role"}
                        data-plasmic-override={overrides.role}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.role)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tmEd6
                          )}
                        >
                          {"Role"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText2"}
                          data-plasmic-override={overrides.supportingText2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText2
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "UXUI Designer"
                            : "UXUI Designer"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"scope"}
                        data-plasmic-override={overrides.scope}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.scope)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jjcfV
                          )}
                        >
                          {"Scope"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText3"}
                          data-plasmic-override={overrides.supportingText3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText3
                          )}
                        >
                          {
                            "Conducting interviews, Define pain points,\nIdeate on solution, paper and digital wireframing, low and high fidelity prototyping,\nconducting usability studies, accounting for\naccessibility, and iterating on designs."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"container2"}
                      data-plasmic-override={overrides.container2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.container2)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame179"}
                        data-plasmic-override={overrides.frame179}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame179)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"projectObjective"}
                          data-plasmic-override={overrides.projectObjective}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.projectObjective
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__p6KrN
                            )}
                          >
                            {"Project Objective"}
                          </div>

                          <div
                            data-plasmic-name={"supportingText4"}
                            data-plasmic-override={overrides.supportingText4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.supportingText4
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "To create a mockup for Monthly Spending & Income Feature, from defining to designing"
                              : "Design an app that facilitates a cat owner to be able to get insight, manage and plan a cat’s health from food"}
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"timeline"}
                          data-plasmic-override={overrides.timeline}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.timeline)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ix9I9
                            )}
                          >
                            {"Timeline"}
                          </div>

                          <div
                            data-plasmic-name={"supportingText5"}
                            data-plasmic-override={overrides.supportingText5}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.supportingText5
                            )}
                          >
                            {"January 2022 – March 2022"}
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"timeline2"}
                          data-plasmic-override={overrides.timeline2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.timeline2)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kFYaw
                            )}
                          >
                            {"Download Case Study"}
                          </div>

                          {true ? (
                            <div
                              data-plasmic-name={"supportingText8"}
                              data-plasmic-override={overrides.supportingText8}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.supportingText8
                              )}
                            >
                              {"January 2022 – March 2022"}
                            </div>
                          ) : null}

                          <p.Stack
                            as={p.PlasmicLink}
                            data-plasmic-name={"buttonBase6"}
                            data-plasmic-override={overrides.buttonBase6}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.buttonBase6
                            )}
                            component={Link}
                            href={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "#selection_work"
                                : "https://drive.google.com/file/d/1wYeRj8TBL8YlUQSG4dW5Su_K6OGL0BMa/view?usp=sharing"
                            }
                            platform={"nextjs"}
                            target={"_blank"}
                            title={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? ""
                                : ""
                            }
                          >
                            <div
                              data-plasmic-name={"text9"}
                              data-plasmic-override={overrides.text9}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text9
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "Case Study"
                                : "Pdf"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"container3"}
                data-plasmic-override={overrides.container3}
                hasGap={true}
                className={classNames(projectcss.all, sty.container3)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content2"}
                  data-plasmic-override={overrides.content2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"richText"}
                    data-plasmic-override={overrides.richText}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.richText)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section2"}
                      data-plasmic-override={overrides.section2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section2)}
                    >
                      <div
                        data-plasmic-name={"heading2"}
                        data-plasmic-override={overrides.heading2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading2
                        )}
                      >
                        {"Project Overview"}
                      </div>

                      <div
                        data-plasmic-name={"intro"}
                        data-plasmic-override={overrides.intro}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.intro
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction.\n\n\r\nI did simple planning in Google Spreadsheet. The primary tool that I used is Figma, as a tool to brainstorm, make initial pain points, initial customer flow, and as a design and prototype tool. For the logo, I created it in adobe illustrator."
                          : "Nutricats is a nutrition tracking app that offers a delivery service for a cat owner to buy a cat food related product. The app is a B2C marketplace that\nprovides support for cat owners to manage their cat food consumption and gives an insight into health nutrition and calories composition."}
                      </div>

                      <Divider2Icon
                        className={classNames(projectcss.all, sty.svg__ke0Vp)}
                        role={"img"}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section3"}
                      data-plasmic-override={overrides.section3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section3)}
                    >
                      <div
                        data-plasmic-name={"heading3"}
                        data-plasmic-override={overrides.heading3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading3
                        )}
                      >
                        {"The Problem"}
                      </div>

                      <div
                        data-plasmic-name={"intro2"}
                        data-plasmic-override={overrides.intro2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.intro2
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction.\n\n\r\nI did simple planning in Google Spreadsheet. The primary tool that I used is Figma, as a tool to brainstorm, make initial pain points, initial customer flow, and as a design and prototype tool. For the logo, I created it in adobe illustrator."
                          : "Cat owners had a problem keeping track of their cat’s nutrition and calorie composition of food they buy from a pet shop."}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section18"}
                      data-plasmic-override={overrides.section18}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section18)}
                    >
                      <div
                        data-plasmic-name={"heading10"}
                        data-plasmic-override={overrides.heading10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading10
                        )}
                      >
                        {"The Goal"}
                      </div>

                      <div
                        data-plasmic-name={"intro3"}
                        data-plasmic-override={overrides.intro3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.intro3
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction.\n\n\r\nI did simple planning in Google Spreadsheet. The primary tool that I used is Figma, as a tool to brainstorm, make initial pain points, initial customer flow, and as a design and prototype tool. For the logo, I created it in adobe illustrator."
                          : "Design an app that facilitates a cat owner to be able to get insight, manage and plan a cat’s health from food"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section4"}
                      data-plasmic-override={overrides.section4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section4)}
                    >
                      <div
                        data-plasmic-name={"heading4"}
                        data-plasmic-override={overrides.heading4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading4
                        )}
                      >
                        {"Design Process"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph2"}
                        data-plasmic-override={overrides.paragraph2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph2
                        )}
                      >
                        {
                          "I used Design Thinking as a framework process for this project."
                        }
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__m1AN
                          )}
                        >
                          <dl
                            data-plasmic-name={"intro4"}
                            data-plasmic-override={overrides.intro4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.intro4
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "screen",
                              "mobileOnly"
                            ) ? (
                              "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction.\n\n\r\nI did simple planning in Google Spreadsheet. The primary tool that I used is Figma, as a tool to brainstorm, make initial pain points, initial customer flow, and as a design and prototype tool. For the logo, I created it in adobe illustrator."
                            ) : (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h5
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h5,
                                    projectcss.__wab_text,
                                    sty.h5___9JhE
                                  )}
                                >
                                  {"Understanding the User"}
                                </h5>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            )}
                          </dl>

                          <div
                            data-plasmic-name={"paragraph27"}
                            data-plasmic-override={overrides.paragraph27}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph27
                            )}
                          >
                            {"User research"}
                          </div>

                          <div
                            data-plasmic-name={"paragraph28"}
                            data-plasmic-override={overrides.paragraph28}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph28
                            )}
                          >
                            {"Persona"}
                          </div>

                          <div
                            data-plasmic-name={"paragraph29"}
                            data-plasmic-override={overrides.paragraph29}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph29
                            )}
                          >
                            {"Problem Statement"}
                          </div>

                          <div
                            data-plasmic-name={"paragraph30"}
                            data-plasmic-override={overrides.paragraph30}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph30
                            )}
                          >
                            {"User journey maps"}
                          </div>
                        </div>
                      ) : null}
                    </p.Stack>

                    {true ? (
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg"}
                        data-plasmic-override={overrides.richTextImg}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.richTextImg)}
                      >
                        <div
                          data-plasmic-name={"image"}
                          data-plasmic-override={overrides.image}
                          className={classNames(projectcss.all, sty.image)}
                        />

                        <div
                          data-plasmic-name={"text4"}
                          data-plasmic-override={overrides.text4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text4
                          )}
                        >
                          {"Image of Design Process"}
                        </div>
                      </p.Stack>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section5"}
                      data-plasmic-override={overrides.section5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section5)}
                    >
                      <div
                        data-plasmic-name={"heading5"}
                        data-plasmic-override={overrides.heading5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading5
                        )}
                      >
                        {"Define"}
                      </div>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lnuw
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xOGeW
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <h5
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h5,
                                  projectcss.__wab_text,
                                  sty.h5__xueUe
                                )}
                              >
                                {"User research"}
                              </h5>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>

                          <div
                            data-plasmic-name={"paragraph3"}
                            data-plasmic-override={overrides.paragraph3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.paragraph3
                            )}
                          >
                            {
                              "I conducted interviews and elicited pain points of users’ difficulties to understand the users I’m designing for and their needs. A primary user group identified through research was cat pet owners who often personally bought cat food for their cats.\nThis user group didn’t confirm initial assumptions nor familiarity with cat food delivery services, but research also revealed that time was not the only factor limiting users from ordering cat food. Other user problems included food knowledge, practicality, or challenges that make it difficult to facilitates their cat care needs."
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gQ3Rw
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__r2ZoV
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <h5
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h5,
                                  projectcss.__wab_text,
                                  sty.h5___7Yq9
                                )}
                              >
                                {"Pain points"}
                              </h5>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>

                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__omKw
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph32"}
                                data-plasmic-override={overrides.paragraph32}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph32
                                )}
                              >
                                {"1. Health Tracking"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph33"}
                                data-plasmic-override={overrides.paragraph33}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph33
                                )}
                              >
                                {
                                  "User had problems keeping track of her cat’s health from food"
                                }
                              </div>
                            </div>
                          ) : null}
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__vcDwT
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph34"}
                                data-plasmic-override={overrides.paragraph34}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph34
                                )}
                              >
                                {"2. Food Composition"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph35"}
                                data-plasmic-override={overrides.paragraph35}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph35
                                )}
                              >
                                {
                                  "User doesn’t know how to measure the amount of food for their cat."
                                }
                              </div>
                            </div>
                          ) : null}
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__wM2Sr
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph36"}
                                data-plasmic-override={overrides.paragraph36}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph36
                                )}
                              >
                                {"3. Food Knowledge"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph37"}
                                data-plasmic-override={overrides.paragraph37}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph37
                                )}
                              >
                                {
                                  "User has little knowledge over which type of food to choose."
                                }
                              </div>
                            </div>
                          ) : null}
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__q9Hu
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph38"}
                                data-plasmic-override={overrides.paragraph38}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph38
                                )}
                              >
                                {"4. Practicality & Time"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph39"}
                                data-plasmic-override={overrides.paragraph39}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph39
                                )}
                              >
                                {
                                  "User mostly doesn’t constantly changing their food products and have little time\nto go to pet shops."
                                }
                              </div>
                            </div>
                          ) : null}
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__uDvl
                              )}
                            >
                              <div
                                data-plasmic-name={"paragraph40"}
                                data-plasmic-override={overrides.paragraph40}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph40
                                )}
                              >
                                {"5. Trust Issue"}
                              </div>

                              <div
                                data-plasmic-name={"paragraph41"}
                                data-plasmic-override={overrides.paragraph41}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.paragraph41
                                )}
                              >
                                {
                                  "The user feels suspicious and anxious when buying cat food from an untrusted product, shop and brand"
                                }
                              </div>
                            </div>
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph7"}
                      data-plasmic-override={overrides.paragraph7}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph7
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__krl59
                          )}
                        >
                          {"Persona"}
                        </h5>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg2"}
                      data-plasmic-override={overrides.richTextImg2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg2)}
                    >
                      <div
                        data-plasmic-name={"image2"}
                        data-plasmic-override={overrides.image2}
                        className={classNames(projectcss.all, sty.image2)}
                      />

                      <div
                        data-plasmic-name={"text5"}
                        data-plasmic-override={overrides.text5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text5
                        )}
                      >
                        {"Image of Persona"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph8"}
                      data-plasmic-override={overrides.paragraph8}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph8
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__cy6Xs
                          )}
                        >
                          {"User Journey Map"}
                        </h5>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg3"}
                      data-plasmic-override={overrides.richTextImg3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg3)}
                    >
                      <div
                        data-plasmic-name={"image3"}
                        data-plasmic-override={overrides.image3}
                        className={classNames(projectcss.all, sty.image3)}
                      />

                      <div
                        data-plasmic-name={"text6"}
                        data-plasmic-override={overrides.text6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text6
                        )}
                      >
                        {"Image of User journey map"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section6"}
                      data-plasmic-override={overrides.section6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section6)}
                    >
                      <div
                        data-plasmic-name={"heading6"}
                        data-plasmic-override={overrides.heading6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading6
                        )}
                      >
                        {"Starting the design"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph4"}
                        data-plasmic-override={overrides.paragraph4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph4
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5___1ZbUb
                            )}
                          >
                            {"Paper Wireframe"}
                          </h5>
                          <React.Fragment>
                            {
                              "In this initial phase, I had to make quick paper wireframe as a foundation for my screen to know what information to put in based on feedback & findings from user research.\r"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg4"}
                        data-plasmic-override={overrides.richTextImg4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.richTextImg4)}
                      >
                        <div
                          data-plasmic-name={"image4"}
                          data-plasmic-override={overrides.image4}
                          className={classNames(projectcss.all, sty.image4)}
                        />

                        <div
                          data-plasmic-name={"text7"}
                          data-plasmic-override={overrides.text7}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text7
                          )}
                        >
                          {"Image of Paper Wireframe"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section19"}
                      data-plasmic-override={overrides.section19}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section19)}
                    >
                      <div
                        data-plasmic-name={"paragraph5"}
                        data-plasmic-override={overrides.paragraph5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph5
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__mPxv
                            )}
                          >
                            {"Digital Wireframe"}
                          </h5>
                          <React.Fragment>
                            {
                              "As the initial design phase continued, I made sure to base screen designs on feedback and findings from the user research. I created simple wireframe to map out information that will presented in the screen."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <div
                        data-plasmic-name={"paragraph6"}
                        data-plasmic-override={overrides.paragraph6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph6
                        )}
                      >
                        {
                          "Easy navigation, shortcut and convinient button was a key user need to address in the design s. A homepage is a first page a user land thus this screen is crucial to present only the necessary information"
                        }
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg17"}
                        data-plasmic-override={overrides.richTextImg17}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.richTextImg17
                        )}
                      >
                        <div
                          data-plasmic-name={"image20"}
                          data-plasmic-override={overrides.image20}
                          className={classNames(projectcss.all, sty.image20)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__zcNb
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__z3HPo)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/wireframeProductPagepng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__uUivW
                              )}
                            >
                              {
                                "A label to categorize the item and as a\nsuggestion that makes a product\nstand out from others, it makes it\neasier for users to choose and decide."
                              }
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xtAoh
                              )}
                            >
                              {
                                "A dropdown for packed specific information. Provide flexibility for users to only see the information they need and adjust space for other elements."
                              }
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__zVRdp
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__wWad)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/wireframeProductHomepagepng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__e9G30
                              )}
                            >
                              {
                                "A shortcut of food tracking analytics presented a\nshort information that may necessary for user (has been changed)"
                              }
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fvyqM
                              )}
                            >
                              {
                                "This button at the bottom of the carousel makes it fast and easy for users to recurring order in homescreen"
                              }
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kTvjd
                              )}
                            >
                              {
                                "A favorite/bookmark button for user to save their favorite product"
                              }
                            </div>
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text24"}
                          data-plasmic-override={overrides.text24}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text24
                          )}
                        >
                          {"Image of Digital Wireframe"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section20"}
                      data-plasmic-override={overrides.section20}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section20)}
                    >
                      <div
                        data-plasmic-name={"paragraph31"}
                        data-plasmic-override={overrides.paragraph31}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph31
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__jfJym
                            )}
                          >
                            {"Low-Fidelity prototype"}
                          </h5>
                          <React.Fragment>
                            {
                              "Using the completed set of digital wireframes, I created a low-fidelity prototype. The primary user flow I connected was ordering cat food, so the prototype could be used in a usability study."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg18"}
                        data-plasmic-override={overrides.richTextImg18}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.richTextImg18
                        )}
                      >
                        <div
                          data-plasmic-name={"image21"}
                          data-plasmic-override={overrides.image21}
                          className={classNames(projectcss.all, sty.image21)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__rYweu
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__n8Fim)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/digitalLofiPrototypepng.png",
                                fullWidth: 529,
                                fullHeight: 417,
                                aspectRatio: undefined
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__tcWhw
                              )}
                            >
                              {"View nutricats app"}
                            </div>

                            <p.PlasmicLink
                              data-plasmic-name={"link"}
                              data-plasmic-override={overrides.link}
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link
                              )}
                              component={Link}
                              platform={"nextjs"}
                            >
                              {"Low-fidelity prototype"}
                            </p.PlasmicLink>
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text25"}
                          data-plasmic-override={overrides.text25}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text25
                          )}
                        >
                          {"Image of Low-fidelity prototype"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section21"}
                      data-plasmic-override={overrides.section21}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section21)}
                    >
                      <div
                        data-plasmic-name={"paragraph42"}
                        data-plasmic-override={overrides.paragraph42}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph42
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__y1SN3
                            )}
                          >
                            {"Usability Study: findings"}
                          </h5>
                          <React.Fragment>
                            {
                              "I conducted two rounds of usability studies. Findings from the first study helped guide the designs from wireframes to mockups. The second study used a high-fidelity prototype and revealed what aspects of the mockups needed refining."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg19"}
                        data-plasmic-override={overrides.richTextImg19}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.richTextImg19
                        )}
                      >
                        <div
                          data-plasmic-name={"image22"}
                          data-plasmic-override={overrides.image22}
                          className={classNames(projectcss.all, sty.image22)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column___7MNqj
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___9NPve
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__kCnWl
                                  )}
                                >
                                  {"Round 1 findings"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__azvk5
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <p.Stack
                                  as={"ol"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.ol,
                                    sty.ol__vwefH
                                  )}
                                >
                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__rInT
                                    )}
                                  >
                                    {
                                      "Users need search screen, mostly\nthey tend to find specific product"
                                    }
                                  </li>

                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__tb75D
                                    )}
                                  >
                                    {
                                      "Users want filter options, to sort for\ntheir specific needs"
                                    }
                                  </li>

                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__j9IiA
                                    )}
                                  >
                                    {
                                      "Users feel unsure about calories\nestimation information"
                                    }
                                  </li>
                                </p.Stack>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__ltLi
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yjoeR
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__aAaq1
                                  )}
                                >
                                  {"Round 2 findings"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oQoXh
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <p.Stack
                                  as={"ol"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.ol,
                                    sty.ol__rotMk
                                  )}
                                >
                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__fsdEv
                                    )}
                                  >
                                    {
                                      "At the first glance, Users don’t expect nutrition\ntracking in a cat food delivery service."
                                    }
                                  </li>

                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li___0YuEx
                                    )}
                                  >
                                    {
                                      "Users mostly use the same flow (easy path) even\nwhen they were asked using different paths (indirect\ngoals) and usually want to recurrent order"
                                    }
                                  </li>

                                  <li
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.li,
                                      projectcss.__wab_text,
                                      sty.li__nZFw
                                    )}
                                  >
                                    {
                                      "Users demand more screen and clickable\ncomponent to interact"
                                    }
                                  </li>
                                </p.Stack>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text26"}
                          data-plasmic-override={overrides.text26}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text26
                          )}
                        >
                          {"Image of Usability Study"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section7"}
                      data-plasmic-override={overrides.section7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section7)}
                    >
                      <div
                        data-plasmic-name={"heading7"}
                        data-plasmic-override={overrides.heading7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading7
                        )}
                      >
                        {"Refining the design"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph9"}
                        data-plasmic-override={overrides.paragraph9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph9
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__bPPog
                            )}
                          >
                            {"Mockups"}
                          </h5>
                          <React.Fragment>
                            {
                              "Early designs allowed for some customization , but after the usability studies, I added section tab for user to discuss and read previous review of the product. I thought it would be helpful for user who want to get insight before decide to buy the\nproduct. I also revised reviews to display actual information."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg5"}
                        data-plasmic-override={overrides.richTextImg5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.richTextImg5)}
                      >
                        <div
                          data-plasmic-name={"image23"}
                          data-plasmic-override={overrides.image23}
                          className={classNames(projectcss.all, sty.image23)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__eOdg
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kelSc
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__fhwCx
                                  )}
                                >
                                  {"Before usability study"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__uuyil)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/wireframeProductPagepng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__dmVvE
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__cq3Rq
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__ieBpc
                                  )}
                                >
                                  {"After usability study"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__gV3Hw)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/_02ProductPagepng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text8"}
                          data-plasmic-override={overrides.text8}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text8
                          )}
                        >
                          {"Image of Mockups"}
                        </div>
                      </p.Stack>

                      <div
                        data-plasmic-name={"paragraph43"}
                        data-plasmic-override={overrides.paragraph43}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph43
                        )}
                      >
                        {
                          "The second usability study revealed redundancy of the calories information, user don’t understand it would impact them and how’s it would helpful to present in the homepage. Thus, I changed to progress bar of feed plan and estimation of current cat status. I also changed the category page in navigation bar to Scan Product\nBarcode for user to get insight about composition & automatically tracking nutrition."
                        }
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"richTextImg20"}
                        data-plasmic-override={overrides.richTextImg20}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.richTextImg20
                        )}
                      >
                        <div
                          data-plasmic-name={"image24"}
                          data-plasmic-override={overrides.image24}
                          className={classNames(projectcss.all, sty.image24)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__rR3C
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__m95C
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__l7Tw9
                                  )}
                                >
                                  {"Before usability study"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__ngiu5)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/_01HomeNavpng.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.column__jcrtR
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yxEeQ
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h6
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h6,
                                    projectcss.__wab_text,
                                    sty.h6__pehiM
                                  )}
                                >
                                  {"After usability study"}
                                </h6>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__ccYia)}
                              displayHeight={"320px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/portfolio_bener/images/_01HomeNavFlow1Png.png",
                                fullWidth: 428,
                                fullHeight: 926,
                                aspectRatio: undefined
                              }}
                            />
                          </p.Stack>
                        </div>

                        <div
                          data-plasmic-name={"text27"}
                          data-plasmic-override={overrides.text27}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text27
                          )}
                        >
                          {"Image of Mockups"}
                        </div>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"richTextImg21"}
                          data-plasmic-override={overrides.richTextImg21}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.richTextImg21
                          )}
                        >
                          <div
                            data-plasmic-name={"image25"}
                            data-plasmic-override={overrides.image25}
                            className={classNames(projectcss.all, sty.image25)}
                          >
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.column__b1A9V
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__tn0NH)}
                                displayHeight={"320px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/portfolio_bener/images/sumsung1Png.png",
                                  fullWidth: 272,
                                  fullHeight: 561,
                                  aspectRatio: undefined
                                }}
                              />
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.column___18Ssa
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__vx0Rg)}
                                displayHeight={"320px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/portfolio_bener/images/galaxyNote20Ultra2Png.png",
                                  fullWidth: 272,
                                  fullHeight: 561,
                                  aspectRatio: undefined
                                }}
                              />
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.column__rXilh
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__bUM)}
                                displayHeight={"320px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/portfolio_bener/images/galaxyNote20Ultra1Png.png",
                                  fullWidth: 273,
                                  fullHeight: 561,
                                  aspectRatio: undefined
                                }}
                              />
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.column___1Bauc
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__zp73)}
                                displayHeight={"320px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                loading={"lazy"}
                                src={{
                                  src: "/plasmic/portfolio_bener/images/galaxyNote20Ultrapng.png",
                                  fullWidth: 273,
                                  fullHeight: 561,
                                  aspectRatio: undefined
                                }}
                              />
                            </p.Stack>
                          </div>

                          <div
                            data-plasmic-name={"text29"}
                            data-plasmic-override={overrides.text29}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text29
                            )}
                          >
                            {"Image of Mockups"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph12"}
                      data-plasmic-override={overrides.paragraph12}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph12
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__fa2Wh
                            )}
                          >
                            {"Final Logo & Tagline"}
                          </h5>
                          <React.Fragment>
                            {
                              "I had to spend one hour and a half creating a tagline. I need a tagline that is simple and interesting while also effortless to remember. Thanks to this thread, I got the insight to create the tagline that I wanted. I wanted the tagline to start with the advantage of the feature. “easily manage, hardly stress”. Although a bit silly, I really liked the tagline."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__cc1TM
                            )}
                          >
                            {"High-fidelity prototype"}
                          </h5>
                          <React.Fragment>
                            {
                              "The final high fidelity prototype presented cleaner user flows for ordering cat food and checkout. It addresses user needs for search & filter options and iterates the front banner calories information to feed reminders."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg8"}
                      data-plasmic-override={overrides.richTextImg8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg8)}
                    >
                      <div
                        data-plasmic-name={"image8"}
                        data-plasmic-override={overrides.image8}
                        className={classNames(projectcss.all, sty.image8)}
                      />

                      <div
                        data-plasmic-name={"text12"}
                        data-plasmic-override={overrides.text12}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text12
                        )}
                      >
                        {"Image of High-fidelity prototype"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph13"}
                      data-plasmic-override={overrides.paragraph13}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph13
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__mAlbE
                            )}
                          >
                            {"Sitemap"}
                          </h5>
                          <React.Fragment>
                            {
                              "I created the sitemap to organize the screen and what kind of information can be put on the screen."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__n3GGi
                            )}
                          >
                            {"Accessibility considerations"}
                          </h5>
                          <React.Fragment>
                            {
                              "I created the sitemap to organize the screen and what kind of information can be put on the screen."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg22"}
                      data-plasmic-override={overrides.richTextImg22}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg22)}
                    >
                      <div
                        data-plasmic-name={"image26"}
                        data-plasmic-override={overrides.image26}
                        className={classNames(projectcss.all, sty.image26)}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__nYarx
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__skrT
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <p.Stack
                                as={"ol"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.ol,
                                  sty.ol__fXaBq
                                )}
                              >
                                <li
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.li,
                                    projectcss.__wab_text,
                                    sty.li__hInkc
                                  )}
                                >
                                  {
                                    "Text with crucial\ninformation used colors\nthat pass accessibility\ncontrast WCAG minimum\n4.5:1 AA"
                                  }
                                </li>

                                <li
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.li,
                                    projectcss.__wab_text,
                                    sty.li___97Hi
                                  )}
                                >
                                  {
                                    "For legibility, there is not\na text-in-used smaller\nthan 10px"
                                  }
                                </li>

                                <li
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.li,
                                    projectcss.__wab_text,
                                    sty.li___6Rz4S
                                  )}
                                >
                                  {
                                    "Clear navigation &\ninformation system. User\ncan easily go back and\nreverse the step (in\ncheckout screen)"
                                  }
                                </li>
                              </p.Stack>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>
                        </p.Stack>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section8"}
                      data-plasmic-override={overrides.section8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section8)}
                    >
                      <div
                        data-plasmic-name={"heading8"}
                        data-plasmic-override={overrides.heading8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading8
                        )}
                      >
                        {"Going forward"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph17"}
                        data-plasmic-override={overrides.paragraph17}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph17
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__qZpCh
                            )}
                          >
                            {"Takeways"}
                          </h5>
                          <React.Fragment>
                            {
                              "From the user flow that has been created, I proceed my way to create a wireframe based on a small portion of user flow referencing the before crazy 8’s low fidelity screen."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <div
                        data-plasmic-name={"image27"}
                        data-plasmic-override={overrides.image27}
                        className={classNames(projectcss.all, sty.image27)}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column___6K5IA
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ifsju
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <h6
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h6,
                                  projectcss.__wab_text,
                                  sty.h6__tgZjd
                                )}
                              >
                                {"Impact"}
                              </h6>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rp4U6
                            )}
                          >
                            {
                              "The app makes users feel like\nNutricats really thinks about how to meet their needs."
                            }
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__emFtX
                            )}
                          >
                            {"One quote from user feedback:"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xdeyR
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <blockquote
                                data-plasmic-name={"blockquote"}
                                data-plasmic-override={overrides.blockquote}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.blockquote
                                )}
                              >
                                {
                                  "“The app made it so special and specific of all about cat needs, it means they develop this product to seriously solve cat owner needs... I would definitely be a user in this app, the interface looks so credible & can be trusted” etc"
                                }
                              </blockquote>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__m4LD7
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xkAr0
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <h6
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h6,
                                  projectcss.__wab_text,
                                  sty.h6__fuT0
                                )}
                              >
                                {"Impact"}
                              </h6>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uNFkw
                            )}
                          >
                            {
                              "While designing the Nutricats app, I learned\nthat the assumption or ideas are only the\nbeginning of the process. The ideas can be\noverwhelmed the user, thus only prioritizing\nwhat the user needs not what the user might want. Also, present information in an easily digested manner. Usability studies and peer feedback really shaped each iteration of the app’s designs."
                            }
                          </div>
                        </p.Stack>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section9"}
                      data-plasmic-override={overrides.section9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section9)}
                    >
                      <div
                        data-plasmic-name={"image28"}
                        data-plasmic-override={overrides.image28}
                        className={classNames(projectcss.all, sty.image28)}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__x2CQm
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__fGxrN
                            )}
                          >
                            {"Next Steps"}
                          </h5>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ql2AB
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <p.Stack
                                as={"ol"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.ol,
                                  sty.ol__uFXrF
                                )}
                              >
                                <li
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.li,
                                    projectcss.__wab_text,
                                    sty.li__syUq2
                                  )}
                                >
                                  {
                                    "Iterate the need to\nimprove the interaction\nand add more clickable\nscreen paths, especially\non the product screen,\nsearch screen & receipt\nscreen because these\nscreens are most likely to\nget a lot of visitors."
                                  }
                                </li>

                                <li
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.li,
                                    projectcss.__wab_text,
                                    sty.li___9SoO
                                  )}
                                >
                                  {
                                    "Conduct another round of\nusability studies to\nvalidate whether the pain\npoints users experienced\nhave been effectively\naddressed."
                                  }
                                </li>

                                <li
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.li,
                                    projectcss.__wab_text,
                                    sty.li__a167Z
                                  )}
                                >
                                  {
                                    "Conduct more user\nresearch on the real users\nfrom similar apps or\ncompetitors to determine\nany new areas of need."
                                  }
                                </li>
                              </p.Stack>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>
                        </p.Stack>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section15"}
                      data-plasmic-override={overrides.section15}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section15)}
                    >
                      <div
                        data-plasmic-name={"paragraph25"}
                        data-plasmic-override={overrides.paragraph25}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph25
                        )}
                      >
                        {
                          "Thankyou for reading till the end 👋, have a great day!"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section16"}
                      data-plasmic-override={overrides.section16}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section16)}
                    >
                      <div
                        data-plasmic-name={"heading9"}
                        data-plasmic-override={overrides.heading9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading9
                        )}
                      >
                        {"Let's Connect!"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph26"}
                        data-plasmic-override={overrides.paragraph26}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph26
                        )}
                      >
                        {
                          "Thank you for your time reviewing my work on the Nutricats app! If you’d like to see more or get in touch, my contact information is provided below."
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section17"}
                      data-plasmic-override={overrides.section17}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section17)}
                    >
                      <Divider2Icon
                        className={classNames(projectcss.all, sty.svg__ulLfx)}
                        role={"img"}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"authorAndSocialLinks"}
                        data-plasmic-override={overrides.authorAndSocialLinks}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.authorAndSocialLinks
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"avatarLabelGroup"}
                          data-plasmic-override={overrides.avatarLabelGroup}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.avatarLabelGroup
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"avatar"}
                              data-plasmic-override={overrides.avatar}
                              className={classNames(projectcss.all, sty.avatar)}
                            />
                          ) : null}

                          <div
                            data-plasmic-name={"textAndSupportingText"}
                            data-plasmic-override={
                              overrides.textAndSupportingText
                            }
                            className={classNames(
                              projectcss.all,
                              sty.textAndSupportingText
                            )}
                          >
                            <div
                              data-plasmic-name={"text22"}
                              data-plasmic-override={overrides.text22}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text22
                              )}
                            >
                              {"Demas Bermani Surya"}
                            </div>

                            <div
                              data-plasmic-name={"supportingText6"}
                              data-plasmic-override={overrides.supportingText6}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.supportingText6
                              )}
                            >
                              {"Aspiring UI/UX Designer"}
                            </div>
                          </div>
                        </p.Stack>

                        {false ? (
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"socialLinks"}
                            data-plasmic-override={overrides.socialLinks}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.socialLinks
                            )}
                          >
                            <div
                              data-plasmic-name={"button"}
                              data-plasmic-override={overrides.button}
                              className={classNames(projectcss.all, sty.button)}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase2"}
                                data-plasmic-override={overrides.buttonBase2}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase2
                                )}
                              >
                                <CopyIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__lHtco
                                  )}
                                  role={"img"}
                                />

                                <div
                                  data-plasmic-name={"text23"}
                                  data-plasmic-override={overrides.text23}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text23
                                  )}
                                >
                                  {"Copy link"}
                                </div>
                              </p.Stack>
                            </div>

                            <div
                              data-plasmic-name={"button2"}
                              data-plasmic-override={overrides.button2}
                              className={classNames(
                                projectcss.all,
                                sty.button2
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase3"}
                                data-plasmic-override={overrides.buttonBase3}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase3
                                )}
                              >
                                <SocialIconIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___4Wed8
                                  )}
                                  role={"img"}
                                />
                              </p.Stack>
                            </div>

                            <div
                              data-plasmic-name={"button3"}
                              data-plasmic-override={overrides.button3}
                              className={classNames(
                                projectcss.all,
                                sty.button3
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase4"}
                                data-plasmic-override={overrides.buttonBase4}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase4
                                )}
                              >
                                <SocialIcon2Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__kudn0
                                  )}
                                  role={"img"}
                                />
                              </p.Stack>
                            </div>

                            <div
                              data-plasmic-name={"button4"}
                              data-plasmic-override={overrides.button4}
                              className={classNames(
                                projectcss.all,
                                sty.button4
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase5"}
                                data-plasmic-override={overrides.buttonBase5}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase5
                                )}
                              >
                                <div
                                  data-plasmic-name={"socialIcon"}
                                  data-plasmic-override={overrides.socialIcon}
                                  className={classNames(
                                    projectcss.all,
                                    sty.socialIcon
                                  )}
                                >
                                  <Group9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__rYoiH
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </p.Stack>
                            </div>
                          </p.Stack>
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigationBar",
    "blogPosts",
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7",
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "buttonBase6",
    "text9",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "link",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg22",
    "image26",
    "section8",
    "heading8",
    "paragraph17",
    "image27",
    "blockquote",
    "section9",
    "image28",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  navigationBar: ["navigationBar"],
  blogPosts: [
    "blogPosts",
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7",
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "buttonBase6",
    "text9",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "link",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg22",
    "image26",
    "section8",
    "heading8",
    "paragraph17",
    "image27",
    "blockquote",
    "section9",
    "image28",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  frame178: [
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],

  frame170: [
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],

  frame176: ["frame176", "subheading", "frame175", "heading", "supportingText"],
  subheading: ["subheading"],
  frame175: ["frame175", "heading", "supportingText"],
  heading: ["heading"],
  supportingText: ["supportingText"],
  frame177: [
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3"
  ],

  badgeBase: ["badgeBase"],
  badgeBase2: ["badgeBase2", "text2"],
  text2: ["text2"],
  badgeBase3: ["badgeBase3", "text3"],
  text3: ["text3"],
  tooltip: [
    "tooltip",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],

  content3: ["content3", "textAndSupportingText2", "text28", "supportingText7"],
  textAndSupportingText2: [
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],

  text28: ["text28"],
  supportingText7: ["supportingText7"],
  section: [
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "buttonBase6",
    "text9",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "link",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg22",
    "image26",
    "section8",
    "heading8",
    "paragraph17",
    "image27",
    "blockquote",
    "section9",
    "image28",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  container: [
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "buttonBase6",
    "text9"
  ],

  content: [
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "buttonBase6",
    "text9"
  ],

  containerHighlighted: [
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "buttonBase6",
    "text9"
  ],

  containter: [
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3"
  ],

  role: ["role", "supportingText2"],
  supportingText2: ["supportingText2"],
  scope: ["scope", "supportingText3"],
  supportingText3: ["supportingText3"],
  container2: [
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "buttonBase6",
    "text9"
  ],

  frame179: [
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "timeline2",
    "supportingText8",
    "buttonBase6",
    "text9"
  ],

  projectObjective: ["projectObjective", "supportingText4"],
  supportingText4: ["supportingText4"],
  timeline: ["timeline", "supportingText5"],
  supportingText5: ["supportingText5"],
  timeline2: ["timeline2", "supportingText8", "buttonBase6", "text9"],
  supportingText8: ["supportingText8"],
  buttonBase6: ["buttonBase6", "text9"],
  text9: ["text9"],
  container3: [
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "link",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg22",
    "image26",
    "section8",
    "heading8",
    "paragraph17",
    "image27",
    "blockquote",
    "section9",
    "image28",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  content2: [
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "link",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg22",
    "image26",
    "section8",
    "heading8",
    "paragraph17",
    "image27",
    "blockquote",
    "section9",
    "image28",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  richText: [
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "intro2",
    "section18",
    "heading10",
    "intro3",
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7",
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24",
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "link",
    "text25",
    "section21",
    "paragraph42",
    "richTextImg19",
    "image22",
    "text26",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg22",
    "image26",
    "section8",
    "heading8",
    "paragraph17",
    "image27",
    "blockquote",
    "section9",
    "image28",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  section2: ["section2", "heading2", "intro"],
  heading2: ["heading2"],
  intro: ["intro"],
  section3: ["section3", "heading3", "intro2"],
  heading3: ["heading3"],
  intro2: ["intro2"],
  section18: ["section18", "heading10", "intro3"],
  heading10: ["heading10"],
  intro3: ["intro3"],
  section4: [
    "section4",
    "heading4",
    "paragraph2",
    "intro4",
    "paragraph27",
    "paragraph28",
    "paragraph29",
    "paragraph30"
  ],

  heading4: ["heading4"],
  paragraph2: ["paragraph2"],
  intro4: ["intro4"],
  paragraph27: ["paragraph27"],
  paragraph28: ["paragraph28"],
  paragraph29: ["paragraph29"],
  paragraph30: ["paragraph30"],
  richTextImg: ["richTextImg", "image", "text4"],
  image: ["image"],
  text4: ["text4"],
  section5: [
    "section5",
    "heading5",
    "paragraph3",
    "paragraph32",
    "paragraph33",
    "paragraph34",
    "paragraph35",
    "paragraph36",
    "paragraph37",
    "paragraph38",
    "paragraph39",
    "paragraph40",
    "paragraph41"
  ],

  heading5: ["heading5"],
  paragraph3: ["paragraph3"],
  paragraph32: ["paragraph32"],
  paragraph33: ["paragraph33"],
  paragraph34: ["paragraph34"],
  paragraph35: ["paragraph35"],
  paragraph36: ["paragraph36"],
  paragraph37: ["paragraph37"],
  paragraph38: ["paragraph38"],
  paragraph39: ["paragraph39"],
  paragraph40: ["paragraph40"],
  paragraph41: ["paragraph41"],
  paragraph7: ["paragraph7"],
  richTextImg2: ["richTextImg2", "image2", "text5"],
  image2: ["image2"],
  text5: ["text5"],
  paragraph8: ["paragraph8"],
  richTextImg3: ["richTextImg3", "image3", "text6"],
  image3: ["image3"],
  text6: ["text6"],
  section6: [
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg4",
    "image4",
    "text7"
  ],

  heading6: ["heading6"],
  paragraph4: ["paragraph4"],
  richTextImg4: ["richTextImg4", "image4", "text7"],
  image4: ["image4"],
  text7: ["text7"],
  section19: [
    "section19",
    "paragraph5",
    "paragraph6",
    "richTextImg17",
    "image20",
    "text24"
  ],

  paragraph5: ["paragraph5"],
  paragraph6: ["paragraph6"],
  richTextImg17: ["richTextImg17", "image20", "text24"],
  image20: ["image20"],
  text24: ["text24"],
  section20: [
    "section20",
    "paragraph31",
    "richTextImg18",
    "image21",
    "link",
    "text25"
  ],

  paragraph31: ["paragraph31"],
  richTextImg18: ["richTextImg18", "image21", "link", "text25"],
  image21: ["image21", "link"],
  link: ["link"],
  text25: ["text25"],
  section21: ["section21", "paragraph42", "richTextImg19", "image22", "text26"],
  paragraph42: ["paragraph42"],
  richTextImg19: ["richTextImg19", "image22", "text26"],
  image22: ["image22"],
  text26: ["text26"],
  section7: [
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg5",
    "image23",
    "text8",
    "paragraph43",
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29"
  ],

  heading7: ["heading7"],
  paragraph9: ["paragraph9"],
  richTextImg5: ["richTextImg5", "image23", "text8"],
  image23: ["image23"],
  text8: ["text8"],
  paragraph43: ["paragraph43"],
  richTextImg20: [
    "richTextImg20",
    "image24",
    "text27",
    "richTextImg21",
    "image25",
    "text29"
  ],

  image24: ["image24"],
  text27: ["text27"],
  richTextImg21: ["richTextImg21", "image25", "text29"],
  image25: ["image25"],
  text29: ["text29"],
  paragraph12: ["paragraph12"],
  richTextImg8: ["richTextImg8", "image8", "text12"],
  image8: ["image8"],
  text12: ["text12"],
  paragraph13: ["paragraph13"],
  richTextImg22: ["richTextImg22", "image26"],
  image26: ["image26"],
  section8: ["section8", "heading8", "paragraph17", "image27", "blockquote"],
  heading8: ["heading8"],
  paragraph17: ["paragraph17"],
  image27: ["image27", "blockquote"],
  blockquote: ["blockquote"],
  section9: ["section9", "image28"],
  image28: ["image28"],
  section15: ["section15", "paragraph25"],
  paragraph25: ["paragraph25"],
  section16: ["section16", "heading9", "paragraph26"],
  heading9: ["heading9"],
  paragraph26: ["paragraph26"],
  section17: [
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  authorAndSocialLinks: [
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  avatarLabelGroup: [
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6"
  ],

  avatar: ["avatar"],
  textAndSupportingText: ["textAndSupportingText", "text22", "supportingText6"],
  text22: ["text22"],
  supportingText6: ["supportingText6"],
  socialLinks: [
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],

  button: ["button", "buttonBase2", "text23"],
  buttonBase2: ["buttonBase2", "text23"],
  text23: ["text23"],
  button2: ["button2", "buttonBase3"],
  buttonBase3: ["buttonBase3"],
  button3: ["button3", "buttonBase4"],
  buttonBase4: ["buttonBase4"],
  button4: ["button4", "buttonBase5", "socialIcon"],
  buttonBase5: ["buttonBase5", "socialIcon"],
  socialIcon: ["socialIcon"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicGoogleUx__ArgProps,
      internalVariantPropNames: PlasmicGoogleUx__VariantProps
    });

    return PlasmicGoogleUx__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGoogleUx";
  } else {
    func.displayName = `PlasmicGoogleUx.${nodeName}`;
  }
  return func;
}

export const PlasmicGoogleUx = Object.assign(
  // Top-level PlasmicGoogleUx renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    blogPosts: makeNodeComponent("blogPosts"),
    frame178: makeNodeComponent("frame178"),
    frame170: makeNodeComponent("frame170"),
    frame176: makeNodeComponent("frame176"),
    subheading: makeNodeComponent("subheading"),
    frame175: makeNodeComponent("frame175"),
    heading: makeNodeComponent("heading"),
    supportingText: makeNodeComponent("supportingText"),
    frame177: makeNodeComponent("frame177"),
    badgeBase: makeNodeComponent("badgeBase"),
    badgeBase2: makeNodeComponent("badgeBase2"),
    text2: makeNodeComponent("text2"),
    badgeBase3: makeNodeComponent("badgeBase3"),
    text3: makeNodeComponent("text3"),
    tooltip: makeNodeComponent("tooltip"),
    content3: makeNodeComponent("content3"),
    textAndSupportingText2: makeNodeComponent("textAndSupportingText2"),
    text28: makeNodeComponent("text28"),
    supportingText7: makeNodeComponent("supportingText7"),
    section: makeNodeComponent("section"),
    container: makeNodeComponent("container"),
    content: makeNodeComponent("content"),
    containerHighlighted: makeNodeComponent("containerHighlighted"),
    containter: makeNodeComponent("containter"),
    role: makeNodeComponent("role"),
    supportingText2: makeNodeComponent("supportingText2"),
    scope: makeNodeComponent("scope"),
    supportingText3: makeNodeComponent("supportingText3"),
    container2: makeNodeComponent("container2"),
    frame179: makeNodeComponent("frame179"),
    projectObjective: makeNodeComponent("projectObjective"),
    supportingText4: makeNodeComponent("supportingText4"),
    timeline: makeNodeComponent("timeline"),
    supportingText5: makeNodeComponent("supportingText5"),
    timeline2: makeNodeComponent("timeline2"),
    supportingText8: makeNodeComponent("supportingText8"),
    buttonBase6: makeNodeComponent("buttonBase6"),
    text9: makeNodeComponent("text9"),
    container3: makeNodeComponent("container3"),
    content2: makeNodeComponent("content2"),
    richText: makeNodeComponent("richText"),
    section2: makeNodeComponent("section2"),
    heading2: makeNodeComponent("heading2"),
    intro: makeNodeComponent("intro"),
    section3: makeNodeComponent("section3"),
    heading3: makeNodeComponent("heading3"),
    intro2: makeNodeComponent("intro2"),
    section18: makeNodeComponent("section18"),
    heading10: makeNodeComponent("heading10"),
    intro3: makeNodeComponent("intro3"),
    section4: makeNodeComponent("section4"),
    heading4: makeNodeComponent("heading4"),
    paragraph2: makeNodeComponent("paragraph2"),
    intro4: makeNodeComponent("intro4"),
    paragraph27: makeNodeComponent("paragraph27"),
    paragraph28: makeNodeComponent("paragraph28"),
    paragraph29: makeNodeComponent("paragraph29"),
    paragraph30: makeNodeComponent("paragraph30"),
    richTextImg: makeNodeComponent("richTextImg"),
    image: makeNodeComponent("image"),
    text4: makeNodeComponent("text4"),
    section5: makeNodeComponent("section5"),
    heading5: makeNodeComponent("heading5"),
    paragraph3: makeNodeComponent("paragraph3"),
    paragraph32: makeNodeComponent("paragraph32"),
    paragraph33: makeNodeComponent("paragraph33"),
    paragraph34: makeNodeComponent("paragraph34"),
    paragraph35: makeNodeComponent("paragraph35"),
    paragraph36: makeNodeComponent("paragraph36"),
    paragraph37: makeNodeComponent("paragraph37"),
    paragraph38: makeNodeComponent("paragraph38"),
    paragraph39: makeNodeComponent("paragraph39"),
    paragraph40: makeNodeComponent("paragraph40"),
    paragraph41: makeNodeComponent("paragraph41"),
    paragraph7: makeNodeComponent("paragraph7"),
    richTextImg2: makeNodeComponent("richTextImg2"),
    image2: makeNodeComponent("image2"),
    text5: makeNodeComponent("text5"),
    paragraph8: makeNodeComponent("paragraph8"),
    richTextImg3: makeNodeComponent("richTextImg3"),
    image3: makeNodeComponent("image3"),
    text6: makeNodeComponent("text6"),
    section6: makeNodeComponent("section6"),
    heading6: makeNodeComponent("heading6"),
    paragraph4: makeNodeComponent("paragraph4"),
    richTextImg4: makeNodeComponent("richTextImg4"),
    image4: makeNodeComponent("image4"),
    text7: makeNodeComponent("text7"),
    section19: makeNodeComponent("section19"),
    paragraph5: makeNodeComponent("paragraph5"),
    paragraph6: makeNodeComponent("paragraph6"),
    richTextImg17: makeNodeComponent("richTextImg17"),
    image20: makeNodeComponent("image20"),
    text24: makeNodeComponent("text24"),
    section20: makeNodeComponent("section20"),
    paragraph31: makeNodeComponent("paragraph31"),
    richTextImg18: makeNodeComponent("richTextImg18"),
    image21: makeNodeComponent("image21"),
    link: makeNodeComponent("link"),
    text25: makeNodeComponent("text25"),
    section21: makeNodeComponent("section21"),
    paragraph42: makeNodeComponent("paragraph42"),
    richTextImg19: makeNodeComponent("richTextImg19"),
    image22: makeNodeComponent("image22"),
    text26: makeNodeComponent("text26"),
    section7: makeNodeComponent("section7"),
    heading7: makeNodeComponent("heading7"),
    paragraph9: makeNodeComponent("paragraph9"),
    richTextImg5: makeNodeComponent("richTextImg5"),
    image23: makeNodeComponent("image23"),
    text8: makeNodeComponent("text8"),
    paragraph43: makeNodeComponent("paragraph43"),
    richTextImg20: makeNodeComponent("richTextImg20"),
    image24: makeNodeComponent("image24"),
    text27: makeNodeComponent("text27"),
    richTextImg21: makeNodeComponent("richTextImg21"),
    image25: makeNodeComponent("image25"),
    text29: makeNodeComponent("text29"),
    paragraph12: makeNodeComponent("paragraph12"),
    richTextImg8: makeNodeComponent("richTextImg8"),
    image8: makeNodeComponent("image8"),
    text12: makeNodeComponent("text12"),
    paragraph13: makeNodeComponent("paragraph13"),
    richTextImg22: makeNodeComponent("richTextImg22"),
    image26: makeNodeComponent("image26"),
    section8: makeNodeComponent("section8"),
    heading8: makeNodeComponent("heading8"),
    paragraph17: makeNodeComponent("paragraph17"),
    image27: makeNodeComponent("image27"),
    blockquote: makeNodeComponent("blockquote"),
    section9: makeNodeComponent("section9"),
    image28: makeNodeComponent("image28"),
    section15: makeNodeComponent("section15"),
    paragraph25: makeNodeComponent("paragraph25"),
    section16: makeNodeComponent("section16"),
    heading9: makeNodeComponent("heading9"),
    paragraph26: makeNodeComponent("paragraph26"),
    section17: makeNodeComponent("section17"),
    authorAndSocialLinks: makeNodeComponent("authorAndSocialLinks"),
    avatarLabelGroup: makeNodeComponent("avatarLabelGroup"),
    avatar: makeNodeComponent("avatar"),
    textAndSupportingText: makeNodeComponent("textAndSupportingText"),
    text22: makeNodeComponent("text22"),
    supportingText6: makeNodeComponent("supportingText6"),
    socialLinks: makeNodeComponent("socialLinks"),
    button: makeNodeComponent("button"),
    buttonBase2: makeNodeComponent("buttonBase2"),
    text23: makeNodeComponent("text23"),
    button2: makeNodeComponent("button2"),
    buttonBase3: makeNodeComponent("buttonBase3"),
    button3: makeNodeComponent("button3"),
    buttonBase4: makeNodeComponent("buttonBase4"),
    button4: makeNodeComponent("button4"),
    buttonBase5: makeNodeComponent("buttonBase5"),
    socialIcon: makeNodeComponent("socialIcon"),
    // Metadata about props expected for PlasmicGoogleUx
    internalVariantProps: PlasmicGoogleUx__VariantProps,
    internalArgProps: PlasmicGoogleUx__ArgProps
  }
);

export default PlasmicGoogleUx;
/* prettier-ignore-end */
