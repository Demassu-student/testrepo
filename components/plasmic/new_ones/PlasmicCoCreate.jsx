// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 578p2KiWp3ZSUFPY7FrhK3
// Component: JzUfKSCjMNmY2Z
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavigationBar from "../../NavigationBar"; // plasmic-import: BLtbByl5tB5/component
import Select from "../../Select"; // plasmic-import: 3Vr7VM3BiE8vGJ/component
import { useScreenVariants as useScreenVariantstU3UFp3Zwbn8D } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: _tU3UFp3Zwbn8d/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_new_ones.module.css"; // plasmic-import: 578p2KiWp3ZSUFPY7FrhK3/projectcss
import sty from "./PlasmicCoCreate.module.css"; // plasmic-import: JzUfKSCjMNmY2Z/css
import Divider2Icon from "./icons/PlasmicIcon__Divider2"; // plasmic-import: wszRZDHrfCJaE9/icon
import ArrowUpRight2Icon from "./icons/PlasmicIcon__ArrowUpRight2"; // plasmic-import: J3O_4eStjkD7ZV/icon
import CopyIcon from "./icons/PlasmicIcon__Copy"; // plasmic-import: 3hWh_eWxbClQvX/icon
import SocialIconIcon from "./icons/PlasmicIcon__SocialIcon"; // plasmic-import: 4p046xg_E92q0B/icon
import SocialIcon2Icon from "./icons/PlasmicIcon__SocialIcon2"; // plasmic-import: cVIq4NUX5C4QL_/icon
import Group9Icon from "./icons/PlasmicIcon__Group9"; // plasmic-import: RDagWvZuGPzEwr/icon

export const PlasmicCoCreate__VariantProps = new Array();

export const PlasmicCoCreate__ArgProps = new Array("children2");

function PlasmicCoCreate__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstU3UFp3Zwbn8D()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Jenius CoCreate Revamp Competition"}</title>
        <meta
          key="og:title"
          property="og:title"
          content={"Jenius CoCreate Revamp Competition"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <NavigationBar
            data-plasmic-name={"navigationBar"}
            data-plasmic-override={overrides.navigationBar}
            className={classNames("__wab_instance", sty.navigationBar)}
          >
            {p.renderPlasmicSlot({
              defaultContents: (
                <Select
                  className={classNames("__wab_instance", sty.select__wy5Dx)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tkI96
                      )}
                    >
                      {"Selected works"}
                    </div>
                  }
                  selectedContent={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lqZq9
                      )}
                    >
                      {"Selected works"}
                    </div>
                  }
                />
              ),

              value: args.children2
            })}
          </NavigationBar>

          <div
            data-plasmic-name={"blogPosts"}
            data-plasmic-override={overrides.blogPosts}
            className={classNames(projectcss.all, sty.blogPosts)}
          >
            <p.PlasmicImg
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"516px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "auto"
                  : "1440px"
              }
              loading={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "eager"
                  : "lazy"
              }
              src={{
                src: "/plasmic/new_ones/images/headerImage.svg",
                fullWidth: 1440,
                fullHeight: 516,
                aspectRatio: 2.790698
              }}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame178"}
              data-plasmic-override={overrides.frame178}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame178)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame170"}
                data-plasmic-override={overrides.frame170}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame170)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame176"}
                  data-plasmic-override={overrides.frame176}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame176)}
                >
                  <div
                    data-plasmic-name={"subheading"}
                    data-plasmic-override={overrides.subheading}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.subheading
                    )}
                  >
                    {"Published 20 March 2022"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame175"}
                    data-plasmic-override={overrides.frame175}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame175)}
                  >
                    <div
                      data-plasmic-name={"heading"}
                      data-plasmic-override={overrides.heading}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.heading
                      )}
                    >
                      {"Jenius CoCreate Revamp Competition"}
                    </div>

                    <div
                      data-plasmic-name={"supportingText"}
                      data-plasmic-override={overrides.supportingText}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.supportingText
                      )}
                    >
                      {
                        "Jenius Co.Create that it is a platform that encourages their users to actively co create and collaborate for making innovation for its services. "
                      }
                    </div>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame177"}
                  data-plasmic-override={overrides.frame177}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame177)}
                >
                  <div
                    data-plasmic-name={"badgeBase"}
                    data-plasmic-override={overrides.badgeBase}
                    className={classNames(projectcss.all, sty.badgeBase)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0P83C
                      )}
                    >
                      {"Research"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"badgeBase2"}
                    data-plasmic-override={overrides.badgeBase2}
                    className={classNames(projectcss.all, sty.badgeBase2)}
                  >
                    <div
                      data-plasmic-name={"text2"}
                      data-plasmic-override={overrides.text2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text2
                      )}
                    >
                      {"Design"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"badgeBase3"}
                    data-plasmic-override={overrides.badgeBase3}
                    className={classNames(projectcss.all, sty.badgeBase3)}
                  >
                    <div
                      data-plasmic-name={"text3"}
                      data-plasmic-override={overrides.text3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text3
                      )}
                    >
                      {"Testing"}
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              hasGap={true}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                hasGap={true}
                className={classNames(projectcss.all, sty.container)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content"}
                  data-plasmic-override={overrides.content}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"containerHighlighted"}
                    data-plasmic-override={overrides.containerHighlighted}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.containerHighlighted
                    )}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"containter"}
                      data-plasmic-override={overrides.containter}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.containter)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"role"}
                        data-plasmic-override={overrides.role}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.role)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__c8Zvp
                          )}
                        >
                          {"Role"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText2"}
                          data-plasmic-override={overrides.supportingText2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText2
                          )}
                        >
                          {"UXUI Designer (Designing)"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"scope"}
                        data-plasmic-override={overrides.scope}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.scope)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iWdVj
                          )}
                        >
                          {"Scope"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText3"}
                          data-plasmic-override={overrides.supportingText3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText3
                          )}
                        >
                          {
                            "Brainstorming, Define, Ideate, Design, Test and Iterating"
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"container2"}
                      data-plasmic-override={overrides.container2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.container2)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"projectObjective"}
                        data-plasmic-override={overrides.projectObjective}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.projectObjective
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qzjMh
                          )}
                        >
                          {"Project Objective"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText4"}
                          data-plasmic-override={overrides.supportingText4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText4
                          )}
                        >
                          {
                            "To initiate user to signup to jenius\nTo educate user about financial service (Jenius)\nTo build a space for user to hangout and discuss\nTo engage new user and maintain existing user"
                          }
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"timeline"}
                        data-plasmic-override={overrides.timeline}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.timeline)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__t17L
                          )}
                        >
                          {"Timeline"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText5"}
                          data-plasmic-override={overrides.supportingText5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText5
                          )}
                        >
                          {"25 Nov - 24 Feb (14 weeks)"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"container3"}
                data-plasmic-override={overrides.container3}
                hasGap={true}
                className={classNames(projectcss.all, sty.container3)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content2"}
                  data-plasmic-override={overrides.content2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"richText"}
                    data-plasmic-override={overrides.richText}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.richText)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section2"}
                      data-plasmic-override={overrides.section2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section2)}
                    >
                      <div
                        data-plasmic-name={"heading2"}
                        data-plasmic-override={overrides.heading2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading2
                        )}
                      >
                        {"Project Overview"}
                      </div>

                      <div
                        data-plasmic-name={"intro"}
                        data-plasmic-override={overrides.intro}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.intro
                        )}
                      >
                        {
                          "This project was for Jenius Co.Create Website Revamp Competition. The objective of this project is to engage Jenius user to actively contribute in cocreating on Jenius Co.Create with ease. However, due to certain circumstances, we (me & my team) decided to not submit the design until the deadline day."
                        }
                      </div>

                      <Divider2Icon
                        className={classNames(projectcss.all, sty.svg__aeeQj)}
                        role={"img"}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section3"}
                      data-plasmic-override={overrides.section3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section3)}
                    >
                      <div
                        data-plasmic-name={"heading3"}
                        data-plasmic-override={overrides.heading3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading3
                        )}
                      >
                        {"Introduction"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph"}
                        data-plasmic-override={overrides.paragraph}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph
                        )}
                      >
                        {
                          "This project is for Jenius Co.Create Website Revamp Competition. Our objective is to have an intuitive, ease of use, and appealing website. \nThe tools that we mainly used are Miro, as a tool to brainstorm, make initial pain points, and initial user flow. We did all the planning stuff in Google Spreadsheet and Notion. Then, Figma as a design and prototype tool."
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section4"}
                      data-plasmic-override={overrides.section4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section4)}
                    >
                      <div
                        data-plasmic-name={"heading4"}
                        data-plasmic-override={overrides.heading4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading4
                        )}
                      >
                        {"Design Process"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph2"}
                        data-plasmic-override={overrides.paragraph2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph2
                        )}
                      >
                        {
                          "In this case study, we used a design thinking framework as a tool in the process. Design thinking is a human-centered approach to integrate a product to provide possibilities and user need"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg"}
                      data-plasmic-override={overrides.richTextImg}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg)}
                    >
                      <div
                        data-plasmic-name={"image"}
                        data-plasmic-override={overrides.image}
                        className={classNames(projectcss.all, sty.image)}
                      />

                      <div
                        data-plasmic-name={"text4"}
                        data-plasmic-override={overrides.text4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text4
                        )}
                      >
                        {"Image of Design Process"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section5"}
                      data-plasmic-override={overrides.section5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section5)}
                    >
                      <div
                        data-plasmic-name={"heading5"}
                        data-plasmic-override={overrides.heading5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading5
                        )}
                      >
                        {"Discovery"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph3"}
                        data-plasmic-override={overrides.paragraph3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph3
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {
                              "We started by asking ourselves several questions,\r\n\n"
                            }
                          </React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__jHxMh
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__yuuWn
                              )}
                            >
                              {"What is Jenius CoCreate about?\r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___9IuQg
                              )}
                            >
                              {"Who is possibly the user?\r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__kwN3Q
                              )}
                            >
                              {"Who is the Competitor?\r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__ixg6J
                              )}
                            >
                              {"What are Pain Points the user experienced?"}
                            </li>
                          </ul>
                          <React.Fragment>
                            {
                              "\nThen, we continue to explore anything related to the Jenius Cocrate by having observation and an in-depth discussion along the way over the Jenius Co.Create Website. We observed Jenius CoCreate through Google search to find related news articles… for later to conduct a competitor analysis."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockquote"}
                      data-plasmic-override={overrides.blockquote}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.blockquote)}
                    >
                      <div
                        data-plasmic-name={"leftBorder"}
                        data-plasmic-override={overrides.leftBorder}
                        className={classNames(projectcss.all, sty.leftBorder)}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"quoteWrap"}
                        data-plasmic-override={overrides.quoteWrap}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.quoteWrap)}
                      >
                        <div
                          data-plasmic-name={"quote"}
                          data-plasmic-override={overrides.quote}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.quote
                          )}
                        >
                          {
                            "Jenius CoCreate is a community website for anyone especially today’s digital savvy society to sharing knowledge about tech,creative and finance. CoCreate has many features some of interesting ones are CoCreate Blog, Discussion, Challenge and Ideas."
                          }
                        </div>

                        <div
                          data-plasmic-name={"text5"}
                          data-plasmic-override={overrides.text5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text5
                          )}
                        >
                          {"— From Tempo"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section6"}
                      data-plasmic-override={overrides.section6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section6)}
                    >
                      <div
                        data-plasmic-name={"heading6"}
                        data-plasmic-override={overrides.heading6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading6
                        )}
                      >
                        {"Define"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph4"}
                        data-plasmic-override={overrides.paragraph4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph4
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__f8S7C
                            )}
                          >
                            {"Target User\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "People aging around 20–40 years old from university students to professionals who are tech and digital savvy.\r\n"
                            }
                          </React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__aWtZt
                            )}
                          >
                            {"User story\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "The purpose of this step was to maintain the problem user-centered, actionable, and clear. This process feels necessary as it establishes clear boundaries to focus on user goals."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg2"}
                      data-plasmic-override={overrides.richTextImg2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg2)}
                    >
                      <div
                        data-plasmic-name={"image2"}
                        data-plasmic-override={overrides.image2}
                        className={classNames(projectcss.all, sty.image2)}
                      />

                      <div
                        data-plasmic-name={"text6"}
                        data-plasmic-override={overrides.text6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text6
                        )}
                      >
                        {"Image of General User Story"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph5"}
                      data-plasmic-override={overrides.paragraph5}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph5
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__mlkVl
                          )}
                        >
                          {"Pain Points & How Might We\r"}
                        </h5>
                        <React.Fragment>
                          {
                            "In this phase, we position ourselves as a user. We tried some of the features of Jenius Co.Create Website and outlined some notes throughout this phase. We had an in-depth discussion about our perspective and experience of using the website."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg3"}
                      data-plasmic-override={overrides.richTextImg3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg3)}
                    >
                      <div
                        data-plasmic-name={"image3"}
                        data-plasmic-override={overrides.image3}
                        className={classNames(projectcss.all, sty.image3)}
                      />

                      <div
                        data-plasmic-name={"text7"}
                        data-plasmic-override={overrides.text7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text7
                        )}
                      >
                        {"Image of Pain Points"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section7"}
                      data-plasmic-override={overrides.section7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section7)}
                    >
                      <div
                        data-plasmic-name={"heading7"}
                        data-plasmic-override={overrides.heading7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading7
                        )}
                      >
                        {"Ideate"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph6"}
                        data-plasmic-override={overrides.paragraph6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph6
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h6
                            className={classNames(
                              projectcss.all,
                              projectcss.h6,
                              projectcss.__wab_text,
                              sty.h6__csg7U
                            )}
                          >
                            {"Site Map\r"}
                          </h6>
                          <React.Fragment>
                            {
                              "Before we created user flow, we organized the pages into hierarchical diagrams in order to show how the pages are prioritized. We have four main pages that we have to design including homepage, events and webinar, article, and forum.\r"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg4"}
                      data-plasmic-override={overrides.richTextImg4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg4)}
                    >
                      <div
                        data-plasmic-name={"image4"}
                        data-plasmic-override={overrides.image4}
                        className={classNames(projectcss.all, sty.image4)}
                      />

                      <div
                        data-plasmic-name={"text8"}
                        data-plasmic-override={overrides.text8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text8
                        )}
                      >
                        {"Image of Sitemap"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section8"}
                      data-plasmic-override={overrides.section8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section8)}
                    >
                      <div
                        data-plasmic-name={"paragraph7"}
                        data-plasmic-override={overrides.paragraph7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph7
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h6
                            className={classNames(
                              projectcss.all,
                              projectcss.h6,
                              projectcss.__wab_text,
                              sty.h6__dmsxB
                            )}
                          >
                            {"Userflow\r"}
                          </h6>
                          <React.Fragment>
                            {
                              "After building the site map, we proceeded to create a user flow which is a path that users take through the website to achieve their goal. In this process, we segmented user flows for the end goal of each section. Then, we brainstormed and organized some set of steps so users could interact with the website effectively and efficiently. During the process, we tried to make the journey effortless by considering users undertaking no more than 3 clicks to achieve their goal.\r\nWe noted some of the goals or activities that the user can do in Jenius CoCreate as a reference for making an Userflow. "
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg5"}
                      data-plasmic-override={overrides.richTextImg5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg5)}
                    >
                      <div
                        data-plasmic-name={"image5"}
                        data-plasmic-override={overrides.image5}
                        className={classNames(projectcss.all, sty.image5)}
                      />

                      <div
                        data-plasmic-name={"text9"}
                        data-plasmic-override={overrides.text9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text9
                        )}
                      >
                        {"Image of What can we do"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section9"}
                      data-plasmic-override={overrides.section9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section9)}
                    >
                      <div
                        data-plasmic-name={"paragraph8"}
                        data-plasmic-override={overrides.paragraph8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph8
                        )}
                      >
                        {
                          "Example Userstory for Writing an Article: As a Content Creator, I want to share my story of overcoming poor arranging financial planning, so I can get feedback or help others if they are struggling with the same issue: \r\n"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg6"}
                      data-plasmic-override={overrides.richTextImg6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg6)}
                    >
                      <div
                        data-plasmic-name={"image6"}
                        data-plasmic-override={overrides.image6}
                        className={classNames(projectcss.all, sty.image6)}
                      />

                      <div
                        data-plasmic-name={"text10"}
                        data-plasmic-override={overrides.text10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text10
                        )}
                      >
                        {"Image of Userflow"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section10"}
                      data-plasmic-override={overrides.section10}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section10)}
                    >
                      <div
                        data-plasmic-name={"paragraph9"}
                        data-plasmic-override={overrides.paragraph9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph9
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5___9F50K
                            )}
                          >
                            {"Wireframe\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "The next process was creating an initial blueprint or wireframe for desktop, mobile, and tablet design. User flow that we developed became our reference to design the wireframe. Creating the wireframe helped us to organize the functionalities of each design. Through this process, we expected to build an easy-to-use platform, yet appealing to the eye."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg7"}
                      data-plasmic-override={overrides.richTextImg7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg7)}
                    >
                      <div
                        data-plasmic-name={"image7"}
                        data-plasmic-override={overrides.image7}
                        className={classNames(projectcss.all, sty.image7)}
                      />

                      <div
                        data-plasmic-name={"text11"}
                        data-plasmic-override={overrides.text11}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text11
                        )}
                      >
                        {"Image of Wireframe"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section11"}
                      data-plasmic-override={overrides.section11}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section11)}
                    >
                      <div
                        data-plasmic-name={"heading8"}
                        data-plasmic-override={overrides.heading8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading8
                        )}
                      >
                        {"Prototype (Mockup & Prototype)"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph10"}
                        data-plasmic-override={overrides.paragraph10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph10
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__vx0Jl
                            )}
                          >
                            {"UI Guidelines\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "As our principles are to keep the design consistent, we created a UI foundation guidelines before we can start working on the HIFI. We begin with the basics, such as defining colors and font for items that are consistent with the brand. \r\nJenius Co.Create has its brand color which is #00A0DF (pacific blue) and we’re using this color as a primary color in this project since it’s already been decided. We combined #00A0DF with #FFFFF (white) as the background and #FF8300 (crayola fluorescent orange) as the secondary accent, while #002533 (black pearl) is for the text."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg8"}
                      data-plasmic-override={overrides.richTextImg8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg8)}
                    >
                      <div
                        data-plasmic-name={"image8"}
                        data-plasmic-override={overrides.image8}
                        className={classNames(projectcss.all, sty.image8)}
                      />

                      <div
                        data-plasmic-name={"text12"}
                        data-plasmic-override={overrides.text12}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text12
                        )}
                      >
                        {"Image of UI Guideline - Color"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section12"}
                      data-plasmic-override={overrides.section12}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section12)}
                    >
                      <div
                        data-plasmic-name={"paragraph11"}
                        data-plasmic-override={overrides.paragraph11}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph11
                        )}
                      >
                        {
                          "For typography, we decided to use Poppins for the typeface which Jenius Co.Create has been using since it matched the logo and design. As for the icons, we used mostly Fluent UI for primary icons and Bootstrap for decorative icons which both have rounded corners. We decided to use these icons because rounded corners are ‘easier on the eyes’ than sharp corners. "
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg9"}
                      data-plasmic-override={overrides.richTextImg9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg9)}
                    >
                      <div
                        data-plasmic-name={"image9"}
                        data-plasmic-override={overrides.image9}
                        className={classNames(projectcss.all, sty.image9)}
                      />

                      <div
                        data-plasmic-name={"text13"}
                        data-plasmic-override={overrides.text13}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text13
                        )}
                      >
                        {"Image of UI Guideline - Typography system"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame173"}
                      data-plasmic-override={overrides.frame173}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame173)}
                    >
                      <div
                        data-plasmic-name={"paragraph12"}
                        data-plasmic-override={overrides.paragraph12}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph12
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__utUu
                            )}
                          >
                            {"Prototype\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "After feeling complete with the user interface design, the next stage is to create a prototype to test the design."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <p.Stack
                        as={p.PlasmicLink}
                        data-plasmic-name={"buttonBase"}
                        data-plasmic-override={overrides.buttonBase}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.buttonBase
                        )}
                        component={Link}
                        href={
                          "https://www.figma.com/proto/kVAtA3DZwxToeM6JxO09K7/CoCreate-Vamp?page-id=0%3A1&node-id=235%3A4543&viewport=297%2C48%2C0.41&scaling=scale-down&starting-point-node-id=235%3A4543"
                        }
                        platform={"nextjs"}
                        target={"_blank"}
                      >
                        <div
                          data-plasmic-name={"text14"}
                          data-plasmic-override={overrides.text14}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text14
                          )}
                        >
                          {"Link to Prototype"}
                        </div>

                        <ArrowUpRight2Icon
                          className={classNames(projectcss.all, sty.svg__yUDz)}
                          role={"img"}
                        />
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section13"}
                      data-plasmic-override={overrides.section13}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section13)}
                    >
                      <div
                        data-plasmic-name={"heading9"}
                        data-plasmic-override={overrides.heading9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading9
                        )}
                      >
                        {"Test (Deliver - Moderated Testing)"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph13"}
                        data-plasmic-override={overrides.paragraph13}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph13
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__bcNGh
                            )}
                          >
                            {"Guerilla Usability Testing\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "What is Guerilla Testing? It refers to a means for evaluating a design or prototype by asking random participants to test quickly and at a low cost."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <div
                        data-plasmic-name={"paragraph14"}
                        data-plasmic-override={overrides.paragraph14}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph14
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__zLaVf
                            )}
                          >
                            {"Test Objective"}
                          </h5>
                          <React.Fragment>
                            {
                              "The process is done to validate whether the design that has been made can be a solution to the pain points that we had defined at the early stage. In this phase, we conducted usability testing to validate the design that we have created, then proceeded with an online survey with a respondent to find out their experience with the app.\n\nThe users went through nine tasks: \r\n"
                            }
                          </React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__sjYdg
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__nzIwh
                              )}
                            >
                              {"Comment an article,"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__ppfy
                              )}
                            >
                              {"\r\nLike an article, "}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__hmLFq
                              )}
                            >
                              {"\r\nCreate a thread, "}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__l1ULi
                              )}
                            >
                              {"Write an article, \r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__bMQus
                              )}
                            >
                              {"Read an article, \r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__frU1
                              )}
                            >
                              {"Scroll post through home, \r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__yn0Qx
                              )}
                            >
                              {"Bookmark an article, \r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__jTpbl
                              )}
                            >
                              {"Log-in via social account,\r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__jQvHq
                              )}
                            >
                              {"Join event or webinar"}
                            </li>
                          </ul>
                          <React.Fragment>
                            {
                              "\nWe used a cheat sheet to conduct the interview, we reference our cheat sheet based on this usability interview video by Steve krug."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>

                      <div
                        data-plasmic-name={"paragraph15"}
                        data-plasmic-override={overrides.paragraph15}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph15
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__fevig
                            )}
                          >
                            {"KPI(s)"}
                          </h5>
                          <React.Fragment>{""}</React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__vmfRp
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__fe94P
                              )}
                            >
                              {"Time on task"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__onrP6
                              )}
                            >
                              {"User Error rates"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__nuZRt
                              )}
                            >
                              {"Drop-off rates"}
                            </li>
                          </ul>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>

                      <div
                        data-plasmic-name={"paragraph16"}
                        data-plasmic-override={overrides.paragraph16}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph16
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5___2PD6
                            )}
                          >
                            {"Test Form Scenario"}
                          </h5>
                          <React.Fragment>
                            {
                              "In this step, We set up a task scenario for the user to carry out the user flow. We arrange the task based on a scale of 3 to 1 prioritization. When making this, We think to prioritize the test for the main feature and common tasks, especially in the What we can do. We’ve come up with the task scenario as below:"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg10"}
                      data-plasmic-override={overrides.richTextImg10}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg10)}
                    >
                      <div
                        data-plasmic-name={"image10"}
                        data-plasmic-override={overrides.image10}
                        className={classNames(projectcss.all, sty.image10)}
                      />

                      <div
                        data-plasmic-name={"text15"}
                        data-plasmic-override={overrides.text15}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text15
                        )}
                      >
                        {"Image of Testing Scenario"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section14"}
                      data-plasmic-override={overrides.section14}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section14)}
                    >
                      <div
                        data-plasmic-name={"paragraph17"}
                        data-plasmic-override={overrides.paragraph17}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph17
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__v2NLj
                            )}
                          >
                            {"Interview Content\r"}
                          </h5>
                          <React.Fragment>{""}</React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__baqBv
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__lixtM
                              )}
                            >
                              {"Pre-test (Introduction)\r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__t3Xna
                              )}
                            >
                              {"Screening (User Interview)\r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__ahv6L
                              )}
                            >
                              {"Usability Testing"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__fRaEx
                              )}
                            >
                              {"Post-Test Questions"}
                            </li>
                          </ul>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section15"}
                      data-plasmic-override={overrides.section15}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section15)}
                    >
                      <div
                        data-plasmic-name={"heading10"}
                        data-plasmic-override={overrides.heading10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading10
                        )}
                      >
                        {"Findings"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph18"}
                        data-plasmic-override={overrides.paragraph18}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph18
                        )}
                      >
                        {
                          "After conducting usability testing, it’s time to process all of the data we’ve gathered during the sessions. The objective is to decide, prioritize and review the data for generating action items. In this phase, we reflected the project objective with the data from the user feedback to later take action and improve the UI/UX in the design."
                        }
                      </div>

                      <div
                        data-plasmic-name={"paragraph19"}
                        data-plasmic-override={overrides.paragraph19}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph19
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__zVeAl
                            )}
                          >
                            {"User Persona"}
                          </h5>
                          <React.Fragment>
                            {
                              "We've conducted usability testing interviews with 3 participants randomly. We blend the user persona based on the data of gender and characteristics of the users."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg11"}
                      data-plasmic-override={overrides.richTextImg11}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg11)}
                    >
                      <div
                        data-plasmic-name={"frame174"}
                        data-plasmic-override={overrides.frame174}
                        className={classNames(projectcss.all, sty.frame174)}
                      >
                        <div
                          data-plasmic-name={"image11"}
                          data-plasmic-override={overrides.image11}
                          className={classNames(projectcss.all, sty.image11)}
                        />

                        <div
                          data-plasmic-name={"image12"}
                          data-plasmic-override={overrides.image12}
                          className={classNames(projectcss.all, sty.image12)}
                        />
                      </div>

                      <div
                        data-plasmic-name={"text16"}
                        data-plasmic-override={overrides.text16}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text16
                        )}
                      >
                        {"Image of User Persona"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section16"}
                      data-plasmic-override={overrides.section16}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section16)}
                    >
                      <div
                        data-plasmic-name={"heading11"}
                        data-plasmic-override={overrides.heading11}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading11
                        )}
                      >
                        {"Iteration & Final Test Design (Unmoderated)"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph20"}
                        data-plasmic-override={overrides.paragraph20}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph20
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {
                              "I wanted to test (again) the final design after the iteration to know how’s design changes for the user. For this test, we used Maze to facilitate usability testing. I learned from the previous testing that the user spent a lot of time talking rather than focusing on the design task (I want to limit interaction with the user as much as possible). Also, I only test the design iteration as follows:\n\n\r\n"
                            }
                          </React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__m6BFw
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__eTiS
                              )}
                            >
                              {"Login Page - Social Log-in\r"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__gtGFu
                              )}
                            >
                              {"Forum Page - Writing Page"}
                            </li>
                          </ul>
                          <React.Fragment>
                            {
                              "\n\r\nI asked several people(mostly my friends), although they say ‘yes i’ll do it later’, as i write this article, only 1 person done the test thus the test doesn’t meet the requirement of minimum 5 participants to uncover common problems and to sufficiently learn how the design performed.\r"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg12"}
                      data-plasmic-override={overrides.richTextImg12}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg12)}
                    >
                      <div
                        data-plasmic-name={"image13"}
                        data-plasmic-override={overrides.image13}
                        className={classNames(projectcss.all, sty.image13)}
                      />

                      <div
                        data-plasmic-name={"text17"}
                        data-plasmic-override={overrides.text17}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text17
                        )}
                      >
                        {"Image of Action Table"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section17"}
                      data-plasmic-override={overrides.section17}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section17)}
                    >
                      <div
                        data-plasmic-name={"paragraph21"}
                        data-plasmic-override={overrides.paragraph21}
                        className={classNames(projectcss.all, sty.paragraph21)}
                      >
                        <div
                          data-plasmic-name={"paragraph22"}
                          data-plasmic-override={overrides.paragraph22}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.paragraph22
                          )}
                        >
                          {"Check the test here, still live:"}
                        </div>
                      </div>

                      <p.Stack
                        as={p.PlasmicLink}
                        data-plasmic-name={"buttonBase2"}
                        data-plasmic-override={overrides.buttonBase2}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.buttonBase2
                        )}
                        component={Link}
                        href={"https://t.maze.co/80276718 "}
                        platform={"nextjs"}
                        target={"_blank"}
                      >
                        <div
                          data-plasmic-name={"text18"}
                          data-plasmic-override={overrides.text18}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text18
                          )}
                        >
                          {"Link to Maze Testing"}
                        </div>

                        <ArrowUpRight2Icon
                          className={classNames(projectcss.all, sty.svg__d93Ex)}
                          role={"img"}
                        />
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section18"}
                      data-plasmic-override={overrides.section18}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section18)}
                    >
                      <div
                        data-plasmic-name={"paragraph23"}
                        data-plasmic-override={overrides.paragraph23}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph23
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h4
                            data-plasmic-name={"h4"}
                            data-plasmic-override={overrides.h4}
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4
                            )}
                          >
                            {"Result"}
                          </h4>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__s0FB
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <ol
                                data-plasmic-name={"ol"}
                                data-plasmic-override={overrides.ol}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.ol,
                                  sty.ol
                                )}
                              >
                                <li
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.li,
                                    projectcss.__wab_text,
                                    sty.li__hWBuM
                                  )}
                                >
                                  {"Login Page - Social Login"}
                                </li>
                              </ol>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </h5>
                          <React.Fragment>
                            {
                              "I discovered from the heatmaps that the CTA-Button was spot on. Although this mission is pretty simple to accomplish (2 click), the user completed the task in indirect way and took longer in the first screen(30s) and second screen(98s). The error rates is 8 misclick. From this behavior, I assume the user feels unsure or confused about the scenario."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg13"}
                      data-plasmic-override={overrides.richTextImg13}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg13)}
                    >
                      <div
                        data-plasmic-name={"frame179"}
                        data-plasmic-override={overrides.frame179}
                        className={classNames(projectcss.all, sty.frame179)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"image14"}
                          data-plasmic-override={overrides.image14}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.image14)}
                        />

                        <div
                          data-plasmic-name={"image15"}
                          data-plasmic-override={overrides.image15}
                          className={classNames(projectcss.all, sty.image15)}
                        />
                      </div>

                      <div
                        data-plasmic-name={"text19"}
                        data-plasmic-override={overrides.text19}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text19
                        )}
                      >
                        {"Image of Design Test 2 - Heatmap Tracking Task 1"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section19"}
                      data-plasmic-override={overrides.section19}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section19)}
                    >
                      <div
                        data-plasmic-name={"paragraph24"}
                        data-plasmic-override={overrides.paragraph24}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph24
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__aMF
                            )}
                          >
                            {"2. Forum Page - Writing Page"}
                          </h5>
                          <React.Fragment>
                            {
                              "In this task mission, the user tend to explore the prototype rather to complete the task. The user took 124seconds to complete this task. The error rates is 16 misclicks. Same as previous task, from this behavior I assume the user also feels unsure or confused about the scenario."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg14"}
                      data-plasmic-override={overrides.richTextImg14}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg14)}
                    >
                      <div
                        data-plasmic-name={"image16"}
                        data-plasmic-override={overrides.image16}
                        className={classNames(projectcss.all, sty.image16)}
                      />

                      <div
                        data-plasmic-name={"text20"}
                        data-plasmic-override={overrides.text20}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text20
                        )}
                      >
                        {"Image of Design Test 2 - Heatmap Tracking Task 2"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section20"}
                      data-plasmic-override={overrides.section20}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section20)}
                    >
                      <div
                        data-plasmic-name={"paragraph25"}
                        data-plasmic-override={overrides.paragraph25}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph25
                        )}
                      >
                        {
                          "Thankyou for reading till the end 👋, have a great day!"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section21"}
                      data-plasmic-override={overrides.section21}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section21)}
                    >
                      <div
                        data-plasmic-name={"heading12"}
                        data-plasmic-override={overrides.heading12}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading12
                        )}
                      >
                        {"Closing Remarks"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph26"}
                        data-plasmic-override={overrides.paragraph26}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph26
                        )}
                      >
                        {
                          "This project was a blast to work on. We enjoyed a great time (literally; took so long to complete) working on this project. Although we're first-timers, We've acquired new skills, fresh perspectives, and experience while also remaining productive in brainstorming with my team."
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section22"}
                      data-plasmic-override={overrides.section22}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section22)}
                    >
                      <Divider2Icon
                        className={classNames(projectcss.all, sty.svg__cLofJ)}
                        role={"img"}
                      />

                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"authorAndSocialLinks"}
                          data-plasmic-override={overrides.authorAndSocialLinks}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.authorAndSocialLinks
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"avatarLabelGroup"}
                            data-plasmic-override={overrides.avatarLabelGroup}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.avatarLabelGroup
                            )}
                          >
                            {(
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? true
                                : true
                            ) ? (
                              <div
                                data-plasmic-name={"avatar"}
                                data-plasmic-override={overrides.avatar}
                                className={classNames(
                                  projectcss.all,
                                  sty.avatar
                                )}
                              />
                            ) : null}

                            <div
                              data-plasmic-name={"textAndSupportingText"}
                              data-plasmic-override={
                                overrides.textAndSupportingText
                              }
                              className={classNames(
                                projectcss.all,
                                sty.textAndSupportingText
                              )}
                            >
                              <div
                                data-plasmic-name={"text21"}
                                data-plasmic-override={overrides.text21}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text21
                                )}
                              >
                                {"Demas Bermani Surya"}
                              </div>

                              <div
                                data-plasmic-name={"supportingText6"}
                                data-plasmic-override={
                                  overrides.supportingText6
                                }
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.supportingText6
                                )}
                              >
                                {"Aspiring UI/UX Designer"}
                              </div>
                            </div>
                          </p.Stack>

                          {(
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? true
                              : true
                          ) ? (
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"socialLinks"}
                              data-plasmic-override={overrides.socialLinks}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.socialLinks
                              )}
                            >
                              <div
                                data-plasmic-name={"button"}
                                data-plasmic-override={overrides.button}
                                className={classNames(
                                  projectcss.all,
                                  sty.button
                                )}
                              >
                                <p.Stack
                                  as={"div"}
                                  data-plasmic-name={"buttonBase3"}
                                  data-plasmic-override={overrides.buttonBase3}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonBase3
                                  )}
                                >
                                  <CopyIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__fSNfD
                                    )}
                                    role={"img"}
                                  />

                                  <div
                                    data-plasmic-name={"text22"}
                                    data-plasmic-override={overrides.text22}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text22
                                    )}
                                  >
                                    {"Copy link"}
                                  </div>
                                </p.Stack>
                              </div>

                              <div
                                data-plasmic-name={"button2"}
                                data-plasmic-override={overrides.button2}
                                className={classNames(
                                  projectcss.all,
                                  sty.button2
                                )}
                              >
                                <p.Stack
                                  as={"div"}
                                  data-plasmic-name={"buttonBase4"}
                                  data-plasmic-override={overrides.buttonBase4}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonBase4
                                  )}
                                >
                                  <SocialIconIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__bvp36
                                    )}
                                    role={"img"}
                                  />
                                </p.Stack>
                              </div>

                              <div
                                data-plasmic-name={"button3"}
                                data-plasmic-override={overrides.button3}
                                className={classNames(
                                  projectcss.all,
                                  sty.button3
                                )}
                              >
                                <p.Stack
                                  as={"div"}
                                  data-plasmic-name={"buttonBase5"}
                                  data-plasmic-override={overrides.buttonBase5}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonBase5
                                  )}
                                >
                                  <SocialIcon2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__zwYa4
                                    )}
                                    role={"img"}
                                  />
                                </p.Stack>
                              </div>

                              <div
                                data-plasmic-name={"button4"}
                                data-plasmic-override={overrides.button4}
                                className={classNames(
                                  projectcss.all,
                                  sty.button4
                                )}
                              >
                                <p.Stack
                                  as={"div"}
                                  data-plasmic-name={"buttonBase6"}
                                  data-plasmic-override={overrides.buttonBase6}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.buttonBase6
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"socialIcon"}
                                    data-plasmic-override={overrides.socialIcon}
                                    className={classNames(
                                      projectcss.all,
                                      sty.socialIcon
                                    )}
                                  >
                                    <Group9Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__oPjjK
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </p.Stack>
                              </div>
                            </p.Stack>
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigationBar",
    "blogPosts",
    "img",
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text5",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg2",
    "image2",
    "text6",
    "paragraph5",
    "richTextImg3",
    "image3",
    "text7",
    "section7",
    "heading7",
    "paragraph6",
    "richTextImg4",
    "image4",
    "text8",
    "section8",
    "paragraph7",
    "richTextImg5",
    "image5",
    "text9",
    "section9",
    "paragraph8",
    "richTextImg6",
    "image6",
    "text10",
    "section10",
    "paragraph9",
    "richTextImg7",
    "image7",
    "text11",
    "section11",
    "heading8",
    "paragraph10",
    "richTextImg8",
    "image8",
    "text12",
    "section12",
    "paragraph11",
    "richTextImg9",
    "image9",
    "text13",
    "frame173",
    "paragraph12",
    "buttonBase",
    "text14",
    "section13",
    "heading9",
    "paragraph13",
    "paragraph14",
    "paragraph15",
    "paragraph16",
    "richTextImg10",
    "image10",
    "text15",
    "section14",
    "paragraph17",
    "section15",
    "heading10",
    "paragraph18",
    "paragraph19",
    "richTextImg11",
    "frame174",
    "image11",
    "image12",
    "text16",
    "section16",
    "heading11",
    "paragraph20",
    "richTextImg12",
    "image13",
    "text17",
    "section17",
    "paragraph21",
    "paragraph22",
    "buttonBase2",
    "text18",
    "section18",
    "paragraph23",
    "h4",
    "ol",
    "richTextImg13",
    "frame179",
    "image14",
    "image15",
    "text19",
    "section19",
    "paragraph24",
    "richTextImg14",
    "image16",
    "text20",
    "section20",
    "paragraph25",
    "section21",
    "heading12",
    "paragraph26",
    "section22",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text21",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase3",
    "text22",
    "button2",
    "buttonBase4",
    "button3",
    "buttonBase5",
    "button4",
    "buttonBase6",
    "socialIcon"
  ],

  navigationBar: ["navigationBar"],
  blogPosts: [
    "blogPosts",
    "img",
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text5",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg2",
    "image2",
    "text6",
    "paragraph5",
    "richTextImg3",
    "image3",
    "text7",
    "section7",
    "heading7",
    "paragraph6",
    "richTextImg4",
    "image4",
    "text8",
    "section8",
    "paragraph7",
    "richTextImg5",
    "image5",
    "text9",
    "section9",
    "paragraph8",
    "richTextImg6",
    "image6",
    "text10",
    "section10",
    "paragraph9",
    "richTextImg7",
    "image7",
    "text11",
    "section11",
    "heading8",
    "paragraph10",
    "richTextImg8",
    "image8",
    "text12",
    "section12",
    "paragraph11",
    "richTextImg9",
    "image9",
    "text13",
    "frame173",
    "paragraph12",
    "buttonBase",
    "text14",
    "section13",
    "heading9",
    "paragraph13",
    "paragraph14",
    "paragraph15",
    "paragraph16",
    "richTextImg10",
    "image10",
    "text15",
    "section14",
    "paragraph17",
    "section15",
    "heading10",
    "paragraph18",
    "paragraph19",
    "richTextImg11",
    "frame174",
    "image11",
    "image12",
    "text16",
    "section16",
    "heading11",
    "paragraph20",
    "richTextImg12",
    "image13",
    "text17",
    "section17",
    "paragraph21",
    "paragraph22",
    "buttonBase2",
    "text18",
    "section18",
    "paragraph23",
    "h4",
    "ol",
    "richTextImg13",
    "frame179",
    "image14",
    "image15",
    "text19",
    "section19",
    "paragraph24",
    "richTextImg14",
    "image16",
    "text20",
    "section20",
    "paragraph25",
    "section21",
    "heading12",
    "paragraph26",
    "section22",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text21",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase3",
    "text22",
    "button2",
    "buttonBase4",
    "button3",
    "buttonBase5",
    "button4",
    "buttonBase6",
    "socialIcon"
  ],

  img: ["img"],
  frame178: [
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3"
  ],

  frame170: [
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3"
  ],

  frame176: ["frame176", "subheading", "frame175", "heading", "supportingText"],
  subheading: ["subheading"],
  frame175: ["frame175", "heading", "supportingText"],
  heading: ["heading"],
  supportingText: ["supportingText"],
  frame177: [
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3"
  ],

  badgeBase: ["badgeBase"],
  badgeBase2: ["badgeBase2", "text2"],
  text2: ["text2"],
  badgeBase3: ["badgeBase3", "text3"],
  text3: ["text3"],
  section: [
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text5",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg2",
    "image2",
    "text6",
    "paragraph5",
    "richTextImg3",
    "image3",
    "text7",
    "section7",
    "heading7",
    "paragraph6",
    "richTextImg4",
    "image4",
    "text8",
    "section8",
    "paragraph7",
    "richTextImg5",
    "image5",
    "text9",
    "section9",
    "paragraph8",
    "richTextImg6",
    "image6",
    "text10",
    "section10",
    "paragraph9",
    "richTextImg7",
    "image7",
    "text11",
    "section11",
    "heading8",
    "paragraph10",
    "richTextImg8",
    "image8",
    "text12",
    "section12",
    "paragraph11",
    "richTextImg9",
    "image9",
    "text13",
    "frame173",
    "paragraph12",
    "buttonBase",
    "text14",
    "section13",
    "heading9",
    "paragraph13",
    "paragraph14",
    "paragraph15",
    "paragraph16",
    "richTextImg10",
    "image10",
    "text15",
    "section14",
    "paragraph17",
    "section15",
    "heading10",
    "paragraph18",
    "paragraph19",
    "richTextImg11",
    "frame174",
    "image11",
    "image12",
    "text16",
    "section16",
    "heading11",
    "paragraph20",
    "richTextImg12",
    "image13",
    "text17",
    "section17",
    "paragraph21",
    "paragraph22",
    "buttonBase2",
    "text18",
    "section18",
    "paragraph23",
    "h4",
    "ol",
    "richTextImg13",
    "frame179",
    "image14",
    "image15",
    "text19",
    "section19",
    "paragraph24",
    "richTextImg14",
    "image16",
    "text20",
    "section20",
    "paragraph25",
    "section21",
    "heading12",
    "paragraph26",
    "section22",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text21",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase3",
    "text22",
    "button2",
    "buttonBase4",
    "button3",
    "buttonBase5",
    "button4",
    "buttonBase6",
    "socialIcon"
  ],

  container: [
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5"
  ],

  content: [
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5"
  ],

  containerHighlighted: [
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5"
  ],

  containter: [
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3"
  ],

  role: ["role", "supportingText2"],
  supportingText2: ["supportingText2"],
  scope: ["scope", "supportingText3"],
  supportingText3: ["supportingText3"],
  container2: [
    "container2",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5"
  ],

  projectObjective: ["projectObjective", "supportingText4"],
  supportingText4: ["supportingText4"],
  timeline: ["timeline", "supportingText5"],
  supportingText5: ["supportingText5"],
  container3: [
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text5",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg2",
    "image2",
    "text6",
    "paragraph5",
    "richTextImg3",
    "image3",
    "text7",
    "section7",
    "heading7",
    "paragraph6",
    "richTextImg4",
    "image4",
    "text8",
    "section8",
    "paragraph7",
    "richTextImg5",
    "image5",
    "text9",
    "section9",
    "paragraph8",
    "richTextImg6",
    "image6",
    "text10",
    "section10",
    "paragraph9",
    "richTextImg7",
    "image7",
    "text11",
    "section11",
    "heading8",
    "paragraph10",
    "richTextImg8",
    "image8",
    "text12",
    "section12",
    "paragraph11",
    "richTextImg9",
    "image9",
    "text13",
    "frame173",
    "paragraph12",
    "buttonBase",
    "text14",
    "section13",
    "heading9",
    "paragraph13",
    "paragraph14",
    "paragraph15",
    "paragraph16",
    "richTextImg10",
    "image10",
    "text15",
    "section14",
    "paragraph17",
    "section15",
    "heading10",
    "paragraph18",
    "paragraph19",
    "richTextImg11",
    "frame174",
    "image11",
    "image12",
    "text16",
    "section16",
    "heading11",
    "paragraph20",
    "richTextImg12",
    "image13",
    "text17",
    "section17",
    "paragraph21",
    "paragraph22",
    "buttonBase2",
    "text18",
    "section18",
    "paragraph23",
    "h4",
    "ol",
    "richTextImg13",
    "frame179",
    "image14",
    "image15",
    "text19",
    "section19",
    "paragraph24",
    "richTextImg14",
    "image16",
    "text20",
    "section20",
    "paragraph25",
    "section21",
    "heading12",
    "paragraph26",
    "section22",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text21",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase3",
    "text22",
    "button2",
    "buttonBase4",
    "button3",
    "buttonBase5",
    "button4",
    "buttonBase6",
    "socialIcon"
  ],

  content2: [
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text5",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg2",
    "image2",
    "text6",
    "paragraph5",
    "richTextImg3",
    "image3",
    "text7",
    "section7",
    "heading7",
    "paragraph6",
    "richTextImg4",
    "image4",
    "text8",
    "section8",
    "paragraph7",
    "richTextImg5",
    "image5",
    "text9",
    "section9",
    "paragraph8",
    "richTextImg6",
    "image6",
    "text10",
    "section10",
    "paragraph9",
    "richTextImg7",
    "image7",
    "text11",
    "section11",
    "heading8",
    "paragraph10",
    "richTextImg8",
    "image8",
    "text12",
    "section12",
    "paragraph11",
    "richTextImg9",
    "image9",
    "text13",
    "frame173",
    "paragraph12",
    "buttonBase",
    "text14",
    "section13",
    "heading9",
    "paragraph13",
    "paragraph14",
    "paragraph15",
    "paragraph16",
    "richTextImg10",
    "image10",
    "text15",
    "section14",
    "paragraph17",
    "section15",
    "heading10",
    "paragraph18",
    "paragraph19",
    "richTextImg11",
    "frame174",
    "image11",
    "image12",
    "text16",
    "section16",
    "heading11",
    "paragraph20",
    "richTextImg12",
    "image13",
    "text17",
    "section17",
    "paragraph21",
    "paragraph22",
    "buttonBase2",
    "text18",
    "section18",
    "paragraph23",
    "h4",
    "ol",
    "richTextImg13",
    "frame179",
    "image14",
    "image15",
    "text19",
    "section19",
    "paragraph24",
    "richTextImg14",
    "image16",
    "text20",
    "section20",
    "paragraph25",
    "section21",
    "heading12",
    "paragraph26",
    "section22",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text21",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase3",
    "text22",
    "button2",
    "buttonBase4",
    "button3",
    "buttonBase5",
    "button4",
    "buttonBase6",
    "socialIcon"
  ],

  richText: [
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text5",
    "section6",
    "heading6",
    "paragraph4",
    "richTextImg2",
    "image2",
    "text6",
    "paragraph5",
    "richTextImg3",
    "image3",
    "text7",
    "section7",
    "heading7",
    "paragraph6",
    "richTextImg4",
    "image4",
    "text8",
    "section8",
    "paragraph7",
    "richTextImg5",
    "image5",
    "text9",
    "section9",
    "paragraph8",
    "richTextImg6",
    "image6",
    "text10",
    "section10",
    "paragraph9",
    "richTextImg7",
    "image7",
    "text11",
    "section11",
    "heading8",
    "paragraph10",
    "richTextImg8",
    "image8",
    "text12",
    "section12",
    "paragraph11",
    "richTextImg9",
    "image9",
    "text13",
    "frame173",
    "paragraph12",
    "buttonBase",
    "text14",
    "section13",
    "heading9",
    "paragraph13",
    "paragraph14",
    "paragraph15",
    "paragraph16",
    "richTextImg10",
    "image10",
    "text15",
    "section14",
    "paragraph17",
    "section15",
    "heading10",
    "paragraph18",
    "paragraph19",
    "richTextImg11",
    "frame174",
    "image11",
    "image12",
    "text16",
    "section16",
    "heading11",
    "paragraph20",
    "richTextImg12",
    "image13",
    "text17",
    "section17",
    "paragraph21",
    "paragraph22",
    "buttonBase2",
    "text18",
    "section18",
    "paragraph23",
    "h4",
    "ol",
    "richTextImg13",
    "frame179",
    "image14",
    "image15",
    "text19",
    "section19",
    "paragraph24",
    "richTextImg14",
    "image16",
    "text20",
    "section20",
    "paragraph25",
    "section21",
    "heading12",
    "paragraph26",
    "section22",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text21",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase3",
    "text22",
    "button2",
    "buttonBase4",
    "button3",
    "buttonBase5",
    "button4",
    "buttonBase6",
    "socialIcon"
  ],

  section2: ["section2", "heading2", "intro"],
  heading2: ["heading2"],
  intro: ["intro"],
  section3: ["section3", "heading3", "paragraph"],
  heading3: ["heading3"],
  paragraph: ["paragraph"],
  section4: ["section4", "heading4", "paragraph2"],
  heading4: ["heading4"],
  paragraph2: ["paragraph2"],
  richTextImg: ["richTextImg", "image", "text4"],
  image: ["image"],
  text4: ["text4"],
  section5: ["section5", "heading5", "paragraph3"],
  heading5: ["heading5"],
  paragraph3: ["paragraph3"],
  blockquote: ["blockquote", "leftBorder", "quoteWrap", "quote", "text5"],
  leftBorder: ["leftBorder"],
  quoteWrap: ["quoteWrap", "quote", "text5"],
  quote: ["quote"],
  text5: ["text5"],
  section6: ["section6", "heading6", "paragraph4"],
  heading6: ["heading6"],
  paragraph4: ["paragraph4"],
  richTextImg2: ["richTextImg2", "image2", "text6"],
  image2: ["image2"],
  text6: ["text6"],
  paragraph5: ["paragraph5"],
  richTextImg3: ["richTextImg3", "image3", "text7"],
  image3: ["image3"],
  text7: ["text7"],
  section7: ["section7", "heading7", "paragraph6"],
  heading7: ["heading7"],
  paragraph6: ["paragraph6"],
  richTextImg4: ["richTextImg4", "image4", "text8"],
  image4: ["image4"],
  text8: ["text8"],
  section8: ["section8", "paragraph7"],
  paragraph7: ["paragraph7"],
  richTextImg5: ["richTextImg5", "image5", "text9"],
  image5: ["image5"],
  text9: ["text9"],
  section9: ["section9", "paragraph8"],
  paragraph8: ["paragraph8"],
  richTextImg6: ["richTextImg6", "image6", "text10"],
  image6: ["image6"],
  text10: ["text10"],
  section10: ["section10", "paragraph9"],
  paragraph9: ["paragraph9"],
  richTextImg7: ["richTextImg7", "image7", "text11"],
  image7: ["image7"],
  text11: ["text11"],
  section11: ["section11", "heading8", "paragraph10"],
  heading8: ["heading8"],
  paragraph10: ["paragraph10"],
  richTextImg8: ["richTextImg8", "image8", "text12"],
  image8: ["image8"],
  text12: ["text12"],
  section12: ["section12", "paragraph11"],
  paragraph11: ["paragraph11"],
  richTextImg9: ["richTextImg9", "image9", "text13"],
  image9: ["image9"],
  text13: ["text13"],
  frame173: ["frame173", "paragraph12", "buttonBase", "text14"],
  paragraph12: ["paragraph12"],
  buttonBase: ["buttonBase", "text14"],
  text14: ["text14"],
  section13: [
    "section13",
    "heading9",
    "paragraph13",
    "paragraph14",
    "paragraph15",
    "paragraph16"
  ],

  heading9: ["heading9"],
  paragraph13: ["paragraph13"],
  paragraph14: ["paragraph14"],
  paragraph15: ["paragraph15"],
  paragraph16: ["paragraph16"],
  richTextImg10: ["richTextImg10", "image10", "text15"],
  image10: ["image10"],
  text15: ["text15"],
  section14: ["section14", "paragraph17"],
  paragraph17: ["paragraph17"],
  section15: ["section15", "heading10", "paragraph18", "paragraph19"],
  heading10: ["heading10"],
  paragraph18: ["paragraph18"],
  paragraph19: ["paragraph19"],
  richTextImg11: ["richTextImg11", "frame174", "image11", "image12", "text16"],
  frame174: ["frame174", "image11", "image12"],
  image11: ["image11"],
  image12: ["image12"],
  text16: ["text16"],
  section16: ["section16", "heading11", "paragraph20"],
  heading11: ["heading11"],
  paragraph20: ["paragraph20"],
  richTextImg12: ["richTextImg12", "image13", "text17"],
  image13: ["image13"],
  text17: ["text17"],
  section17: [
    "section17",
    "paragraph21",
    "paragraph22",
    "buttonBase2",
    "text18"
  ],

  paragraph21: ["paragraph21", "paragraph22"],
  paragraph22: ["paragraph22"],
  buttonBase2: ["buttonBase2", "text18"],
  text18: ["text18"],
  section18: ["section18", "paragraph23", "h4", "ol"],
  paragraph23: ["paragraph23", "h4", "ol"],
  h4: ["h4"],
  ol: ["ol"],
  richTextImg13: ["richTextImg13", "frame179", "image14", "image15", "text19"],
  frame179: ["frame179", "image14", "image15"],
  image14: ["image14"],
  image15: ["image15"],
  text19: ["text19"],
  section19: ["section19", "paragraph24"],
  paragraph24: ["paragraph24"],
  richTextImg14: ["richTextImg14", "image16", "text20"],
  image16: ["image16"],
  text20: ["text20"],
  section20: ["section20", "paragraph25"],
  paragraph25: ["paragraph25"],
  section21: ["section21", "heading12", "paragraph26"],
  heading12: ["heading12"],
  paragraph26: ["paragraph26"],
  section22: [
    "section22",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text21",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase3",
    "text22",
    "button2",
    "buttonBase4",
    "button3",
    "buttonBase5",
    "button4",
    "buttonBase6",
    "socialIcon"
  ],

  authorAndSocialLinks: [
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text21",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase3",
    "text22",
    "button2",
    "buttonBase4",
    "button3",
    "buttonBase5",
    "button4",
    "buttonBase6",
    "socialIcon"
  ],

  avatarLabelGroup: [
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text21",
    "supportingText6"
  ],

  avatar: ["avatar"],
  textAndSupportingText: ["textAndSupportingText", "text21", "supportingText6"],
  text21: ["text21"],
  supportingText6: ["supportingText6"],
  socialLinks: [
    "socialLinks",
    "button",
    "buttonBase3",
    "text22",
    "button2",
    "buttonBase4",
    "button3",
    "buttonBase5",
    "button4",
    "buttonBase6",
    "socialIcon"
  ],

  button: ["button", "buttonBase3", "text22"],
  buttonBase3: ["buttonBase3", "text22"],
  text22: ["text22"],
  button2: ["button2", "buttonBase4"],
  buttonBase4: ["buttonBase4"],
  button3: ["button3", "buttonBase5"],
  buttonBase5: ["buttonBase5"],
  button4: ["button4", "buttonBase6", "socialIcon"],
  buttonBase6: ["buttonBase6", "socialIcon"],
  socialIcon: ["socialIcon"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicCoCreate__ArgProps,
      internalVariantPropNames: PlasmicCoCreate__VariantProps
    });

    return PlasmicCoCreate__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCoCreate";
  } else {
    func.displayName = `PlasmicCoCreate.${nodeName}`;
  }
  return func;
}

export const PlasmicCoCreate = Object.assign(
  // Top-level PlasmicCoCreate renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    blogPosts: makeNodeComponent("blogPosts"),
    img: makeNodeComponent("img"),
    frame178: makeNodeComponent("frame178"),
    frame170: makeNodeComponent("frame170"),
    frame176: makeNodeComponent("frame176"),
    subheading: makeNodeComponent("subheading"),
    frame175: makeNodeComponent("frame175"),
    heading: makeNodeComponent("heading"),
    supportingText: makeNodeComponent("supportingText"),
    frame177: makeNodeComponent("frame177"),
    badgeBase: makeNodeComponent("badgeBase"),
    badgeBase2: makeNodeComponent("badgeBase2"),
    text2: makeNodeComponent("text2"),
    badgeBase3: makeNodeComponent("badgeBase3"),
    text3: makeNodeComponent("text3"),
    section: makeNodeComponent("section"),
    container: makeNodeComponent("container"),
    content: makeNodeComponent("content"),
    containerHighlighted: makeNodeComponent("containerHighlighted"),
    containter: makeNodeComponent("containter"),
    role: makeNodeComponent("role"),
    supportingText2: makeNodeComponent("supportingText2"),
    scope: makeNodeComponent("scope"),
    supportingText3: makeNodeComponent("supportingText3"),
    container2: makeNodeComponent("container2"),
    projectObjective: makeNodeComponent("projectObjective"),
    supportingText4: makeNodeComponent("supportingText4"),
    timeline: makeNodeComponent("timeline"),
    supportingText5: makeNodeComponent("supportingText5"),
    container3: makeNodeComponent("container3"),
    content2: makeNodeComponent("content2"),
    richText: makeNodeComponent("richText"),
    section2: makeNodeComponent("section2"),
    heading2: makeNodeComponent("heading2"),
    intro: makeNodeComponent("intro"),
    section3: makeNodeComponent("section3"),
    heading3: makeNodeComponent("heading3"),
    paragraph: makeNodeComponent("paragraph"),
    section4: makeNodeComponent("section4"),
    heading4: makeNodeComponent("heading4"),
    paragraph2: makeNodeComponent("paragraph2"),
    richTextImg: makeNodeComponent("richTextImg"),
    image: makeNodeComponent("image"),
    text4: makeNodeComponent("text4"),
    section5: makeNodeComponent("section5"),
    heading5: makeNodeComponent("heading5"),
    paragraph3: makeNodeComponent("paragraph3"),
    blockquote: makeNodeComponent("blockquote"),
    leftBorder: makeNodeComponent("leftBorder"),
    quoteWrap: makeNodeComponent("quoteWrap"),
    quote: makeNodeComponent("quote"),
    text5: makeNodeComponent("text5"),
    section6: makeNodeComponent("section6"),
    heading6: makeNodeComponent("heading6"),
    paragraph4: makeNodeComponent("paragraph4"),
    richTextImg2: makeNodeComponent("richTextImg2"),
    image2: makeNodeComponent("image2"),
    text6: makeNodeComponent("text6"),
    paragraph5: makeNodeComponent("paragraph5"),
    richTextImg3: makeNodeComponent("richTextImg3"),
    image3: makeNodeComponent("image3"),
    text7: makeNodeComponent("text7"),
    section7: makeNodeComponent("section7"),
    heading7: makeNodeComponent("heading7"),
    paragraph6: makeNodeComponent("paragraph6"),
    richTextImg4: makeNodeComponent("richTextImg4"),
    image4: makeNodeComponent("image4"),
    text8: makeNodeComponent("text8"),
    section8: makeNodeComponent("section8"),
    paragraph7: makeNodeComponent("paragraph7"),
    richTextImg5: makeNodeComponent("richTextImg5"),
    image5: makeNodeComponent("image5"),
    text9: makeNodeComponent("text9"),
    section9: makeNodeComponent("section9"),
    paragraph8: makeNodeComponent("paragraph8"),
    richTextImg6: makeNodeComponent("richTextImg6"),
    image6: makeNodeComponent("image6"),
    text10: makeNodeComponent("text10"),
    section10: makeNodeComponent("section10"),
    paragraph9: makeNodeComponent("paragraph9"),
    richTextImg7: makeNodeComponent("richTextImg7"),
    image7: makeNodeComponent("image7"),
    text11: makeNodeComponent("text11"),
    section11: makeNodeComponent("section11"),
    heading8: makeNodeComponent("heading8"),
    paragraph10: makeNodeComponent("paragraph10"),
    richTextImg8: makeNodeComponent("richTextImg8"),
    image8: makeNodeComponent("image8"),
    text12: makeNodeComponent("text12"),
    section12: makeNodeComponent("section12"),
    paragraph11: makeNodeComponent("paragraph11"),
    richTextImg9: makeNodeComponent("richTextImg9"),
    image9: makeNodeComponent("image9"),
    text13: makeNodeComponent("text13"),
    frame173: makeNodeComponent("frame173"),
    paragraph12: makeNodeComponent("paragraph12"),
    buttonBase: makeNodeComponent("buttonBase"),
    text14: makeNodeComponent("text14"),
    section13: makeNodeComponent("section13"),
    heading9: makeNodeComponent("heading9"),
    paragraph13: makeNodeComponent("paragraph13"),
    paragraph14: makeNodeComponent("paragraph14"),
    paragraph15: makeNodeComponent("paragraph15"),
    paragraph16: makeNodeComponent("paragraph16"),
    richTextImg10: makeNodeComponent("richTextImg10"),
    image10: makeNodeComponent("image10"),
    text15: makeNodeComponent("text15"),
    section14: makeNodeComponent("section14"),
    paragraph17: makeNodeComponent("paragraph17"),
    section15: makeNodeComponent("section15"),
    heading10: makeNodeComponent("heading10"),
    paragraph18: makeNodeComponent("paragraph18"),
    paragraph19: makeNodeComponent("paragraph19"),
    richTextImg11: makeNodeComponent("richTextImg11"),
    frame174: makeNodeComponent("frame174"),
    image11: makeNodeComponent("image11"),
    image12: makeNodeComponent("image12"),
    text16: makeNodeComponent("text16"),
    section16: makeNodeComponent("section16"),
    heading11: makeNodeComponent("heading11"),
    paragraph20: makeNodeComponent("paragraph20"),
    richTextImg12: makeNodeComponent("richTextImg12"),
    image13: makeNodeComponent("image13"),
    text17: makeNodeComponent("text17"),
    section17: makeNodeComponent("section17"),
    paragraph21: makeNodeComponent("paragraph21"),
    paragraph22: makeNodeComponent("paragraph22"),
    buttonBase2: makeNodeComponent("buttonBase2"),
    text18: makeNodeComponent("text18"),
    section18: makeNodeComponent("section18"),
    paragraph23: makeNodeComponent("paragraph23"),
    h4: makeNodeComponent("h4"),
    ol: makeNodeComponent("ol"),
    richTextImg13: makeNodeComponent("richTextImg13"),
    frame179: makeNodeComponent("frame179"),
    image14: makeNodeComponent("image14"),
    image15: makeNodeComponent("image15"),
    text19: makeNodeComponent("text19"),
    section19: makeNodeComponent("section19"),
    paragraph24: makeNodeComponent("paragraph24"),
    richTextImg14: makeNodeComponent("richTextImg14"),
    image16: makeNodeComponent("image16"),
    text20: makeNodeComponent("text20"),
    section20: makeNodeComponent("section20"),
    paragraph25: makeNodeComponent("paragraph25"),
    section21: makeNodeComponent("section21"),
    heading12: makeNodeComponent("heading12"),
    paragraph26: makeNodeComponent("paragraph26"),
    section22: makeNodeComponent("section22"),
    authorAndSocialLinks: makeNodeComponent("authorAndSocialLinks"),
    avatarLabelGroup: makeNodeComponent("avatarLabelGroup"),
    avatar: makeNodeComponent("avatar"),
    textAndSupportingText: makeNodeComponent("textAndSupportingText"),
    text21: makeNodeComponent("text21"),
    supportingText6: makeNodeComponent("supportingText6"),
    socialLinks: makeNodeComponent("socialLinks"),
    button: makeNodeComponent("button"),
    buttonBase3: makeNodeComponent("buttonBase3"),
    text22: makeNodeComponent("text22"),
    button2: makeNodeComponent("button2"),
    buttonBase4: makeNodeComponent("buttonBase4"),
    button3: makeNodeComponent("button3"),
    buttonBase5: makeNodeComponent("buttonBase5"),
    button4: makeNodeComponent("button4"),
    buttonBase6: makeNodeComponent("buttonBase6"),
    socialIcon: makeNodeComponent("socialIcon"),
    // Metadata about props expected for PlasmicCoCreate
    internalVariantProps: PlasmicCoCreate__VariantProps,
    internalArgProps: PlasmicCoCreate__ArgProps
  }
);

export default PlasmicCoCreate;
/* prettier-ignore-end */
