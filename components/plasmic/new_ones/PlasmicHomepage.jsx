// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 578p2KiWp3ZSUFPY7FrhK3
// Component: 4mxLKLJaWtnt2
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Select from "../../Select"; // plasmic-import: 3Vr7VM3BiE8vGJ/component
import Heading1CoCreateRevampHome from "../../Heading1CoCreateRevampHome"; // plasmic-import: opFq_mjndRgD1H/component
import Heading1BillieHome from "../../Heading1BillieHome"; // plasmic-import: UFO_FR1k5hVzkR/component
import { useScreenVariants as useScreenVariantstU3UFp3Zwbn8D } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: _tU3UFp3Zwbn8d/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_new_ones.module.css"; // plasmic-import: 578p2KiWp3ZSUFPY7FrhK3/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 4mxLKLJaWtnt2/css
import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: _x1MasHkDimG3R/icon
import DividerIcon from "./icons/PlasmicIcon__Divider"; // plasmic-import: heCtdXRKjCGsEG/icon
import _Icon from "./icons/PlasmicIcon___"; // plasmic-import: J1STVNZpiZA5s4/icon
import Star1Icon from "./icons/PlasmicIcon__Star1"; // plasmic-import: UAi_dYgBOXu1wf/icon
import ArrowUpRightIcon from "./icons/PlasmicIcon__ArrowUpRight"; // plasmic-import: xa6I7_9Y9zpgmB/icon
import TooltipIcon from "./icons/PlasmicIcon__Tooltip"; // plasmic-import: jbJru8BSTWZZmG/icon
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: ecY95-bP1psfKj/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: wGgCdFDhiemSh_/icon
import Vector5Icon from "./icons/PlasmicIcon__Vector5"; // plasmic-import: KV2q7ertUKDyy_/icon
import Vector6Icon from "./icons/PlasmicIcon__Vector6"; // plasmic-import: iA5hbIqA1-tq78/icon
import Vector7Icon from "./icons/PlasmicIcon__Vector7"; // plasmic-import: RmUfRPRc8RPNdh/icon
import Group3Icon from "./icons/PlasmicIcon__Group3"; // plasmic-import: 7QjwRsb_l5cZhX/icon
import Group4Icon from "./icons/PlasmicIcon__Group4"; // plasmic-import: kmmL6T3tMv1yWf/icon
import Group5Icon from "./icons/PlasmicIcon__Group5"; // plasmic-import: bCgM43rFTSW4TE/icon
import Group6Icon from "./icons/PlasmicIcon__Group6"; // plasmic-import: U0AgDpopflf_Op/icon
import Group7Icon from "./icons/PlasmicIcon__Group7"; // plasmic-import: xhHvnsgP-T2LJo/icon
import Group8Icon from "./icons/PlasmicIcon__Group8"; // plasmic-import: 8mHA-e8AhB_es9/icon
import Vector1Icon from "./icons/PlasmicIcon__Vector1"; // plasmic-import: Pm2lRnnla8434h/icon
import Vector3Icon from "./icons/PlasmicIcon__Vector3"; // plasmic-import: DzRqtLZ6Q7Kj2k/icon
import Ellipse7Icon from "./icons/PlasmicIcon__Ellipse7"; // plasmic-import: M9XeJTcnRiYR1i/icon
import Ellipse8Icon from "./icons/PlasmicIcon__Ellipse8"; // plasmic-import: 1inOoA4ZUXmpZq/icon

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array("children");

function PlasmicHomepage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstU3UFp3Zwbn8D()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <nav
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames(projectcss.all, sty.header)}
          >
            <div
              data-plasmic-name={"container"}
              data-plasmic-override={overrides.container}
              className={classNames(projectcss.all, sty.container)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__maN7Z
                  )}
                >
                  {"Demassu"}
                </div>
              ) : null}

              <p.Stack
                as={"div"}
                data-plasmic-name={"navigation"}
                data-plasmic-override={overrides.navigation}
                hasGap={true}
                className={classNames(projectcss.all, sty.navigation)}
              >
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <div
                    data-plasmic-name={"about"}
                    data-plasmic-override={overrides.about}
                    className={classNames(projectcss.all, sty.about)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"buttonBase"}
                      data-plasmic-override={overrides.buttonBase}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.buttonBase)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__s5Oj
                        )}
                      >
                        {"About"}
                      </div>
                    </p.Stack>
                  </div>
                ) : null}

                <p.PlasmicLink
                  data-plasmic-name={"resume"}
                  data-plasmic-override={overrides.resume}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.resume
                  )}
                  component={Link}
                  href={
                    "https://drive.google.com/file/d/1vgvvd75g-qOlASarEFExVm5XespOuaOK/view?usp=sharing"
                  }
                  platform={"nextjs"}
                >
                  <div
                    data-plasmic-name={"button3"}
                    data-plasmic-override={overrides.button3}
                    className={classNames(projectcss.all, sty.button3)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"buttonBase3"}
                      data-plasmic-override={overrides.buttonBase3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.buttonBase3)}
                    >
                      <div
                        data-plasmic-name={"text3"}
                        data-plasmic-override={overrides.text3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text3
                        )}
                      >
                        {"Resume"}
                      </div>

                      {false ? (
                        <ChevronDownIcon
                          className={classNames(projectcss.all, sty.svg__raJ5D)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                </p.PlasmicLink>

                <div
                  data-plasmic-name={"contact"}
                  data-plasmic-override={overrides.contact}
                  className={classNames(projectcss.all, sty.contact)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"buttonBase4"}
                    data-plasmic-override={overrides.buttonBase4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.buttonBase4)}
                  >
                    <div
                      data-plasmic-name={"text4"}
                      data-plasmic-override={overrides.text4}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text4
                      )}
                    >
                      {"Contact"}
                    </div>
                  </p.Stack>
                </div>

                {p.renderPlasmicSlot({
                  defaultContents: (
                    <Select
                      className={classNames(
                        "__wab_instance",
                        sty.select__nuyuQ
                      )}
                      placeholder={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xxXWt
                          )}
                        >
                          {"Selected works"}
                        </div>
                      }
                      selectedContent={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0DdbT
                          )}
                        >
                          {"Selected works"}
                        </div>
                      }
                    />
                  ),

                  value: args.children
                })}
              </p.Stack>
            </div>
          </nav>

          <div
            data-plasmic-name={"dropdownHeaderNavigation"}
            data-plasmic-override={overrides.dropdownHeaderNavigation}
            className={classNames(projectcss.all, sty.dropdownHeaderNavigation)}
          >
            {true ? (
              <DividerIcon
                className={classNames(projectcss.all, sty.svg__p1HYi)}
                role={"img"}
              />
            ) : null}

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__wHjGk)}
              displayHeight={"1px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"1440px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/new_ones/images/dropdownHeaderNavigation.svg",
                fullWidth: 1440,
                fullHeight: 1,
                aspectRatio: 1440
              }}
            />
          </div>

          <div
            data-plasmic-name={"body"}
            data-plasmic-override={overrides.body}
            className={classNames(projectcss.all, sty.body)}
          >
            <div
              data-plasmic-name={"heroSectionContainer"}
              data-plasmic-override={overrides.heroSectionContainer}
              className={classNames(projectcss.all, sty.heroSectionContainer)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"textSide"}
                data-plasmic-override={overrides.textSide}
                hasGap={true}
                className={classNames(projectcss.all, sty.textSide)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"makersTextContent"}
                  data-plasmic-override={overrides.makersTextContent}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.makersTextContent)}
                >
                  {false ? (
                    <div
                      data-plasmic-name={"education"}
                      data-plasmic-override={overrides.education}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.education
                      )}
                    >
                      {"Digital UI Design Portfolio"}
                    </div>
                  ) : null}

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame83"}
                    data-plasmic-override={overrides.frame83}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame83)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame81"}
                      data-plasmic-override={overrides.frame81}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame81)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame77"}
                        data-plasmic-override={overrides.frame77}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame77)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__t6IvJ
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{"Digital "}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 500 }}
                            >
                              {"UI Design Portfolio"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"yearMade"}
                      data-plasmic-override={overrides.yearMade}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.yearMade)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mWml
                        )}
                      >
                        {"2022"}
                      </div>

                      <_Icon
                        className={classNames(projectcss.all, sty.svg__kC92)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__niswm
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 300 }}
                      >
                        {"Hello There! "}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 600 }}
                      >
                        {"I’m Demas Bermani Surya"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    data-plasmic-name={
                      "aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent"
                    }
                    data-plasmic-override={
                      overrides.aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000", fontWeight: 500 }}
                      >
                        {"A Graphic Designer & aspiring UI/UX designer,"}
                      </span>
                      <React.Fragment>
                        {
                          " currently practicing while learning User\rExperience Design & Writing. Pursuing Digitalent Skilvul UI/UX "
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"makersButtonsGroup"}
                  data-plasmic-override={overrides.makersButtonsGroup}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.makersButtonsGroup)}
                >
                  <div
                    data-plasmic-name={"button5"}
                    data-plasmic-override={overrides.button5}
                    className={classNames(projectcss.all, sty.button5)}
                  >
                    <div
                      data-plasmic-name={"button6"}
                      data-plasmic-override={overrides.button6}
                      className={classNames(projectcss.all, sty.button6)}
                    >
                      <p.Stack
                        as={p.PlasmicLink}
                        data-plasmic-name={"buttonBase5"}
                        data-plasmic-override={overrides.buttonBase5}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.buttonBase5
                        )}
                        component={Link}
                        href={"#selection_work"}
                        platform={"nextjs"}
                        target={undefined}
                        title={""}
                      >
                        <div
                          data-plasmic-name={"text5"}
                          data-plasmic-override={overrides.text5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text5
                          )}
                        >
                          {"Case Study"}
                        </div>
                      </p.Stack>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"button7"}
                    data-plasmic-override={overrides.button7}
                    className={classNames(projectcss.all, sty.button7)}
                  >
                    <div
                      data-plasmic-name={"button8"}
                      data-plasmic-override={overrides.button8}
                      className={classNames(projectcss.all, sty.button8)}
                    >
                      <p.Stack
                        as={p.PlasmicLink}
                        data-plasmic-name={"buttonBase6"}
                        data-plasmic-override={overrides.buttonBase6}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.buttonBase6
                        )}
                        component={Link}
                        href={
                          "https://drive.google.com/file/d/1vgvvd75g-qOlASarEFExVm5XespOuaOK/view?usp=sharing"
                        }
                        platform={"nextjs"}
                      >
                        <div
                          data-plasmic-name={"text6"}
                          data-plasmic-override={overrides.text6}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text6
                          )}
                        >
                          {"Download Resume"}
                        </div>
                      </p.Stack>
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>

              <div
                data-plasmic-name={"image"}
                data-plasmic-override={overrides.image}
                className={classNames(projectcss.all, sty.image)}
              />

              <div
                data-plasmic-name={"imageSide"}
                data-plasmic-override={overrides.imageSide}
                className={classNames(projectcss.all, sty.imageSide)}
              />
            </div>

            <div
              data-plasmic-name={"frame147"}
              data-plasmic-override={overrides.frame147}
              className={classNames(projectcss.all, sty.frame147)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__hJkUt)}
                displayHeight={"1226px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"1226px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/ellipse2.svg",
                  fullWidth: 1226,
                  fullHeight: 1226,
                  aspectRatio: 1
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__suXvg)}
                displayHeight={"1226px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"1226px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/ellipse6.svg",
                  fullWidth: 1226,
                  fullHeight: 1226,
                  aspectRatio: 1
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___6EzeH)}
                displayHeight={"1226px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"1226px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/ellipse3.svg",
                  fullWidth: 1226,
                  fullHeight: 1226,
                  aspectRatio: 1
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__neP5E)}
                displayHeight={"1226px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"1226px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/ellipse1.svg",
                  fullWidth: 1226,
                  fullHeight: 1226,
                  aspectRatio: 1
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__qk0Js)}
                displayHeight={"1226px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"1226px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/ellipse5.svg",
                  fullWidth: 1226,
                  fullHeight: 1226,
                  aspectRatio: 1
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__pnIlf)}
                displayHeight={"1226px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"1226px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/ellipse4.svg",
                  fullWidth: 1226,
                  fullHeight: 1226,
                  aspectRatio: 1
                }}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame148"}
                data-plasmic-override={overrides.frame148}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame148)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5H8XD
                  )}
                >
                  {"For Hiring"}
                </div>
              </p.Stack>

              <Star1Icon
                className={classNames(projectcss.all, sty.svg__eh26)}
                role={"img"}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame154"}
                data-plasmic-override={overrides.frame154}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame154)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__etYNz
                  )}
                >
                  {"I am open to any kind of UI/UX designer opportunities"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fVWx
                  )}
                >
                  {
                    "passionate about working on digital experience and crafting interface needs"
                  }
                </div>
              </p.Stack>

              <div
                data-plasmic-name={"frame153"}
                data-plasmic-override={overrides.frame153}
                className={classNames(projectcss.all, sty.frame153)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___03Hny)}
                  displayHeight={"36px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"36px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_ones/images/circleDown.svg",
                    fullWidth: 36,
                    fullHeight: 36,
                    aspectRatio: 1
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nkWoS
                  )}
                >
                  {"Scroll down"}
                </div>
              </div>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"works"}
              data-plasmic-override={overrides.works}
              hasGap={true}
              className={classNames(projectcss.all, sty.works)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame149"}
                data-plasmic-override={overrides.frame149}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame149)}
                id={"selection_work"}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___655JE
                  )}
                >
                  {"Selected Work"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame146"}
                  data-plasmic-override={overrides.frame146}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame146)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame144"}
                    data-plasmic-override={overrides.frame144}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame144)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"articleModal"}
                      data-plasmic-override={overrides.articleModal}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.articleModal)}
                    >
                      <div
                        data-plasmic-name={"frame124"}
                        data-plasmic-override={overrides.frame124}
                        className={classNames(projectcss.all, sty.frame124)}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"textModal"}
                        data-plasmic-override={overrides.textModal}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.textModal)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame133"}
                          data-plasmic-override={overrides.frame133}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame133)}
                        >
                          <div
                            data-plasmic-name={"author"}
                            data-plasmic-override={overrides.author}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.author
                            )}
                          >
                            {"Demas Bermani Surya • 20 Mar 2022"}
                          </div>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame132"}
                            data-plasmic-override={overrides.frame132}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame132)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___5S3Zx
                              )}
                            >
                              <Heading1CoCreateRevampHome
                                data-plasmic-name={"heading1CoCreateRevampHome"}
                                data-plasmic-override={
                                  overrides.heading1CoCreateRevampHome
                                }
                                className={classNames(
                                  "__wab_instance",
                                  sty.heading1CoCreateRevampHome
                                )}
                              />
                            </div>

                            <div
                              data-plasmic-name={"supportingText"}
                              data-plasmic-override={overrides.supportingText}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.supportingText
                              )}
                            >
                              {
                                "This project was for Jenius Co.Create Website Revamp Competition. The objective of this project is to engage Jenius user to actively contribute in cocreating on Jenius Co.Create with ease. However, due to certain circumstances, we (me & my team) decided to not submit the design until the deadline day."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"categories"}
                          data-plasmic-override={overrides.categories}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.categories)}
                        >
                          <div
                            data-plasmic-name={"badge"}
                            data-plasmic-override={overrides.badge}
                            className={classNames(projectcss.all, sty.badge)}
                          >
                            <div
                              data-plasmic-name={"badgeBase"}
                              data-plasmic-override={overrides.badgeBase}
                              className={classNames(
                                projectcss.all,
                                sty.badgeBase
                              )}
                            >
                              <div
                                data-plasmic-name={"text7"}
                                data-plasmic-override={overrides.text7}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text7
                                )}
                              >
                                {"Case Study"}
                              </div>
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"badge2"}
                            data-plasmic-override={overrides.badge2}
                            className={classNames(projectcss.all, sty.badge2)}
                          >
                            <div
                              data-plasmic-name={"badgeBase2"}
                              data-plasmic-override={overrides.badgeBase2}
                              className={classNames(
                                projectcss.all,
                                sty.badgeBase2
                              )}
                            >
                              <div
                                data-plasmic-name={"text8"}
                                data-plasmic-override={overrides.text8}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text8
                                )}
                              >
                                {"Web design"}
                              </div>
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"badge3"}
                            data-plasmic-override={overrides.badge3}
                            className={classNames(projectcss.all, sty.badge3)}
                          >
                            <div
                              data-plasmic-name={"badgeBase3"}
                              data-plasmic-override={overrides.badgeBase3}
                              className={classNames(
                                projectcss.all,
                                sty.badgeBase3
                              )}
                            >
                              <div
                                data-plasmic-name={"text9"}
                                data-plasmic-override={overrides.text9}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text9
                                )}
                              >
                                {"Community"}
                              </div>
                            </div>
                          </div>

                          {false ? (
                            <div
                              data-plasmic-name={"badge4"}
                              data-plasmic-override={overrides.badge4}
                              className={classNames(projectcss.all, sty.badge4)}
                            >
                              <div
                                data-plasmic-name={"badgeBase4"}
                                data-plasmic-override={overrides.badgeBase4}
                                className={classNames(
                                  projectcss.all,
                                  sty.badgeBase4
                                )}
                              >
                                <div
                                  data-plasmic-name={"text10"}
                                  data-plasmic-override={overrides.text10}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text10
                                  )}
                                >
                                  {"Presentation"}
                                </div>
                              </div>
                            </div>
                          ) : null}
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"articleModal2"}
                      data-plasmic-override={overrides.articleModal2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.articleModal2)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"contentContainer"}
                        data-plasmic-override={overrides.contentContainer}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.contentContainer
                        )}
                      >
                        <div
                          data-plasmic-name={"frame125"}
                          data-plasmic-override={overrides.frame125}
                          className={classNames(projectcss.all, sty.frame125)}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"textModal2"}
                          data-plasmic-override={overrides.textModal2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.textModal2)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame134"}
                            data-plasmic-override={overrides.frame134}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame134)}
                          >
                            <div
                              data-plasmic-name={"author2"}
                              data-plasmic-override={overrides.author2}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.author2
                              )}
                            >
                              {"Demas Bermani Surya • 20 Mar 2022"}
                            </div>

                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"frame135"}
                              data-plasmic-override={overrides.frame135}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.frame135
                              )}
                            >
                              <div
                                data-plasmic-name={"frame142"}
                                data-plasmic-override={overrides.frame142}
                                className={classNames(
                                  projectcss.all,
                                  sty.frame142
                                )}
                              >
                                <div
                                  data-plasmic-name={"heading2"}
                                  data-plasmic-override={overrides.heading2}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.heading2
                                  )}
                                >
                                  {"Google UX Course Challenge"}
                                </div>

                                <div
                                  data-plasmic-name={"iconWrap2"}
                                  data-plasmic-override={overrides.iconWrap2}
                                  className={classNames(
                                    projectcss.all,
                                    sty.iconWrap2
                                  )}
                                >
                                  <ArrowUpRightIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__bkrQp
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>

                              <div
                                data-plasmic-name={"supportingText2"}
                                data-plasmic-override={
                                  overrides.supportingText2
                                }
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.supportingText2
                                )}
                              >
                                {
                                  "Nutricats is a nutrition tracking app that offers a delivery service for a cat owner to buy a cat food-related product. The app is a B2C marketplace that provides support for cat owners to manage their cat food consumption and gives an insight into health nutrition and calories composition."
                                }
                              </div>
                            </p.Stack>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"categories2"}
                            data-plasmic-override={overrides.categories2}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.categories2
                            )}
                          >
                            <div
                              data-plasmic-name={"badge5"}
                              data-plasmic-override={overrides.badge5}
                              className={classNames(projectcss.all, sty.badge5)}
                            >
                              <div
                                data-plasmic-name={"badgeBase5"}
                                data-plasmic-override={overrides.badgeBase5}
                                className={classNames(
                                  projectcss.all,
                                  sty.badgeBase5
                                )}
                              >
                                <div
                                  data-plasmic-name={"text11"}
                                  data-plasmic-override={overrides.text11}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text11
                                  )}
                                >
                                  {"Challenge"}
                                </div>
                              </div>
                            </div>

                            <div
                              data-plasmic-name={"badge6"}
                              data-plasmic-override={overrides.badge6}
                              className={classNames(projectcss.all, sty.badge6)}
                            >
                              <div
                                data-plasmic-name={"badgeBase6"}
                                data-plasmic-override={overrides.badgeBase6}
                                className={classNames(
                                  projectcss.all,
                                  sty.badgeBase6
                                )}
                              >
                                <div
                                  data-plasmic-name={"text12"}
                                  data-plasmic-override={overrides.text12}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text12
                                  )}
                                >
                                  {"Presentation"}
                                </div>
                              </div>
                            </div>

                            {false ? (
                              <div
                                data-plasmic-name={"badge7"}
                                data-plasmic-override={overrides.badge7}
                                className={classNames(
                                  projectcss.all,
                                  sty.badge7
                                )}
                              >
                                <div
                                  data-plasmic-name={"badgeBase7"}
                                  data-plasmic-override={overrides.badgeBase7}
                                  className={classNames(
                                    projectcss.all,
                                    sty.badgeBase7
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"text13"}
                                    data-plasmic-override={overrides.text13}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text13
                                    )}
                                  >
                                    {"Web design"}
                                  </div>
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"badge8"}
                                data-plasmic-override={overrides.badge8}
                                className={classNames(
                                  projectcss.all,
                                  sty.badge8
                                )}
                              >
                                <div
                                  data-plasmic-name={"badgeBase8"}
                                  data-plasmic-override={overrides.badgeBase8}
                                  className={classNames(
                                    projectcss.all,
                                    sty.badgeBase8
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"text14"}
                                    data-plasmic-override={overrides.text14}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text14
                                    )}
                                  >
                                    {"Presentation"}
                                  </div>
                                </div>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>

                      <div
                        data-plasmic-name={"tooltip"}
                        data-plasmic-override={overrides.tooltip}
                        className={classNames(projectcss.all, sty.tooltip)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ncCyP
                          )}
                        >
                          <TooltipIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__tnr0P
                            )}
                            role={"img"}
                          />
                        </div>

                        <div
                          data-plasmic-name={"content"}
                          data-plasmic-override={overrides.content}
                          className={classNames(projectcss.all, sty.content)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"textAndSupportingText"}
                            data-plasmic-override={
                              overrides.textAndSupportingText
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textAndSupportingText
                            )}
                          >
                            <div
                              data-plasmic-name={"text15"}
                              data-plasmic-override={overrides.text15}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text15
                              )}
                            >
                              {"I’m uploading this project"}
                            </div>

                            <div
                              data-plasmic-name={"supportingText3"}
                              data-plasmic-override={overrides.supportingText3}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.supportingText3
                              )}
                            >
                              {
                                "This project is done, I just hasn’t uploaded it yet"
                              }
                            </div>
                          </p.Stack>
                        </div>
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame145"}
                    data-plasmic-override={overrides.frame145}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame145)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"articleModal3"}
                      data-plasmic-override={overrides.articleModal3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.articleModal3)}
                    >
                      <div
                        data-plasmic-name={"frame126"}
                        data-plasmic-override={overrides.frame126}
                        className={classNames(projectcss.all, sty.frame126)}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"textModal3"}
                        data-plasmic-override={overrides.textModal3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.textModal3)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame136"}
                          data-plasmic-override={overrides.frame136}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame136)}
                        >
                          <div
                            data-plasmic-name={"author3"}
                            data-plasmic-override={overrides.author3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.author3
                            )}
                          >
                            {"Demas Bermani Surya • 27 Feb 2022"}
                          </div>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame137"}
                            data-plasmic-override={overrides.frame137}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame137)}
                          >
                            <Heading1BillieHome
                              data-plasmic-name={"heading1BillieHome"}
                              data-plasmic-override={
                                overrides.heading1BillieHome
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.heading1BillieHome
                              )}
                            />

                            <div
                              data-plasmic-name={"supportingText4"}
                              data-plasmic-override={overrides.supportingText4}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.supportingText4
                              )}
                            >
                              {
                                "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"categories3"}
                          data-plasmic-override={overrides.categories3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.categories3
                          )}
                        >
                          <div
                            data-plasmic-name={"badge9"}
                            data-plasmic-override={overrides.badge9}
                            className={classNames(projectcss.all, sty.badge9)}
                          >
                            <div
                              data-plasmic-name={"badgeBase9"}
                              data-plasmic-override={overrides.badgeBase9}
                              className={classNames(
                                projectcss.all,
                                sty.badgeBase9
                              )}
                            >
                              <div
                                data-plasmic-name={"text16"}
                                data-plasmic-override={overrides.text16}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text16
                                )}
                              >
                                {"Case Study"}
                              </div>
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"badge10"}
                            data-plasmic-override={overrides.badge10}
                            className={classNames(projectcss.all, sty.badge10)}
                          >
                            <div
                              data-plasmic-name={"badgeBase10"}
                              data-plasmic-override={overrides.badgeBase10}
                              className={classNames(
                                projectcss.all,
                                sty.badgeBase10
                              )}
                            >
                              <div
                                data-plasmic-name={"text17"}
                                data-plasmic-override={overrides.text17}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text17
                                )}
                              >
                                {"Mobile design"}
                              </div>
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"badge11"}
                            data-plasmic-override={overrides.badge11}
                            className={classNames(projectcss.all, sty.badge11)}
                          >
                            <div
                              data-plasmic-name={"badgeBase11"}
                              data-plasmic-override={overrides.badgeBase11}
                              className={classNames(
                                projectcss.all,
                                sty.badgeBase11
                              )}
                            >
                              <div
                                data-plasmic-name={"text18"}
                                data-plasmic-override={overrides.text18}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text18
                                )}
                              >
                                {"Financial app"}
                              </div>
                            </div>
                          </div>

                          {false ? (
                            <div
                              data-plasmic-name={"badge12"}
                              data-plasmic-override={overrides.badge12}
                              className={classNames(
                                projectcss.all,
                                sty.badge12
                              )}
                            >
                              <div
                                data-plasmic-name={"badgeBase12"}
                                data-plasmic-override={overrides.badgeBase12}
                                className={classNames(
                                  projectcss.all,
                                  sty.badgeBase12
                                )}
                              >
                                <div
                                  data-plasmic-name={"text19"}
                                  data-plasmic-override={overrides.text19}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text19
                                  )}
                                >
                                  {"Presentation"}
                                </div>
                              </div>
                            </div>
                          ) : null}
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame181"}
                      data-plasmic-override={overrides.frame181}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame181)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"articleModal4"}
                        data-plasmic-override={overrides.articleModal4}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.articleModal4
                        )}
                      >
                        <div
                          data-plasmic-name={"frame127"}
                          data-plasmic-override={overrides.frame127}
                          className={classNames(projectcss.all, sty.frame127)}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"textModal4"}
                          data-plasmic-override={overrides.textModal4}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.textModal4)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame138"}
                            data-plasmic-override={overrides.frame138}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame138)}
                          >
                            <div
                              data-plasmic-name={"author4"}
                              data-plasmic-override={overrides.author4}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.author4
                              )}
                            >
                              {"Demas Bermani Surya • STARTED 18 Mar 2022"}
                            </div>

                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"frame139"}
                              data-plasmic-override={overrides.frame139}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.frame139
                              )}
                            >
                              <div
                                data-plasmic-name={"frame150"}
                                data-plasmic-override={overrides.frame150}
                                className={classNames(
                                  projectcss.all,
                                  sty.frame150
                                )}
                              >
                                <div
                                  data-plasmic-name={"heading4"}
                                  data-plasmic-override={overrides.heading4}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.heading4
                                  )}
                                >
                                  {"Skilvul - Amartha New Feature Challenge"}
                                </div>

                                <div
                                  data-plasmic-name={"iconWrap4"}
                                  data-plasmic-override={overrides.iconWrap4}
                                  className={classNames(
                                    projectcss.all,
                                    sty.iconWrap4
                                  )}
                                >
                                  <ArrowUpRightIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___9WxmU
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>

                              <div
                                data-plasmic-name={"supportingText5"}
                                data-plasmic-override={
                                  overrides.supportingText5
                                }
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.supportingText5
                                )}
                              >
                                {
                                  "Membuat sebuah desain tampilan aplikasi mobile untuk Layanan Gold Investment di aplikasi Amartha menggunakan figma sesuai dengan arahan proyek."
                                }
                              </div>
                            </p.Stack>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"categories4"}
                            data-plasmic-override={overrides.categories4}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.categories4
                            )}
                          >
                            <div
                              data-plasmic-name={"badge13"}
                              data-plasmic-override={overrides.badge13}
                              className={classNames(
                                projectcss.all,
                                sty.badge13
                              )}
                            >
                              <div
                                data-plasmic-name={"badgeBase13"}
                                data-plasmic-override={overrides.badgeBase13}
                                className={classNames(
                                  projectcss.all,
                                  sty.badgeBase13
                                )}
                              >
                                <div
                                  data-plasmic-name={"text20"}
                                  data-plasmic-override={overrides.text20}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text20
                                  )}
                                >
                                  {"Case Study"}
                                </div>
                              </div>
                            </div>

                            <div
                              data-plasmic-name={"badge14"}
                              data-plasmic-override={overrides.badge14}
                              className={classNames(
                                projectcss.all,
                                sty.badge14
                              )}
                            >
                              <div
                                data-plasmic-name={"badgeBase14"}
                                data-plasmic-override={overrides.badgeBase14}
                                className={classNames(
                                  projectcss.all,
                                  sty.badgeBase14
                                )}
                              >
                                <div
                                  data-plasmic-name={"text21"}
                                  data-plasmic-override={overrides.text21}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text21
                                  )}
                                >
                                  {"UI/UX Bootcamp"}
                                </div>
                              </div>
                            </div>

                            {false ? (
                              <div
                                data-plasmic-name={"badge15"}
                                data-plasmic-override={overrides.badge15}
                                className={classNames(
                                  projectcss.all,
                                  sty.badge15
                                )}
                              >
                                <div
                                  data-plasmic-name={"badgeBase15"}
                                  data-plasmic-override={overrides.badgeBase15}
                                  className={classNames(
                                    projectcss.all,
                                    sty.badgeBase15
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"text22"}
                                    data-plasmic-override={overrides.text22}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text22
                                    )}
                                  >
                                    {"Presentation"}
                                  </div>
                                </div>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>

                      <div
                        data-plasmic-name={"tooltip2"}
                        data-plasmic-override={overrides.tooltip2}
                        className={classNames(projectcss.all, sty.tooltip2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fgXjg
                          )}
                        >
                          <TooltipIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wfP48
                            )}
                            role={"img"}
                          />
                        </div>

                        <div
                          data-plasmic-name={"content2"}
                          data-plasmic-override={overrides.content2}
                          className={classNames(projectcss.all, sty.content2)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"textAndSupportingText2"}
                            data-plasmic-override={
                              overrides.textAndSupportingText2
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textAndSupportingText2
                            )}
                          >
                            <div
                              data-plasmic-name={"text23"}
                              data-plasmic-override={overrides.text23}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text23
                              )}
                            >
                              {"This is ongoing project"}
                            </div>

                            <div
                              data-plasmic-name={"supportingText6"}
                              data-plasmic-override={overrides.supportingText6}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.supportingText6
                              )}
                            >
                              {
                                "This is ongoing design challenge project for Digitalent Skilvul UI/UX Design Certification"
                              }
                            </div>
                          </p.Stack>
                        </div>
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <div
              data-plasmic-name={"connect"}
              data-plasmic-override={overrides.connect}
              className={classNames(projectcss.all, sty.connect)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame166"}
                data-plasmic-override={overrides.frame166}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame166)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame151"}
                  data-plasmic-override={overrides.frame151}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame151)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cZO
                    )}
                  >
                    {"Let’s Connect!"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f4QKk
                    )}
                  >
                    {
                      "I like talking and discussing anything about design and would love to hear some feedback and advice as well. I'm also available for freelance and internship opportunities. Let's catch up!"
                    }
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={"button9"}
                  data-plasmic-override={overrides.button9}
                  className={classNames(projectcss.all, sty.button9)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"buttonBase7"}
                    data-plasmic-override={overrides.buttonBase7}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.buttonBase7)}
                  >
                    <div
                      data-plasmic-name={"text24"}
                      data-plasmic-override={overrides.text24}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text24
                      )}
                    >
                      {"Contact"}
                    </div>
                  </p.Stack>
                </div>
              </p.Stack>

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___1GT90)}
                displayHeight={"1226px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"1226px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/ellipse9.svg",
                  fullWidth: 1226,
                  fullHeight: 1226,
                  aspectRatio: 1
                }}
              />

              <VectorIcon
                className={classNames(projectcss.all, sty.svg__cae4I)}
                role={"img"}
              />

              <Vector2Icon
                className={classNames(projectcss.all, sty.svg___0DaIg)}
                role={"img"}
              />

              <div
                data-plasmic-name={"group"}
                data-plasmic-override={overrides.group}
                className={classNames(projectcss.all, sty.group)}
              >
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : false
                ) ? (
                  <div
                    data-plasmic-name={"frame156"}
                    data-plasmic-override={overrides.frame156}
                    className={classNames(projectcss.all, sty.frame156)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__rHg2S)}
                      displayHeight={"248px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"380px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_ones/images/vector4.svg",
                        fullWidth: 380,
                        fullHeight: 248,
                        aspectRatio: 1.532258
                      }}
                    />

                    <div
                      data-plasmic-name={"maskGroup2"}
                      data-plasmic-override={overrides.maskGroup2}
                      className={classNames(projectcss.all, sty.maskGroup2)}
                    >
                      <Vector5Icon
                        className={classNames(projectcss.all, sty.svg__kmZs)}
                        role={"img"}
                      />
                    </div>

                    <Vector6Icon
                      className={classNames(projectcss.all, sty.svg__yUkeH)}
                      role={"img"}
                    />

                    <Vector7Icon
                      className={classNames(projectcss.all, sty.svg__kEolV)}
                      role={"img"}
                    />

                    {false ? (
                      <div
                        data-plasmic-name={"group3"}
                        data-plasmic-override={overrides.group3}
                        className={classNames(projectcss.all, sty.group3)}
                      >
                        <Group3Icon
                          className={classNames(projectcss.all, sty.svg__xVzcl)}
                          role={"img"}
                        />

                        <Group4Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___29Ozi
                          )}
                          role={"img"}
                        />

                        <Group5Icon
                          className={classNames(projectcss.all, sty.svg__aTcXu)}
                          role={"img"}
                        />

                        <Group6Icon
                          className={classNames(projectcss.all, sty.svg__b6WRj)}
                          role={"img"}
                        />

                        <Group7Icon
                          className={classNames(projectcss.all, sty.svg__rjaUf)}
                          role={"img"}
                        />

                        <Group8Icon
                          className={classNames(projectcss.all, sty.svg__lgs5H)}
                          role={"img"}
                        />
                      </div>
                    ) : null}

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__mpTgT)}
                      displayHeight={"40px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"39px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_ones/images/vector8.svg",
                        fullWidth: 39,
                        fullHeight: 40,
                        aspectRatio: 0.975
                      }}
                    />
                  </div>
                ) : null}
              </div>

              <Vector1Icon
                className={classNames(projectcss.all, sty.svg__ebSXr)}
                role={"img"}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__aRwF)}
                displayHeight={"512px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"575px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/letter.svg",
                  fullWidth: 575,
                  fullHeight: 512,
                  aspectRatio: 1.123047
                }}
              />

              <Vector3Icon
                className={classNames(projectcss.all, sty.svg__zWoO3)}
                role={"img"}
              />

              {true ? (
                <Vector3Icon
                  className={classNames(projectcss.all, sty.svg__sw2By)}
                  role={"img"}
                />
              ) : null}

              <Vector2Icon
                className={classNames(projectcss.all, sty.svg__rrr4J)}
                role={"img"}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__z3Y8)}
                displayHeight={"319.179px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"120.929px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/group1.svg",
                  fullWidth: 120.929,
                  fullHeight: 319.179,
                  aspectRatio: 0.378125
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__eqP5P)}
                displayHeight={"572.244px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"92.46px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/new_ones/images/group.svg",
                  fullWidth: 92.46,
                  fullHeight: 572.244,
                  aspectRatio: 0.162304
                }}
              />

              <Ellipse7Icon
                className={classNames(projectcss.all, sty.svg__ewhAa)}
                role={"img"}
              />

              <Ellipse8Icon
                className={classNames(projectcss.all, sty.svg__fA2P)}
                role={"img"}
              />

              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rLr4T)}
                  displayHeight={"1226px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"1226px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_ones/images/ellipse10.svg",
                    fullWidth: 1226,
                    fullHeight: 1226,
                    aspectRatio: 1
                  }}
                />
              ) : null}
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"frame155"}
                  data-plasmic-override={overrides.frame155}
                  className={classNames(projectcss.all, sty.frame155)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xzcF)}
                    displayHeight={"248px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"380px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/new_ones/images/vector4.svg",
                      fullWidth: 380,
                      fullHeight: 248,
                      aspectRatio: 1.532258
                    }}
                  />

                  <div
                    data-plasmic-name={"maskGroup"}
                    data-plasmic-override={overrides.maskGroup}
                    className={classNames(projectcss.all, sty.maskGroup)}
                  >
                    <Vector5Icon
                      className={classNames(projectcss.all, sty.svg__io78A)}
                      role={"img"}
                    />
                  </div>

                  <Vector6Icon
                    className={classNames(projectcss.all, sty.svg___7Jyxk)}
                    role={"img"}
                  />

                  <Vector7Icon
                    className={classNames(projectcss.all, sty.svg__x0YWn)}
                    role={"img"}
                  />

                  {false ? (
                    <div
                      data-plasmic-name={"group2"}
                      data-plasmic-override={overrides.group2}
                      className={classNames(projectcss.all, sty.group2)}
                    >
                      <Group3Icon
                        className={classNames(projectcss.all, sty.svg___01Eg8)}
                        role={"img"}
                      />

                      <Group4Icon
                        className={classNames(projectcss.all, sty.svg__hOh7V)}
                        role={"img"}
                      />

                      <Group5Icon
                        className={classNames(projectcss.all, sty.svg__a1L3I)}
                        role={"img"}
                      />

                      <Group6Icon
                        className={classNames(projectcss.all, sty.svg___0Cm4I)}
                        role={"img"}
                      />

                      <Group7Icon
                        className={classNames(projectcss.all, sty.svg__ysPcw)}
                        role={"img"}
                      />

                      <Group8Icon
                        className={classNames(projectcss.all, sty.svg__wu5G1)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__spOaT)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"39px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/new_ones/images/vector8.svg",
                      fullWidth: 39,
                      fullHeight: 40,
                      aspectRatio: 0.975
                    }}
                  />
                </div>
              ) : null}
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame157"}
              data-plasmic-override={overrides.frame157}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame157)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame168"}
                data-plasmic-override={overrides.frame168}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame168)}
              >
                <div
                  data-plasmic-name={"thanks"}
                  data-plasmic-override={overrides.thanks}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.thanks
                  )}
                >
                  {"Thanks!👋 "}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame167"}
                  data-plasmic-override={overrides.frame167}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame167)}
                >
                  {false ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame162"}
                      data-plasmic-override={overrides.frame162}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame162)}
                    >
                      <div
                        data-plasmic-name={"frame161"}
                        data-plasmic-override={overrides.frame161}
                        className={classNames(projectcss.all, sty.frame161)}
                      />

                      <div
                        data-plasmic-name={"frame163"}
                        data-plasmic-override={overrides.frame163}
                        className={classNames(projectcss.all, sty.frame163)}
                      />

                      <div
                        data-plasmic-name={"frame164"}
                        data-plasmic-override={overrides.frame164}
                        className={classNames(projectcss.all, sty.frame164)}
                      />

                      <div
                        data-plasmic-name={"frame165"}
                        data-plasmic-override={overrides.frame165}
                        className={classNames(projectcss.all, sty.frame165)}
                      />
                    </p.Stack>
                  ) : null}
                </p.Stack>
              </p.Stack>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rnqdu
                )}
              >
                {
                  "Thank you for reading my portfolio. The image and picture in the case study belong to respective owners.\nEvery work in this document is genuine and subjected to copyright. Please contact me for a further portfolio."
                }
              </div>
            </p.Stack>
          </div>

          <footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames(projectcss.all, sty.footer)}
          >
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame84"}
                data-plasmic-override={overrides.frame84}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame84)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame82"}
                  data-plasmic-override={overrides.frame82}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame82)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame78"}
                    data-plasmic-override={overrides.frame78}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame78)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xlNn7
                      )}
                    >
                      {"Digital UI Design Portfolio"}
                    </div>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"yearMade2"}
                  data-plasmic-override={overrides.yearMade2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.yearMade2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kvgI7
                    )}
                  >
                    {"2022"}
                  </div>

                  <_Icon
                    className={classNames(projectcss.all, sty.svg__uSFz4)}
                    role={"img"}
                  />
                </p.Stack>
              </p.Stack>
            ) : null}

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame85"}
              data-plasmic-override={overrides.frame85}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame85)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame86"}
                data-plasmic-override={overrides.frame86}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame86)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame79"}
                  data-plasmic-override={overrides.frame79}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame79)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gBoEl
                    )}
                  >
                    {"Updated 21 March 2022"}
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </footer>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "container",
    "navigation",
    "about",
    "buttonBase",
    "resume",
    "button3",
    "buttonBase3",
    "text3",
    "contact",
    "buttonBase4",
    "text4",
    "dropdownHeaderNavigation",
    "body",
    "heroSectionContainer",
    "textSide",
    "makersTextContent",
    "education",
    "frame83",
    "frame81",
    "frame77",
    "yearMade",
    "aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent",
    "makersButtonsGroup",
    "button5",
    "button6",
    "buttonBase5",
    "text5",
    "button7",
    "button8",
    "buttonBase6",
    "text6",
    "image",
    "imageSide",
    "frame147",
    "frame148",
    "frame154",
    "frame153",
    "works",
    "frame149",
    "frame146",
    "frame144",
    "articleModal",
    "frame124",
    "textModal",
    "frame133",
    "author",
    "frame132",
    "heading1CoCreateRevampHome",
    "supportingText",
    "categories",
    "badge",
    "badgeBase",
    "text7",
    "badge2",
    "badgeBase2",
    "text8",
    "badge3",
    "badgeBase3",
    "text9",
    "badge4",
    "badgeBase4",
    "text10",
    "articleModal2",
    "contentContainer",
    "frame125",
    "textModal2",
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2",
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14",
    "tooltip",
    "content",
    "textAndSupportingText",
    "text15",
    "supportingText3",
    "frame145",
    "articleModal3",
    "frame126",
    "textModal3",
    "frame136",
    "author3",
    "frame137",
    "heading1BillieHome",
    "supportingText4",
    "categories3",
    "badge9",
    "badgeBase9",
    "text16",
    "badge10",
    "badgeBase10",
    "text17",
    "badge11",
    "badgeBase11",
    "text18",
    "badge12",
    "badgeBase12",
    "text19",
    "frame181",
    "articleModal4",
    "frame127",
    "textModal4",
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5",
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22",
    "tooltip2",
    "content2",
    "textAndSupportingText2",
    "text23",
    "supportingText6",
    "connect",
    "frame166",
    "frame151",
    "button9",
    "buttonBase7",
    "text24",
    "group",
    "frame156",
    "maskGroup2",
    "group3",
    "frame155",
    "maskGroup",
    "group2",
    "frame157",
    "frame168",
    "thanks",
    "frame167",
    "frame162",
    "frame161",
    "frame163",
    "frame164",
    "frame165",
    "footer",
    "frame84",
    "frame82",
    "frame78",
    "yearMade2",
    "frame85",
    "frame86",
    "frame79"
  ],

  header: [
    "header",
    "container",
    "navigation",
    "about",
    "buttonBase",
    "resume",
    "button3",
    "buttonBase3",
    "text3",
    "contact",
    "buttonBase4",
    "text4"
  ],

  container: [
    "container",
    "navigation",
    "about",
    "buttonBase",
    "resume",
    "button3",
    "buttonBase3",
    "text3",
    "contact",
    "buttonBase4",
    "text4"
  ],

  navigation: [
    "navigation",
    "about",
    "buttonBase",
    "resume",
    "button3",
    "buttonBase3",
    "text3",
    "contact",
    "buttonBase4",
    "text4"
  ],

  about: ["about", "buttonBase"],
  buttonBase: ["buttonBase"],
  resume: ["resume", "button3", "buttonBase3", "text3"],
  button3: ["button3", "buttonBase3", "text3"],
  buttonBase3: ["buttonBase3", "text3"],
  text3: ["text3"],
  contact: ["contact", "buttonBase4", "text4"],
  buttonBase4: ["buttonBase4", "text4"],
  text4: ["text4"],
  dropdownHeaderNavigation: ["dropdownHeaderNavigation"],
  body: [
    "body",
    "heroSectionContainer",
    "textSide",
    "makersTextContent",
    "education",
    "frame83",
    "frame81",
    "frame77",
    "yearMade",
    "aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent",
    "makersButtonsGroup",
    "button5",
    "button6",
    "buttonBase5",
    "text5",
    "button7",
    "button8",
    "buttonBase6",
    "text6",
    "image",
    "imageSide",
    "frame147",
    "frame148",
    "frame154",
    "frame153",
    "works",
    "frame149",
    "frame146",
    "frame144",
    "articleModal",
    "frame124",
    "textModal",
    "frame133",
    "author",
    "frame132",
    "heading1CoCreateRevampHome",
    "supportingText",
    "categories",
    "badge",
    "badgeBase",
    "text7",
    "badge2",
    "badgeBase2",
    "text8",
    "badge3",
    "badgeBase3",
    "text9",
    "badge4",
    "badgeBase4",
    "text10",
    "articleModal2",
    "contentContainer",
    "frame125",
    "textModal2",
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2",
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14",
    "tooltip",
    "content",
    "textAndSupportingText",
    "text15",
    "supportingText3",
    "frame145",
    "articleModal3",
    "frame126",
    "textModal3",
    "frame136",
    "author3",
    "frame137",
    "heading1BillieHome",
    "supportingText4",
    "categories3",
    "badge9",
    "badgeBase9",
    "text16",
    "badge10",
    "badgeBase10",
    "text17",
    "badge11",
    "badgeBase11",
    "text18",
    "badge12",
    "badgeBase12",
    "text19",
    "frame181",
    "articleModal4",
    "frame127",
    "textModal4",
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5",
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22",
    "tooltip2",
    "content2",
    "textAndSupportingText2",
    "text23",
    "supportingText6",
    "connect",
    "frame166",
    "frame151",
    "button9",
    "buttonBase7",
    "text24",
    "group",
    "frame156",
    "maskGroup2",
    "group3",
    "frame155",
    "maskGroup",
    "group2",
    "frame157",
    "frame168",
    "thanks",
    "frame167",
    "frame162",
    "frame161",
    "frame163",
    "frame164",
    "frame165"
  ],

  heroSectionContainer: [
    "heroSectionContainer",
    "textSide",
    "makersTextContent",
    "education",
    "frame83",
    "frame81",
    "frame77",
    "yearMade",
    "aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent",
    "makersButtonsGroup",
    "button5",
    "button6",
    "buttonBase5",
    "text5",
    "button7",
    "button8",
    "buttonBase6",
    "text6",
    "image",
    "imageSide"
  ],

  textSide: [
    "textSide",
    "makersTextContent",
    "education",
    "frame83",
    "frame81",
    "frame77",
    "yearMade",
    "aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent",
    "makersButtonsGroup",
    "button5",
    "button6",
    "buttonBase5",
    "text5",
    "button7",
    "button8",
    "buttonBase6",
    "text6"
  ],

  makersTextContent: [
    "makersTextContent",
    "education",
    "frame83",
    "frame81",
    "frame77",
    "yearMade",
    "aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent"
  ],

  education: ["education"],
  frame83: ["frame83", "frame81", "frame77", "yearMade"],
  frame81: ["frame81", "frame77"],
  frame77: ["frame77"],
  yearMade: ["yearMade"],
  aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent:
    [
      "aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent"
    ],

  makersButtonsGroup: [
    "makersButtonsGroup",
    "button5",
    "button6",
    "buttonBase5",
    "text5",
    "button7",
    "button8",
    "buttonBase6",
    "text6"
  ],

  button5: ["button5", "button6", "buttonBase5", "text5"],
  button6: ["button6", "buttonBase5", "text5"],
  buttonBase5: ["buttonBase5", "text5"],
  text5: ["text5"],
  button7: ["button7", "button8", "buttonBase6", "text6"],
  button8: ["button8", "buttonBase6", "text6"],
  buttonBase6: ["buttonBase6", "text6"],
  text6: ["text6"],
  image: ["image"],
  imageSide: ["imageSide"],
  frame147: ["frame147", "frame148", "frame154", "frame153"],
  frame148: ["frame148"],
  frame154: ["frame154"],
  frame153: ["frame153"],
  works: [
    "works",
    "frame149",
    "frame146",
    "frame144",
    "articleModal",
    "frame124",
    "textModal",
    "frame133",
    "author",
    "frame132",
    "heading1CoCreateRevampHome",
    "supportingText",
    "categories",
    "badge",
    "badgeBase",
    "text7",
    "badge2",
    "badgeBase2",
    "text8",
    "badge3",
    "badgeBase3",
    "text9",
    "badge4",
    "badgeBase4",
    "text10",
    "articleModal2",
    "contentContainer",
    "frame125",
    "textModal2",
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2",
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14",
    "tooltip",
    "content",
    "textAndSupportingText",
    "text15",
    "supportingText3",
    "frame145",
    "articleModal3",
    "frame126",
    "textModal3",
    "frame136",
    "author3",
    "frame137",
    "heading1BillieHome",
    "supportingText4",
    "categories3",
    "badge9",
    "badgeBase9",
    "text16",
    "badge10",
    "badgeBase10",
    "text17",
    "badge11",
    "badgeBase11",
    "text18",
    "badge12",
    "badgeBase12",
    "text19",
    "frame181",
    "articleModal4",
    "frame127",
    "textModal4",
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5",
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22",
    "tooltip2",
    "content2",
    "textAndSupportingText2",
    "text23",
    "supportingText6"
  ],

  frame149: [
    "frame149",
    "frame146",
    "frame144",
    "articleModal",
    "frame124",
    "textModal",
    "frame133",
    "author",
    "frame132",
    "heading1CoCreateRevampHome",
    "supportingText",
    "categories",
    "badge",
    "badgeBase",
    "text7",
    "badge2",
    "badgeBase2",
    "text8",
    "badge3",
    "badgeBase3",
    "text9",
    "badge4",
    "badgeBase4",
    "text10",
    "articleModal2",
    "contentContainer",
    "frame125",
    "textModal2",
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2",
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14",
    "tooltip",
    "content",
    "textAndSupportingText",
    "text15",
    "supportingText3",
    "frame145",
    "articleModal3",
    "frame126",
    "textModal3",
    "frame136",
    "author3",
    "frame137",
    "heading1BillieHome",
    "supportingText4",
    "categories3",
    "badge9",
    "badgeBase9",
    "text16",
    "badge10",
    "badgeBase10",
    "text17",
    "badge11",
    "badgeBase11",
    "text18",
    "badge12",
    "badgeBase12",
    "text19",
    "frame181",
    "articleModal4",
    "frame127",
    "textModal4",
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5",
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22",
    "tooltip2",
    "content2",
    "textAndSupportingText2",
    "text23",
    "supportingText6"
  ],

  frame146: [
    "frame146",
    "frame144",
    "articleModal",
    "frame124",
    "textModal",
    "frame133",
    "author",
    "frame132",
    "heading1CoCreateRevampHome",
    "supportingText",
    "categories",
    "badge",
    "badgeBase",
    "text7",
    "badge2",
    "badgeBase2",
    "text8",
    "badge3",
    "badgeBase3",
    "text9",
    "badge4",
    "badgeBase4",
    "text10",
    "articleModal2",
    "contentContainer",
    "frame125",
    "textModal2",
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2",
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14",
    "tooltip",
    "content",
    "textAndSupportingText",
    "text15",
    "supportingText3",
    "frame145",
    "articleModal3",
    "frame126",
    "textModal3",
    "frame136",
    "author3",
    "frame137",
    "heading1BillieHome",
    "supportingText4",
    "categories3",
    "badge9",
    "badgeBase9",
    "text16",
    "badge10",
    "badgeBase10",
    "text17",
    "badge11",
    "badgeBase11",
    "text18",
    "badge12",
    "badgeBase12",
    "text19",
    "frame181",
    "articleModal4",
    "frame127",
    "textModal4",
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5",
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22",
    "tooltip2",
    "content2",
    "textAndSupportingText2",
    "text23",
    "supportingText6"
  ],

  frame144: [
    "frame144",
    "articleModal",
    "frame124",
    "textModal",
    "frame133",
    "author",
    "frame132",
    "heading1CoCreateRevampHome",
    "supportingText",
    "categories",
    "badge",
    "badgeBase",
    "text7",
    "badge2",
    "badgeBase2",
    "text8",
    "badge3",
    "badgeBase3",
    "text9",
    "badge4",
    "badgeBase4",
    "text10",
    "articleModal2",
    "contentContainer",
    "frame125",
    "textModal2",
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2",
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14",
    "tooltip",
    "content",
    "textAndSupportingText",
    "text15",
    "supportingText3"
  ],

  articleModal: [
    "articleModal",
    "frame124",
    "textModal",
    "frame133",
    "author",
    "frame132",
    "heading1CoCreateRevampHome",
    "supportingText",
    "categories",
    "badge",
    "badgeBase",
    "text7",
    "badge2",
    "badgeBase2",
    "text8",
    "badge3",
    "badgeBase3",
    "text9",
    "badge4",
    "badgeBase4",
    "text10"
  ],

  frame124: ["frame124"],
  textModal: [
    "textModal",
    "frame133",
    "author",
    "frame132",
    "heading1CoCreateRevampHome",
    "supportingText",
    "categories",
    "badge",
    "badgeBase",
    "text7",
    "badge2",
    "badgeBase2",
    "text8",
    "badge3",
    "badgeBase3",
    "text9",
    "badge4",
    "badgeBase4",
    "text10"
  ],

  frame133: [
    "frame133",
    "author",
    "frame132",
    "heading1CoCreateRevampHome",
    "supportingText"
  ],

  author: ["author"],
  frame132: ["frame132", "heading1CoCreateRevampHome", "supportingText"],
  heading1CoCreateRevampHome: ["heading1CoCreateRevampHome"],
  supportingText: ["supportingText"],
  categories: [
    "categories",
    "badge",
    "badgeBase",
    "text7",
    "badge2",
    "badgeBase2",
    "text8",
    "badge3",
    "badgeBase3",
    "text9",
    "badge4",
    "badgeBase4",
    "text10"
  ],

  badge: ["badge", "badgeBase", "text7"],
  badgeBase: ["badgeBase", "text7"],
  text7: ["text7"],
  badge2: ["badge2", "badgeBase2", "text8"],
  badgeBase2: ["badgeBase2", "text8"],
  text8: ["text8"],
  badge3: ["badge3", "badgeBase3", "text9"],
  badgeBase3: ["badgeBase3", "text9"],
  text9: ["text9"],
  badge4: ["badge4", "badgeBase4", "text10"],
  badgeBase4: ["badgeBase4", "text10"],
  text10: ["text10"],
  articleModal2: [
    "articleModal2",
    "contentContainer",
    "frame125",
    "textModal2",
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2",
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14",
    "tooltip",
    "content",
    "textAndSupportingText",
    "text15",
    "supportingText3"
  ],

  contentContainer: [
    "contentContainer",
    "frame125",
    "textModal2",
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2",
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14"
  ],

  frame125: ["frame125"],
  textModal2: [
    "textModal2",
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2",
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14"
  ],

  frame134: [
    "frame134",
    "author2",
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2"
  ],

  author2: ["author2"],
  frame135: [
    "frame135",
    "frame142",
    "heading2",
    "iconWrap2",
    "supportingText2"
  ],

  frame142: ["frame142", "heading2", "iconWrap2"],
  heading2: ["heading2"],
  iconWrap2: ["iconWrap2"],
  supportingText2: ["supportingText2"],
  categories2: [
    "categories2",
    "badge5",
    "badgeBase5",
    "text11",
    "badge6",
    "badgeBase6",
    "text12",
    "badge7",
    "badgeBase7",
    "text13",
    "badge8",
    "badgeBase8",
    "text14"
  ],

  badge5: ["badge5", "badgeBase5", "text11"],
  badgeBase5: ["badgeBase5", "text11"],
  text11: ["text11"],
  badge6: ["badge6", "badgeBase6", "text12"],
  badgeBase6: ["badgeBase6", "text12"],
  text12: ["text12"],
  badge7: ["badge7", "badgeBase7", "text13"],
  badgeBase7: ["badgeBase7", "text13"],
  text13: ["text13"],
  badge8: ["badge8", "badgeBase8", "text14"],
  badgeBase8: ["badgeBase8", "text14"],
  text14: ["text14"],
  tooltip: [
    "tooltip",
    "content",
    "textAndSupportingText",
    "text15",
    "supportingText3"
  ],

  content: ["content", "textAndSupportingText", "text15", "supportingText3"],
  textAndSupportingText: ["textAndSupportingText", "text15", "supportingText3"],
  text15: ["text15"],
  supportingText3: ["supportingText3"],
  frame145: [
    "frame145",
    "articleModal3",
    "frame126",
    "textModal3",
    "frame136",
    "author3",
    "frame137",
    "heading1BillieHome",
    "supportingText4",
    "categories3",
    "badge9",
    "badgeBase9",
    "text16",
    "badge10",
    "badgeBase10",
    "text17",
    "badge11",
    "badgeBase11",
    "text18",
    "badge12",
    "badgeBase12",
    "text19",
    "frame181",
    "articleModal4",
    "frame127",
    "textModal4",
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5",
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22",
    "tooltip2",
    "content2",
    "textAndSupportingText2",
    "text23",
    "supportingText6"
  ],

  articleModal3: [
    "articleModal3",
    "frame126",
    "textModal3",
    "frame136",
    "author3",
    "frame137",
    "heading1BillieHome",
    "supportingText4",
    "categories3",
    "badge9",
    "badgeBase9",
    "text16",
    "badge10",
    "badgeBase10",
    "text17",
    "badge11",
    "badgeBase11",
    "text18",
    "badge12",
    "badgeBase12",
    "text19"
  ],

  frame126: ["frame126"],
  textModal3: [
    "textModal3",
    "frame136",
    "author3",
    "frame137",
    "heading1BillieHome",
    "supportingText4",
    "categories3",
    "badge9",
    "badgeBase9",
    "text16",
    "badge10",
    "badgeBase10",
    "text17",
    "badge11",
    "badgeBase11",
    "text18",
    "badge12",
    "badgeBase12",
    "text19"
  ],

  frame136: [
    "frame136",
    "author3",
    "frame137",
    "heading1BillieHome",
    "supportingText4"
  ],

  author3: ["author3"],
  frame137: ["frame137", "heading1BillieHome", "supportingText4"],
  heading1BillieHome: ["heading1BillieHome"],
  supportingText4: ["supportingText4"],
  categories3: [
    "categories3",
    "badge9",
    "badgeBase9",
    "text16",
    "badge10",
    "badgeBase10",
    "text17",
    "badge11",
    "badgeBase11",
    "text18",
    "badge12",
    "badgeBase12",
    "text19"
  ],

  badge9: ["badge9", "badgeBase9", "text16"],
  badgeBase9: ["badgeBase9", "text16"],
  text16: ["text16"],
  badge10: ["badge10", "badgeBase10", "text17"],
  badgeBase10: ["badgeBase10", "text17"],
  text17: ["text17"],
  badge11: ["badge11", "badgeBase11", "text18"],
  badgeBase11: ["badgeBase11", "text18"],
  text18: ["text18"],
  badge12: ["badge12", "badgeBase12", "text19"],
  badgeBase12: ["badgeBase12", "text19"],
  text19: ["text19"],
  frame181: [
    "frame181",
    "articleModal4",
    "frame127",
    "textModal4",
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5",
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22",
    "tooltip2",
    "content2",
    "textAndSupportingText2",
    "text23",
    "supportingText6"
  ],

  articleModal4: [
    "articleModal4",
    "frame127",
    "textModal4",
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5",
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22"
  ],

  frame127: ["frame127"],
  textModal4: [
    "textModal4",
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5",
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22"
  ],

  frame138: [
    "frame138",
    "author4",
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5"
  ],

  author4: ["author4"],
  frame139: [
    "frame139",
    "frame150",
    "heading4",
    "iconWrap4",
    "supportingText5"
  ],

  frame150: ["frame150", "heading4", "iconWrap4"],
  heading4: ["heading4"],
  iconWrap4: ["iconWrap4"],
  supportingText5: ["supportingText5"],
  categories4: [
    "categories4",
    "badge13",
    "badgeBase13",
    "text20",
    "badge14",
    "badgeBase14",
    "text21",
    "badge15",
    "badgeBase15",
    "text22"
  ],

  badge13: ["badge13", "badgeBase13", "text20"],
  badgeBase13: ["badgeBase13", "text20"],
  text20: ["text20"],
  badge14: ["badge14", "badgeBase14", "text21"],
  badgeBase14: ["badgeBase14", "text21"],
  text21: ["text21"],
  badge15: ["badge15", "badgeBase15", "text22"],
  badgeBase15: ["badgeBase15", "text22"],
  text22: ["text22"],
  tooltip2: [
    "tooltip2",
    "content2",
    "textAndSupportingText2",
    "text23",
    "supportingText6"
  ],

  content2: ["content2", "textAndSupportingText2", "text23", "supportingText6"],
  textAndSupportingText2: [
    "textAndSupportingText2",
    "text23",
    "supportingText6"
  ],

  text23: ["text23"],
  supportingText6: ["supportingText6"],
  connect: [
    "connect",
    "frame166",
    "frame151",
    "button9",
    "buttonBase7",
    "text24",
    "group",
    "frame156",
    "maskGroup2",
    "group3",
    "frame155",
    "maskGroup",
    "group2"
  ],

  frame166: ["frame166", "frame151", "button9", "buttonBase7", "text24"],
  frame151: ["frame151"],
  button9: ["button9", "buttonBase7", "text24"],
  buttonBase7: ["buttonBase7", "text24"],
  text24: ["text24"],
  group: ["group", "frame156", "maskGroup2", "group3"],
  frame156: ["frame156", "maskGroup2", "group3"],
  maskGroup2: ["maskGroup2"],
  group3: ["group3"],
  frame155: ["frame155", "maskGroup", "group2"],
  maskGroup: ["maskGroup"],
  group2: ["group2"],
  frame157: [
    "frame157",
    "frame168",
    "thanks",
    "frame167",
    "frame162",
    "frame161",
    "frame163",
    "frame164",
    "frame165"
  ],

  frame168: [
    "frame168",
    "thanks",
    "frame167",
    "frame162",
    "frame161",
    "frame163",
    "frame164",
    "frame165"
  ],

  thanks: ["thanks"],
  frame167: [
    "frame167",
    "frame162",
    "frame161",
    "frame163",
    "frame164",
    "frame165"
  ],

  frame162: ["frame162", "frame161", "frame163", "frame164", "frame165"],
  frame161: ["frame161"],
  frame163: ["frame163"],
  frame164: ["frame164"],
  frame165: ["frame165"],
  footer: [
    "footer",
    "frame84",
    "frame82",
    "frame78",
    "yearMade2",
    "frame85",
    "frame86",
    "frame79"
  ],

  frame84: ["frame84", "frame82", "frame78", "yearMade2"],
  frame82: ["frame82", "frame78"],
  frame78: ["frame78"],
  yearMade2: ["yearMade2"],
  frame85: ["frame85", "frame86", "frame79"],
  frame86: ["frame86", "frame79"],
  frame79: ["frame79"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    container: makeNodeComponent("container"),
    navigation: makeNodeComponent("navigation"),
    about: makeNodeComponent("about"),
    buttonBase: makeNodeComponent("buttonBase"),
    resume: makeNodeComponent("resume"),
    button3: makeNodeComponent("button3"),
    buttonBase3: makeNodeComponent("buttonBase3"),
    text3: makeNodeComponent("text3"),
    contact: makeNodeComponent("contact"),
    buttonBase4: makeNodeComponent("buttonBase4"),
    text4: makeNodeComponent("text4"),
    dropdownHeaderNavigation: makeNodeComponent("dropdownHeaderNavigation"),
    body: makeNodeComponent("body"),
    heroSectionContainer: makeNodeComponent("heroSectionContainer"),
    textSide: makeNodeComponent("textSide"),
    makersTextContent: makeNodeComponent("makersTextContent"),
    education: makeNodeComponent("education"),
    frame83: makeNodeComponent("frame83"),
    frame81: makeNodeComponent("frame81"),
    frame77: makeNodeComponent("frame77"),
    yearMade: makeNodeComponent("yearMade"),
    aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent:
      makeNodeComponent(
        "aGraphicDesignerAspiringUiuxDesignerCurrentlyPracticingWhileLearningUserExperienceDesignWritingDigitalentSkilvulUiuxDesignStudent"
      ),

    makersButtonsGroup: makeNodeComponent("makersButtonsGroup"),
    button5: makeNodeComponent("button5"),
    button6: makeNodeComponent("button6"),
    buttonBase5: makeNodeComponent("buttonBase5"),
    text5: makeNodeComponent("text5"),
    button7: makeNodeComponent("button7"),
    button8: makeNodeComponent("button8"),
    buttonBase6: makeNodeComponent("buttonBase6"),
    text6: makeNodeComponent("text6"),
    image: makeNodeComponent("image"),
    imageSide: makeNodeComponent("imageSide"),
    frame147: makeNodeComponent("frame147"),
    frame148: makeNodeComponent("frame148"),
    frame154: makeNodeComponent("frame154"),
    frame153: makeNodeComponent("frame153"),
    works: makeNodeComponent("works"),
    frame149: makeNodeComponent("frame149"),
    frame146: makeNodeComponent("frame146"),
    frame144: makeNodeComponent("frame144"),
    articleModal: makeNodeComponent("articleModal"),
    frame124: makeNodeComponent("frame124"),
    textModal: makeNodeComponent("textModal"),
    frame133: makeNodeComponent("frame133"),
    author: makeNodeComponent("author"),
    frame132: makeNodeComponent("frame132"),
    heading1CoCreateRevampHome: makeNodeComponent("heading1CoCreateRevampHome"),
    supportingText: makeNodeComponent("supportingText"),
    categories: makeNodeComponent("categories"),
    badge: makeNodeComponent("badge"),
    badgeBase: makeNodeComponent("badgeBase"),
    text7: makeNodeComponent("text7"),
    badge2: makeNodeComponent("badge2"),
    badgeBase2: makeNodeComponent("badgeBase2"),
    text8: makeNodeComponent("text8"),
    badge3: makeNodeComponent("badge3"),
    badgeBase3: makeNodeComponent("badgeBase3"),
    text9: makeNodeComponent("text9"),
    badge4: makeNodeComponent("badge4"),
    badgeBase4: makeNodeComponent("badgeBase4"),
    text10: makeNodeComponent("text10"),
    articleModal2: makeNodeComponent("articleModal2"),
    contentContainer: makeNodeComponent("contentContainer"),
    frame125: makeNodeComponent("frame125"),
    textModal2: makeNodeComponent("textModal2"),
    frame134: makeNodeComponent("frame134"),
    author2: makeNodeComponent("author2"),
    frame135: makeNodeComponent("frame135"),
    frame142: makeNodeComponent("frame142"),
    heading2: makeNodeComponent("heading2"),
    iconWrap2: makeNodeComponent("iconWrap2"),
    supportingText2: makeNodeComponent("supportingText2"),
    categories2: makeNodeComponent("categories2"),
    badge5: makeNodeComponent("badge5"),
    badgeBase5: makeNodeComponent("badgeBase5"),
    text11: makeNodeComponent("text11"),
    badge6: makeNodeComponent("badge6"),
    badgeBase6: makeNodeComponent("badgeBase6"),
    text12: makeNodeComponent("text12"),
    badge7: makeNodeComponent("badge7"),
    badgeBase7: makeNodeComponent("badgeBase7"),
    text13: makeNodeComponent("text13"),
    badge8: makeNodeComponent("badge8"),
    badgeBase8: makeNodeComponent("badgeBase8"),
    text14: makeNodeComponent("text14"),
    tooltip: makeNodeComponent("tooltip"),
    content: makeNodeComponent("content"),
    textAndSupportingText: makeNodeComponent("textAndSupportingText"),
    text15: makeNodeComponent("text15"),
    supportingText3: makeNodeComponent("supportingText3"),
    frame145: makeNodeComponent("frame145"),
    articleModal3: makeNodeComponent("articleModal3"),
    frame126: makeNodeComponent("frame126"),
    textModal3: makeNodeComponent("textModal3"),
    frame136: makeNodeComponent("frame136"),
    author3: makeNodeComponent("author3"),
    frame137: makeNodeComponent("frame137"),
    heading1BillieHome: makeNodeComponent("heading1BillieHome"),
    supportingText4: makeNodeComponent("supportingText4"),
    categories3: makeNodeComponent("categories3"),
    badge9: makeNodeComponent("badge9"),
    badgeBase9: makeNodeComponent("badgeBase9"),
    text16: makeNodeComponent("text16"),
    badge10: makeNodeComponent("badge10"),
    badgeBase10: makeNodeComponent("badgeBase10"),
    text17: makeNodeComponent("text17"),
    badge11: makeNodeComponent("badge11"),
    badgeBase11: makeNodeComponent("badgeBase11"),
    text18: makeNodeComponent("text18"),
    badge12: makeNodeComponent("badge12"),
    badgeBase12: makeNodeComponent("badgeBase12"),
    text19: makeNodeComponent("text19"),
    frame181: makeNodeComponent("frame181"),
    articleModal4: makeNodeComponent("articleModal4"),
    frame127: makeNodeComponent("frame127"),
    textModal4: makeNodeComponent("textModal4"),
    frame138: makeNodeComponent("frame138"),
    author4: makeNodeComponent("author4"),
    frame139: makeNodeComponent("frame139"),
    frame150: makeNodeComponent("frame150"),
    heading4: makeNodeComponent("heading4"),
    iconWrap4: makeNodeComponent("iconWrap4"),
    supportingText5: makeNodeComponent("supportingText5"),
    categories4: makeNodeComponent("categories4"),
    badge13: makeNodeComponent("badge13"),
    badgeBase13: makeNodeComponent("badgeBase13"),
    text20: makeNodeComponent("text20"),
    badge14: makeNodeComponent("badge14"),
    badgeBase14: makeNodeComponent("badgeBase14"),
    text21: makeNodeComponent("text21"),
    badge15: makeNodeComponent("badge15"),
    badgeBase15: makeNodeComponent("badgeBase15"),
    text22: makeNodeComponent("text22"),
    tooltip2: makeNodeComponent("tooltip2"),
    content2: makeNodeComponent("content2"),
    textAndSupportingText2: makeNodeComponent("textAndSupportingText2"),
    text23: makeNodeComponent("text23"),
    supportingText6: makeNodeComponent("supportingText6"),
    connect: makeNodeComponent("connect"),
    frame166: makeNodeComponent("frame166"),
    frame151: makeNodeComponent("frame151"),
    button9: makeNodeComponent("button9"),
    buttonBase7: makeNodeComponent("buttonBase7"),
    text24: makeNodeComponent("text24"),
    group: makeNodeComponent("group"),
    frame156: makeNodeComponent("frame156"),
    maskGroup2: makeNodeComponent("maskGroup2"),
    group3: makeNodeComponent("group3"),
    frame155: makeNodeComponent("frame155"),
    maskGroup: makeNodeComponent("maskGroup"),
    group2: makeNodeComponent("group2"),
    frame157: makeNodeComponent("frame157"),
    frame168: makeNodeComponent("frame168"),
    thanks: makeNodeComponent("thanks"),
    frame167: makeNodeComponent("frame167"),
    frame162: makeNodeComponent("frame162"),
    frame161: makeNodeComponent("frame161"),
    frame163: makeNodeComponent("frame163"),
    frame164: makeNodeComponent("frame164"),
    frame165: makeNodeComponent("frame165"),
    footer: makeNodeComponent("footer"),
    frame84: makeNodeComponent("frame84"),
    frame82: makeNodeComponent("frame82"),
    frame78: makeNodeComponent("frame78"),
    yearMade2: makeNodeComponent("yearMade2"),
    frame85: makeNodeComponent("frame85"),
    frame86: makeNodeComponent("frame86"),
    frame79: makeNodeComponent("frame79"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
